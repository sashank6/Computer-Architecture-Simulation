debug mode on
Experiments 2 & 3: Modeling Memory Dependences
Experiment 3: Modeling Perfect Memory Scheduling
Trace name  				sjeng-1K
Instruction Limit			none
Processor Configuration:
  Machine Width 			8
  Number of Logical Registers 		50
  Number of Physical Registers 		2048
  ROB Size 				128
  modeling memory dependences: Perfect Memory Scheduling
#: F I D C 	 Reg Mappings [freeMe] | Mop Uop
1: 0 1 2 2, r49 -> p49 | J JMP_IMM 
2: 0 1 5 5, r1 -> p1, r44 -> p50 [p44] | MOVSX LOAD 
3: 0 5 6 6, r44 -> p50, r2 -> p51 [p2] | MOVSX SEXT_DWORD_TO_QWORD 
4: 0 6 7 7, r7 -> p7, r2 -> p51, r6 -> p52 [p6] | LEA LEA 
5: 0 7 8 8, r6 -> p52, r6 -> p53 [p52] | MOVSX SEXT_DWORD_TO_QWORD 
6: 0 8 12 12, r6 -> p53, r6 -> p54 [p53] | MOV LOAD 
7: 0 12 13 13, r6 -> p54, r44 -> p55 [p50], r49 -> p56 [p49] | CMP SUB_IMM 
8: 0 13 14 14, r49 -> p56 | J JMP_IMM 
9: 1 12 13 14, r6 -> p54, r44 -> p57 [p55], r49 -> p58 [p56] | CMP SUB_IMM 
10: 1 13 14 14, r49 -> p58 | J JMP_IMM 
11: 1 6 7 14, r2 -> p51, r8 -> p59 [p8] | MOV ADD 
12: 1 7 8 14, r8 -> p59, r7 -> p7, r8 -> p60 [p59] | LEA LEA 
13: 1 8 9 14, r8 -> p60, r8 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD 
14: 1 9 10 14, r8 -> p61, r8 -> p62 [p61] | LEA LEA 
15: 1 6 7 14, r2 -> p51, r2 -> p63 [p51], r49 -> p64 [p58] | SHL SHL_IMM 
16: 1 2 3 15 | JMP JMP_IMM 
17: 2 12 13 15, r6 -> p54, r44 -> p65 [p57], r49 -> p66 [p64] | CMP SUB_IMM 
18: 2 13 14 15, r49 -> p66 | J JMP_IMM 
19: 2 12 13 15, r6 -> p54, r44 -> p67 [p65], r49 -> p68 [p66] | CMP SUB_IMM 
20: 2 13 14 15, r49 -> p68 | J JMP_IMM 
21: 2 12 13 15, r6 -> p54, r44 -> p69 [p67], r49 -> p70 [p68] | CMP SUB_IMM 
22: 2 13 14 15, r49 -> p70 | J JMP_IMM 
23: 2 3 4 15, r1 -> p1, r1 -> p71 [p1], r49 -> p72 [p70] | ADD ADD_IMM 
24: 2 3 4 16, r0 -> p0, r0 -> p73 [p0] | INC ADD_IMM 
25: 3 4 5 16, r0 -> p73, r44 -> p74 [p69], r49 -> p75 [p72] | CMP SUB_IMM 
26: 3 5 6 16, r49 -> p75 | J JMP_IMM 
27: 3 4 8 16, r1 -> p71, r44 -> p76 [p74] | MOVSX LOAD 
28: 3 8 9 16, r44 -> p76, r2 -> p77 [p63] | MOVSX SEXT_DWORD_TO_QWORD 
29: 3 9 10 16, r7 -> p7, r2 -> p77, r6 -> p78 [p54] | LEA LEA 
30: 3 10 11 16, r6 -> p78, r6 -> p79 [p78] | MOVSX SEXT_DWORD_TO_QWORD 
31: 3 11 15 16, r6 -> p79, r6 -> p80 [p79] | MOV LOAD 
32: 3 15 16 17, r6 -> p80, r44 -> p81 [p76], r49 -> p82 [p75] | CMP SUB_IMM 
33: 4 16 17 17, r49 -> p82 | J JMP_IMM 
34: 4 15 16 17, r6 -> p80, r44 -> p83 [p81], r49 -> p84 [p82] | CMP SUB_IMM 
35: 4 16 17 17, r49 -> p84 | J JMP_IMM 
36: 4 9 10 17, r2 -> p77, r8 -> p85 [p62] | MOV ADD 
37: 4 10 11 17, r8 -> p85, r7 -> p7, r8 -> p86 [p85] | LEA LEA 
38: 4 11 12 17, r8 -> p86, r8 -> p87 [p86] | MOVSX SEXT_DWORD_TO_QWORD 
39: 4 12 13 17, r8 -> p87, r8 -> p88 [p87] | LEA LEA 
40: 4 9 10 18, r2 -> p77, r2 -> p89 [p77], r49 -> p90 [p84] | SHL SHL_IMM 
41: 5 6 7 18 | JMP JMP_IMM 
42: 5 15 16 18, r6 -> p80, r44 -> p91 [p83], r49 -> p92 [p90] | CMP SUB_IMM 
43: 5 16 17 18, r49 -> p92 | J JMP_IMM 
44: 5 15 16 18, r6 -> p80, r44 -> p93 [p91], r49 -> p94 [p92] | CMP SUB_IMM 
45: 5 16 17 18, r49 -> p94 | J JMP_IMM 
46: 5 15 16 18, r6 -> p80, r44 -> p95 [p93], r49 -> p96 [p94] | CMP SUB_IMM 
47: 5 16 17 18, r49 -> p96 | J JMP_IMM 
48: 5 6 7 19, r1 -> p71, r1 -> p97 [p71], r49 -> p98 [p96] | ADD ADD_IMM 
49: 6 7 8 19, r0 -> p73, r0 -> p99 [p73] | INC ADD_IMM 
50: 6 8 9 19, r0 -> p99, r44 -> p100 [p95], r49 -> p101 [p98] | CMP SUB_IMM 
51: 6 9 10 19, r49 -> p101 | J JMP_IMM 
52: 6 7 11 19, r1 -> p97, r44 -> p102 [p100] | MOVSX LOAD 
53: 6 11 12 19, r44 -> p102, r2 -> p103 [p89] | MOVSX SEXT_DWORD_TO_QWORD 
54: 6 12 13 19, r7 -> p7, r2 -> p103, r6 -> p104 [p80] | LEA LEA 
55: 6 13 14 19, r6 -> p104, r6 -> p105 [p104] | MOVSX SEXT_DWORD_TO_QWORD 
56: 6 14 18 20, r6 -> p105, r6 -> p106 [p105] | MOV LOAD 
57: 7 18 19 20, r6 -> p106, r44 -> p107 [p102], r49 -> p108 [p101] | CMP SUB_IMM 
58: 7 19 20 20, r49 -> p108 | J JMP_IMM 
59: 7 18 19 20, r6 -> p106, r44 -> p109 [p107], r49 -> p110 [p108] | CMP SUB_IMM 
60: 7 19 20 20, r49 -> p110 | J JMP_IMM 
61: 7 12 13 20, r2 -> p103, r8 -> p111 [p88] | MOV ADD 
62: 7 13 14 20, r8 -> p111, r7 -> p7, r8 -> p112 [p111] | LEA LEA 
63: 7 14 15 20, r8 -> p112, r8 -> p113 [p112] | MOVSX SEXT_DWORD_TO_QWORD 
64: 7 15 16 21, r8 -> p113, r8 -> p114 [p113] | LEA LEA 
65: 8 13 14 21, r2 -> p103, r2 -> p115 [p103], r49 -> p116 [p110] | SHL SHL_IMM 
66: 8 9 10 21 | JMP JMP_IMM 
67: 8 18 19 21, r6 -> p106, r44 -> p117 [p109], r49 -> p118 [p116] | CMP SUB_IMM 
68: 8 19 20 21, r49 -> p118 | J JMP_IMM 
69: 8 18 19 21, r6 -> p106, r44 -> p119 [p117], r49 -> p120 [p118] | CMP SUB_IMM 
70: 8 19 20 21, r49 -> p120 | J JMP_IMM 
71: 8 18 19 21, r6 -> p106, r44 -> p121 [p119], r49 -> p122 [p120] | CMP SUB_IMM 
72: 8 19 20 22, r49 -> p122 | J JMP_IMM 
73: 9 10 11 22, r1 -> p97, r1 -> p123 [p97], r49 -> p124 [p122] | ADD ADD_IMM 
74: 9 10 11 22, r0 -> p99, r0 -> p125 [p99] | INC ADD_IMM 
75: 9 11 12 22, r0 -> p125, r44 -> p126 [p121], r49 -> p127 [p124] | CMP SUB_IMM 
76: 9 14 15 22, r49 -> p127 | J JMP_IMM 
77: 9 10 11 22, r0 -> p128 [p125] | XOR ADD 
78: 9 10 11 22, r1 -> p129 [p123] | MOV ADD_IMM 
79: 9 10 11 22 | JMP JMP_IMM 
80: 9 11 12 23, r0 -> p128, r44 -> p130 [p126], r49 -> p131 [p127] | CMP SUB_IMM 
81: 10 14 15 23, r49 -> p131 | J JMP_IMM 
82: 10 11 12 23, r7 -> p7, r2 -> p132 [p115] | MOV ADD 
83: 10 11 15 23, r1 -> p129, r44 -> p133 [p130] | ADD LOAD 
84: 10 15 16 23, r2 -> p132, r44 -> p133, r2 -> p134 [p132], r49 -> p135 [p131] | ADD ADD 
85: 10 16 17 23, r2 -> p134, r2 -> p136 [p134] | MOVSX SEXT_DWORD_TO_QWORD 
86: 10 17 21 23, r2 -> p136, r45 -> p137 [p45] | CMP LOAD 
87: 10 21 22 23, r45 -> p137, r44 -> p138 [p133], r49 -> p139 [p135] | CMP SUB_IMM 
88: 10 22 23 24, r49 -> p139 | J JMP_IMM 
89: 11 14 15 24, r1 -> p129, r1 -> p140 [p129], r49 -> p141 [p139] | ADD ADD_IMM 
90: 11 14 15 24, r0 -> p128, r0 -> p142 [p128] | INC ADD_IMM 
91: 11 15 16 24, r0 -> p142, r44 -> p143 [p138], r49 -> p144 [p141] | CMP SUB_IMM 
92: 11 16 17 24, r49 -> p144 | J JMP_IMM 
93: 11 14 15 24, r7 -> p7, r2 -> p145 [p136] | MOV ADD 
94: 11 16 20 24, r1 -> p140, r44 -> p146 [p143] | ADD LOAD 
95: 11 20 21 24, r2 -> p145, r44 -> p146, r2 -> p147 [p145], r49 -> p148 [p144] | ADD ADD 
96: 11 21 22 25, r2 -> p147, r2 -> p149 [p147] | MOVSX SEXT_DWORD_TO_QWORD 
97: 12 22 26 26, r2 -> p149, r45 -> p150 [p137] | CMP LOAD 
98: 12 26 27 27, r45 -> p150, r44 -> p151 [p146], r49 -> p152 [p148] | CMP SUB_IMM 
99: 12 27 28 28, r49 -> p152 | J JMP_IMM 
100: 12 17 18 28, r1 -> p140, r1 -> p153 [p140], r49 -> p154 [p152] | ADD ADD_IMM 
101: 12 17 18 28, r0 -> p142, r0 -> p155 [p142] | INC ADD_IMM 
102: 12 18 19 28, r0 -> p155, r44 -> p156 [p151], r49 -> p157 [p154] | CMP SUB_IMM 
103: 12 19 20 28, r49 -> p157 | J JMP_IMM 
104: 12 14 15 28, r7 -> p7, r2 -> p158 [p149] | MOV ADD 
105: 13 18 22 28, r1 -> p153, r44 -> p159 [p156] | ADD LOAD 
106: 13 22 23 28, r2 -> p158, r44 -> p159, r2 -> p160 [p158], r49 -> p161 [p157] | ADD ADD 
107: 13 23 24 29, r2 -> p160, r2 -> p162 [p160] | MOVSX SEXT_DWORD_TO_QWORD 
108: 13 24 28 29, r2 -> p162, r45 -> p163 [p150] | CMP LOAD 
109: 13 28 29 29, r45 -> p163, r44 -> p164 [p159], r49 -> p165 [p161] | CMP SUB_IMM 
110: 13 29 30 30, r49 -> p165 | J JMP_IMM 
111: 13 18 19 30, r1 -> p153, r1 -> p166 [p153], r49 -> p167 [p165] | ADD ADD_IMM 
112: 13 19 20 30, r0 -> p155, r0 -> p168 [p155] | INC ADD_IMM 
113: 14 20 21 30, r0 -> p168, r44 -> p169 [p164], r49 -> p170 [p167] | CMP SUB_IMM 
114: 14 21 22 30, r49 -> p170 | J JMP_IMM 
115: 14 17 18 30, r7 -> p7, r2 -> p171 [p162] | MOV ADD 
116: 14 19 23 30, r1 -> p166, r44 -> p172 [p169] | ADD LOAD 
117: 14 23 24 30, r2 -> p171, r44 -> p172, r2 -> p173 [p171], r49 -> p174 [p170] | ADD ADD 
118: 14 24 25 31, r2 -> p173, r2 -> p175 [p173] | MOVSX SEXT_DWORD_TO_QWORD 
119: 14 25 29 31, r2 -> p175, r45 -> p176 [p163] | CMP LOAD 
120: 14 29 30 31, r45 -> p176, r44 -> p177 [p172], r49 -> p178 [p174] | CMP SUB_IMM 
121: 15 30 31 31, r49 -> p178 | J JMP_IMM 
122: 15 20 21 31, r1 -> p166, r1 -> p179 [p166], r49 -> p180 [p178] | ADD ADD_IMM 
123: 15 20 21 31, r0 -> p168, r0 -> p181 [p168] | INC ADD_IMM 
124: 15 21 22 31, r0 -> p181, r44 -> p182 [p177], r49 -> p183 [p180] | CMP SUB_IMM 
125: 15 22 23 31, r49 -> p183 | J JMP_IMM 
126: 15 17 18 32, r7 -> p7, r2 -> p184 [p175] | MOV ADD 
127: 15 21 25 32, r1 -> p179, r44 -> p185 [p182] | ADD LOAD 
128: 15 25 26 32, r2 -> p184, r44 -> p185, r2 -> p186 [p184], r49 -> p187 [p183] | ADD ADD 
129: 16 26 27 32, r2 -> p186, r2 -> p188 [p186] | MOVSX SEXT_DWORD_TO_QWORD 
130: 16 27 31 32, r2 -> p188, r45 -> p189 [p176] | CMP LOAD 
131: 16 31 32 32, r45 -> p189, r44 -> p190 [p185], r49 -> p191 [p187] | CMP SUB_IMM 
132: 16 32 33 33, r49 -> p191 | J JMP_IMM 
133: 16 21 22 33, r1 -> p179, r1 -> p192 [p179], r49 -> p193 [p191] | ADD ADD_IMM 
134: 16 21 22 33, r0 -> p181, r0 -> p194 [p181] | INC ADD_IMM 
135: 16 22 23 33, r0 -> p194, r44 -> p195 [p190], r49 -> p196 [p193] | CMP SUB_IMM 
136: 16 23 24 33, r49 -> p196 | J JMP_IMM 
137: 17 20 21 33, r7 -> p7, r2 -> p197 [p188] | MOV ADD 
138: 17 22 26 33, r1 -> p192, r44 -> p198 [p195] | ADD LOAD 
139: 17 26 27 33, r2 -> p197, r44 -> p198, r2 -> p199 [p197], r49 -> p200 [p196] | ADD ADD 
140: 17 27 28 34, r2 -> p199, r2 -> p201 [p199] | MOVSX SEXT_DWORD_TO_QWORD 
141: 17 28 32 34, r2 -> p201, r45 -> p202 [p189] | CMP LOAD 
142: 17 32 33 34, r45 -> p202, r44 -> p203 [p198], r49 -> p204 [p200] | CMP SUB_IMM 
143: 17 33 34 34, r49 -> p204 | J JMP_IMM 
144: 17 22 23 34, r1 -> p192, r1 -> p205 [p192], r49 -> p206 [p204] | ADD ADD_IMM 
145: 18 22 23 34, r0 -> p194, r0 -> p207 [p194] | INC ADD_IMM 
146: 18 23 24 34, r0 -> p207, r44 -> p208 [p203], r49 -> p209 [p206] | CMP SUB_IMM 
147: 18 24 25 34, r49 -> p209 | J JMP_IMM 
148: 18 20 21 35, r7 -> p7, r2 -> p210 [p201] | MOV ADD 
149: 18 23 27 35, r1 -> p205, r44 -> p211 [p208] | ADD LOAD 
150: 18 27 28 35, r2 -> p210, r44 -> p211, r2 -> p212 [p210], r49 -> p213 [p209] | ADD ADD 
151: 18 28 29 35, r2 -> p212, r2 -> p214 [p212] | MOVSX SEXT_DWORD_TO_QWORD 
152: 18 29 33 35, r2 -> p214, r45 -> p215 [p202] | CMP LOAD 
153: 19 33 34 35, r45 -> p215, r44 -> p216 [p211], r49 -> p217 [p213] | CMP SUB_IMM 
154: 19 34 35 35, r49 -> p217 | J JMP_IMM 
155: 19 23 24 35, r1 -> p205, r1 -> p218 [p205], r49 -> p219 [p217] | ADD ADD_IMM 
156: 19 23 24 36, r0 -> p207, r0 -> p220 [p207] | INC ADD_IMM 
157: 19 24 25 36, r0 -> p220, r44 -> p221 [p216], r49 -> p222 [p219] | CMP SUB_IMM 
158: 19 25 26 36, r49 -> p222 | J JMP_IMM 
159: 19 20 21 36, r7 -> p7, r2 -> p223 [p214] | MOV ADD 
160: 19 24 28 36, r1 -> p218, r44 -> p224 [p221] | ADD LOAD 
161: 20 28 29 36, r2 -> p223, r44 -> p224, r2 -> p225 [p223], r49 -> p226 [p222] | ADD ADD 
162: 20 29 30 36, r2 -> p225, r2 -> p227 [p225] | MOVSX SEXT_DWORD_TO_QWORD 
163: 20 30 34 36, r2 -> p227, r45 -> p228 [p215] | CMP LOAD 
164: 20 34 35 37, r45 -> p228, r44 -> p229 [p224], r49 -> p230 [p226] | CMP SUB_IMM 
165: 20 35 36 37, r49 -> p230 | J JMP_IMM 
166: 20 24 25 37, r1 -> p218, r1 -> p231 [p218], r49 -> p232 [p230] | ADD ADD_IMM 
167: 20 24 25 37, r0 -> p220, r0 -> p233 [p220] | INC ADD_IMM 
168: 20 25 26 37, r0 -> p233, r44 -> p234 [p229], r49 -> p235 [p232] | CMP SUB_IMM 
169: 21 26 27 37, r49 -> p235 | J JMP_IMM 
170: 21 23 24 37, r0 -> p236 [p233] | XOR ADD 
171: 21 24 25 37, r1 -> p237 [p231] | MOV ADD_IMM 
172: 21 25 26 38 | JMP JMP_IMM 
173: 21 25 26 38, r0 -> p236, r44 -> p238 [p234], r49 -> p239 [p235] | CMP SUB_IMM 
174: 21 26 27 38, r49 -> p239 | J JMP_IMM 
175: 21 25 29 38, r1 -> p237, r44 -> p240 [p238] | MOVSX LOAD 
176: 21 29 30 38, r44 -> p240, r2 -> p241 [p227] | MOVSX SEXT_DWORD_TO_QWORD 
177: 22 30 31 38, r7 -> p7, r2 -> p241, r6 -> p242 [p106] | LEA LEA 
178: 22 31 32 38, r6 -> p242, r6 -> p243 [p242] | MOVSX SEXT_DWORD_TO_QWORD 
179: 22 32 36 38, r6 -> p243, r6 -> p244 [p243] | MOV LOAD 
180: 22 36 37 39, r6 -> p244, r44 -> p245 [p240], r49 -> p246 [p239] | CMP SUB_IMM 
181: 22 37 38 39, r49 -> p246 | J JMP_IMM 
182: 22 30 31 39, r2 -> p241, r8 -> p247 [p114] | MOV ADD 
183: 22 31 32 39, r8 -> p247, r7 -> p7, r8 -> p248 [p247] | LEA LEA 
184: 22 32 33 39, r8 -> p248, r8 -> p249 [p248] | MOVSX SEXT_DWORD_TO_QWORD 
185: 23 33 34 39, r8 -> p249, r8 -> p250 [p249] | LEA LEA 
186: 23 30 31 39, r2 -> p241, r2 -> p251 [p241], r49 -> p252 [p246] | SHL SHL_IMM 
187: 23 25 26 39 | JMP JMP_IMM 
188: 23 36 37 40, r6 -> p244, r44 -> p253 [p245], r49 -> p254 [p252] | CMP SUB_IMM 
189: 23 37 38 40, r49 -> p254 | J JMP_IMM 
190: 23 36 37 40, r6 -> p244, r44 -> p255 [p253], r49 -> p256 [p254] | CMP SUB_IMM 
191: 23 37 38 40, r49 -> p256 | J JMP_IMM 
192: 23 36 37 40, r6 -> p244, r44 -> p257 [p255], r49 -> p258 [p256] | CMP SUB_IMM 
193: 24 37 38 40, r49 -> p258 | J JMP_IMM 
194: 24 26 27 40, r1 -> p237, r1 -> p259 [p237], r49 -> p260 [p258] | ADD ADD_IMM 
195: 24 26 27 40, r0 -> p236, r0 -> p261 [p236] | INC ADD_IMM 
196: 24 27 28 41, r0 -> p261, r44 -> p262 [p257], r49 -> p263 [p260] | CMP SUB_IMM 
197: 24 28 29 41, r49 -> p263 | J JMP_IMM 
198: 24 27 31 41, r1 -> p259, r44 -> p264 [p262] | MOVSX LOAD 
199: 24 31 32 41, r44 -> p264, r2 -> p265 [p251] | MOVSX SEXT_DWORD_TO_QWORD 
200: 24 32 33 41, r7 -> p7, r2 -> p265, r6 -> p266 [p244] | LEA LEA 
201: 25 33 34 41, r6 -> p266, r6 -> p267 [p266] | MOVSX SEXT_DWORD_TO_QWORD 
202: 25 34 38 41, r6 -> p267, r6 -> p268 [p267] | MOV LOAD 
203: 25 38 39 41, r6 -> p268, r44 -> p269 [p264], r49 -> p270 [p263] | CMP SUB_IMM 
204: 25 39 40 42, r49 -> p270 | J JMP_IMM 
205: 25 32 33 42, r2 -> p265, r8 -> p271 [p250] | MOV ADD 
206: 25 33 34 42, r8 -> p271, r7 -> p7, r8 -> p272 [p271] | LEA LEA 
207: 25 34 35 42, r8 -> p272, r8 -> p273 [p272] | MOVSX SEXT_DWORD_TO_QWORD 
208: 25 35 36 42, r8 -> p273, r8 -> p274 [p273] | LEA LEA 
209: 26 32 33 42, r2 -> p265, r2 -> p275 [p265], r49 -> p276 [p270] | SHL SHL_IMM 
210: 26 27 28 42 | JMP JMP_IMM 
211: 26 38 39 42, r6 -> p268, r44 -> p277 [p269], r49 -> p278 [p276] | CMP SUB_IMM 
212: 26 39 40 43, r49 -> p278 | J JMP_IMM 
213: 26 38 39 43, r6 -> p268, r44 -> p279 [p277], r49 -> p280 [p278] | CMP SUB_IMM 
214: 26 39 40 43, r49 -> p280 | J JMP_IMM 
215: 26 38 39 43, r6 -> p268, r44 -> p281 [p279], r49 -> p282 [p280] | CMP SUB_IMM 
216: 26 39 40 43, r49 -> p282 | J JMP_IMM 
217: 27 36 40 43, r8 -> p274, r6 -> p283 [p268] | MOV LOAD 
218: 27 36 37 43, r8 -> p274, r2 -> p275, r8 -> p284 [p274], r49 -> p285 [p282] | ADD ADD 
219: 27 40 41 43, r6 -> p283, r44 -> p286 [p281], r49 -> p287 [p285] | CMP SUB_IMM 
220: 27 41 42 44, r49 -> p287 | J JMP_IMM 
221: 27 40 41 44, r6 -> p283, r44 -> p288 [p286], r49 -> p289 [p287] | CMP SUB_IMM 
222: 27 41 42 44, r49 -> p289 | J JMP_IMM 
223: 27 40 41 44, r6 -> p283, r44 -> p290 [p288], r49 -> p291 [p289] | CMP SUB_IMM 
224: 27 41 42 44, r49 -> p291 | J JMP_IMM 
225: 28 37 41 44, r8 -> p284, r6 -> p292 [p283] | MOV LOAD 
226: 28 37 38 44, r8 -> p284, r2 -> p275, r8 -> p293 [p284], r49 -> p294 [p291] | ADD ADD 
227: 28 41 42 44, r6 -> p292, r44 -> p295 [p290], r49 -> p296 [p294] | CMP SUB_IMM 
228: 28 42 43 45, r49 -> p296 | J JMP_IMM 
229: 28 41 42 45, r6 -> p292, r44 -> p297 [p295], r49 -> p298 [p296] | CMP SUB_IMM 
230: 28 42 43 45, r49 -> p298 | J JMP_IMM 
231: 28 41 42 45, r6 -> p292, r44 -> p299 [p297], r49 -> p300 [p298] | CMP SUB_IMM 
232: 28 42 43 45, r49 -> p300 | J JMP_IMM 
233: 29 30 31 45, r1 -> p259, r1 -> p301 [p259], r49 -> p302 [p300] | ADD ADD_IMM 
234: 29 30 31 45, r0 -> p261, r0 -> p303 [p261] | INC ADD_IMM 
235: 29 31 32 45, r0 -> p303, r44 -> p304 [p299], r49 -> p305 [p302] | CMP SUB_IMM 
236: 29 32 33 46, r49 -> p305 | J JMP_IMM 
237: 29 31 35 46, r1 -> p301, r44 -> p306 [p304] | MOVSX LOAD 
238: 30 35 36 46, r44 -> p306, r2 -> p307 [p275] | MOVSX SEXT_DWORD_TO_QWORD 
239: 30 36 37 46, r7 -> p7, r2 -> p307, r6 -> p308 [p292] | LEA LEA 
240: 30 37 38 46, r6 -> p308, r6 -> p309 [p308] | MOVSX SEXT_DWORD_TO_QWORD 
241: 30 38 42 46, r6 -> p309, r6 -> p310 [p309] | MOV LOAD 
242: 30 42 43 46, r6 -> p310, r44 -> p311 [p306], r49 -> p312 [p305] | CMP SUB_IMM 
243: 30 43 44 46, r49 -> p312 | J JMP_IMM 
244: 30 36 37 47, r2 -> p307, r8 -> p313 [p293] | MOV ADD 
245: 30 37 38 47, r8 -> p313, r7 -> p7, r8 -> p314 [p313] | LEA LEA 
246: 31 38 39 47, r8 -> p314, r8 -> p315 [p314] | MOVSX SEXT_DWORD_TO_QWORD 
247: 31 39 40 47, r8 -> p315, r8 -> p316 [p315] | LEA LEA 
248: 31 38 39 47, r2 -> p307, r2 -> p317 [p307], r49 -> p318 [p312] | SHL SHL_IMM 
249: 31 33 34 47 | JMP JMP_IMM 
250: 31 42 43 47, r6 -> p310, r44 -> p319 [p311], r49 -> p320 [p318] | CMP SUB_IMM 
251: 31 43 44 47, r49 -> p320 | J JMP_IMM 
252: 31 42 43 48, r6 -> p310, r44 -> p321 [p319], r49 -> p322 [p320] | CMP SUB_IMM 
253: 31 43 44 48, r49 -> p322 | J JMP_IMM 
254: 32 42 43 48, r6 -> p310, r44 -> p323 [p321], r49 -> p324 [p322] | CMP SUB_IMM 
255: 32 43 44 48, r49 -> p324 | J JMP_IMM 
256: 32 40 44 48, r8 -> p316, r6 -> p325 [p310] | MOV LOAD 
257: 32 40 41 48, r8 -> p316, r2 -> p317, r8 -> p326 [p316], r49 -> p327 [p324] | ADD ADD 
258: 32 44 45 48, r6 -> p325, r44 -> p328 [p323], r49 -> p329 [p327] | CMP SUB_IMM 
259: 32 45 46 48, r49 -> p329 | J JMP_IMM 
260: 33 44 45 49, r6 -> p325, r44 -> p330 [p328], r49 -> p331 [p329] | CMP SUB_IMM 
261: 33 45 46 49, r49 -> p331 | J JMP_IMM 
262: 33 44 45 49, r6 -> p325, r44 -> p332 [p330], r49 -> p333 [p331] | CMP SUB_IMM 
263: 33 45 46 49, r49 -> p333 | J JMP_IMM 
264: 33 41 45 49, r8 -> p326, r6 -> p334 [p325] | MOV LOAD 
265: 33 41 42 49, r8 -> p326, r2 -> p317, r8 -> p335 [p326], r49 -> p336 [p333] | ADD ADD 
266: 33 45 46 49, r6 -> p334, r44 -> p337 [p332], r49 -> p338 [p336] | CMP SUB_IMM 
267: 33 46 47 49, r49 -> p338 | J JMP_IMM 
268: 34 45 46 50, r6 -> p334, r44 -> p339 [p337], r49 -> p340 [p338] | CMP SUB_IMM 
269: 34 46 47 50, r49 -> p340 | J JMP_IMM 
270: 34 45 46 50, r6 -> p334, r44 -> p341 [p339], r49 -> p342 [p340] | CMP SUB_IMM 
271: 34 46 47 50, r49 -> p342 | J JMP_IMM 
272: 34 35 36 50, r1 -> p301, r1 -> p343 [p301], r49 -> p344 [p342] | ADD ADD_IMM 
273: 34 35 36 50, r0 -> p303, r0 -> p345 [p303] | INC ADD_IMM 
274: 34 38 39 50, r0 -> p345, r44 -> p346 [p341], r49 -> p347 [p344] | CMP SUB_IMM 
275: 34 39 40 50, r49 -> p347 | J JMP_IMM 
276: 35 39 43 51, r1 -> p343, r44 -> p348 [p346] | MOVSX LOAD 
277: 35 43 44 51, r44 -> p348, r2 -> p349 [p317] | MOVSX SEXT_DWORD_TO_QWORD 
278: 35 44 45 51, r7 -> p7, r2 -> p349, r6 -> p350 [p334] | LEA LEA 
279: 35 45 46 51, r6 -> p350, r6 -> p351 [p350] | MOVSX SEXT_DWORD_TO_QWORD 
280: 35 46 50 51, r6 -> p351, r6 -> p352 [p351] | MOV LOAD 
281: 35 50 51 51, r6 -> p352, r44 -> p353 [p348], r49 -> p354 [p347] | CMP SUB_IMM 
282: 35 51 52 52, r49 -> p354 | J JMP_IMM 
283: 35 44 45 52, r2 -> p349, r8 -> p355 [p335] | MOV ADD 
284: 36 45 46 52, r8 -> p355, r7 -> p7, r8 -> p356 [p355] | LEA LEA 
285: 36 46 47 52, r8 -> p356, r8 -> p357 [p356] | MOVSX SEXT_DWORD_TO_QWORD 
286: 36 47 48 52, r8 -> p357, r8 -> p358 [p357] | LEA LEA 
287: 36 44 45 52, r2 -> p349, r2 -> p359 [p349], r49 -> p360 [p354] | SHL SHL_IMM 
288: 36 39 40 52 | JMP JMP_IMM 
289: 36 50 51 52, r6 -> p352, r44 -> p361 [p353], r49 -> p362 [p360] | CMP SUB_IMM 
290: 36 51 52 53, r49 -> p362 | J JMP_IMM 
291: 36 50 51 53, r6 -> p352, r44 -> p363 [p361], r49 -> p364 [p362] | CMP SUB_IMM 
292: 37 51 52 53, r49 -> p364 | J JMP_IMM 
293: 37 50 51 53, r6 -> p352, r44 -> p365 [p363], r49 -> p366 [p364] | CMP SUB_IMM 
294: 37 51 52 53, r49 -> p366 | J JMP_IMM 
295: 37 48 52 53, r8 -> p358, r6 -> p367 [p352] | MOV LOAD 
296: 37 48 49 53, r8 -> p358, r2 -> p359, r8 -> p368 [p358], r49 -> p369 [p366] | ADD ADD 
297: 37 52 53 53, r6 -> p367, r44 -> p370 [p365], r49 -> p371 [p369] | CMP SUB_IMM 
298: 37 53 54 54, r49 -> p371 | J JMP_IMM 
299: 37 52 53 54, r6 -> p367, r44 -> p372 [p370], r49 -> p373 [p371] | CMP SUB_IMM 
300: 38 53 54 54, r49 -> p373 | J JMP_IMM 
301: 38 52 53 54, r6 -> p367, r44 -> p374 [p372], r49 -> p375 [p373] | CMP SUB_IMM 
302: 38 53 54 54, r49 -> p375 | J JMP_IMM 
303: 38 49 53 54, r8 -> p368, r6 -> p376 [p367] | MOV LOAD 
304: 38 49 50 54, r8 -> p368, r2 -> p359, r8 -> p377 [p368], r49 -> p378 [p375] | ADD ADD 
305: 38 53 54 54, r6 -> p376, r44 -> p379 [p374], r49 -> p380 [p378] | CMP SUB_IMM 
306: 38 54 55 55, r49 -> p380 | J JMP_IMM 
307: 38 53 54 55, r6 -> p376, r44 -> p381 [p379], r49 -> p382 [p380] | CMP SUB_IMM 
308: 39 54 55 55, r49 -> p382 | J JMP_IMM 
309: 39 53 54 55, r6 -> p376, r44 -> p383 [p381], r49 -> p384 [p382] | CMP SUB_IMM 
310: 39 54 55 55, r49 -> p384 | J JMP_IMM 
311: 39 50 54 55, r8 -> p377, r6 -> p385 [p376] | MOV LOAD 
312: 39 50 51 55, r8 -> p377, r2 -> p359, r8 -> p386 [p377], r49 -> p387 [p384] | ADD ADD 
313: 39 54 55 55, r6 -> p385, r44 -> p388 [p383], r49 -> p389 [p387] | CMP SUB_IMM 
314: 39 55 56 56, r49 -> p389 | J JMP_IMM 
315: 39 54 55 56, r6 -> p385, r44 -> p390 [p388], r49 -> p391 [p389] | CMP SUB_IMM 
316: 40 55 56 56, r49 -> p391 | J JMP_IMM 
317: 40 54 55 56, r6 -> p385, r44 -> p392 [p390], r49 -> p393 [p391] | CMP SUB_IMM 
318: 40 55 56 56, r49 -> p393 | J JMP_IMM 
319: 40 42 43 56, r1 -> p343, r1 -> p394 [p343], r49 -> p395 [p393] | ADD ADD_IMM 
320: 40 43 44 56, r0 -> p345, r0 -> p396 [p345] | INC ADD_IMM 
321: 40 44 45 56, r0 -> p396, r44 -> p397 [p392], r49 -> p398 [p395] | CMP SUB_IMM 
322: 40 46 47 57, r49 -> p398 | J JMP_IMM 
323: 40 43 44 57, r0 -> p399 [p396] | XOR ADD 
324: 41 43 47 57, r4 -> p4, r44 -> p400 [p397] | RET LOAD 
325: 41 44 45 57, r4 -> p4, r4 -> p401 [p4] | RET ADD_IMM 
326: 41 47 48 57, r44 -> p400 | RET JMP_REG 
327: 41 46 47 57, r0 -> p399, r0 -> p399, r44 -> p402 [p400], r49 -> p403 [p398] | TEST AND 
328: 41 46 47 57, r0 -> p404 [p399] | SET ADD 
329: 41 47 48 57, r49 -> p403, r0 -> p405 [p404] | SET ADD_IMM 
330: 41 48 49 58, r0 -> p405, r0 -> p406 [p405] | MOVZX ZEXT_BYTE_TO_DWORD 
331: 41 47 48 58, r4 -> p401, r4 -> p407 [p401], r49 -> p408 [p403] | ADD ADD_IMM 
332: 42 48 52 58, r4 -> p407, r44 -> p409 [p402] | RET LOAD 
333: 42 48 49 58, r4 -> p407, r4 -> p410 [p407] | RET ADD_IMM 
334: 42 52 53 58, r44 -> p409 | RET JMP_REG 
335: 42 49 50 58, r0 -> p406, r0 -> p406, r44 -> p411 [p409], r49 -> p412 [p408] | TEST AND 
336: 42 50 51 58, r49 -> p412 | J JMP_IMM 
337: 42 49 50 58, r4 -> p410, r0 -> p413 [p406] | LEA LEA 
338: 42 50 51 59, r0 -> p413, r7 -> p414 [p7] | MOV ADD 
339: 42 47 48 59, r13 -> p13, r6 -> p415 [p385] | MOV ADD 
340: 43 47 48 59, r44 -> p416 [p411] | CALL SAVE_PC 
341: 43 49 50 59, r4 -> p410, r4 -> p417 [p410] | CALL SUB_IMM 
342: 43 51 52 59, r44 -> p416, r4 -> p417 | CALL STORE 
343: 43 47 48 59 | CALL JMP_IMM 
344: 43 51 52 59, r4 -> p417, r4 -> p418 [p417], r49 -> p419 [p412] | SUB SUB_IMM 
345: 43 47 48 59, r45 -> p420 [p228] | CMP SAVE_PC 
346: 43 48 52 60, r45 -> p420, r45 -> p421 [p420] | CMP LOAD 
347: 43 52 53 60, r45 -> p421, r44 -> p422 [p416], r49 -> p423 [p419] | CMP SUB_IMM 
348: 44 53 54 60, r49 -> p423 | J JMP_IMM 
349: 44 48 49 60, r6 -> p415, r0 -> p424 [p413] | MOVSX SEXT_DWORD_TO_QWORD 
350: 44 49 50 60, r0 -> p424, r0 -> p424, r1 -> p425 [p394] | LEA LEA 
351: 44 51 55 60, r1 -> p425, r7 -> p414, r44 -> p426 [p422] | MOVSX LOAD 
352: 44 55 56 60, r44 -> p426, r2 -> p427 [p359] | MOVSX SEXT_DWORD_TO_QWORD 
353: 44 51 55 60, r1 -> p425, r7 -> p414, r44 -> p428 [p426] | MOVSX LOAD 
354: 44 55 56 61, r44 -> p428, r1 -> p429 [p425] | MOVSX SEXT_DWORD_TO_QWORD 
355: 44 56 60 61, r1 -> p429, r6 -> p430 [p415] | MOV LOAD 
356: 45 48 49 61, r45 -> p431 [p421] | CMP SAVE_PC 
357: 45 49 53 61, r45 -> p431, r45 -> p432 [p431] | CMP LOAD 
358: 45 53 54 61, r45 -> p432, r44 -> p433 [p428], r49 -> p434 [p423] | CMP SUB_IMM 
359: 45 54 55 61, r49 -> p434 | J JMP_IMM 
360: 45 60 61 61, r6 -> p430, r6 -> p435 [p430], r49 -> p436 [p434] | ADD ADD_IMM 
361: 45 61 62 62, r6 -> p435, r44 -> p437 [p433], r49 -> p438 [p436] | CMP SUB_IMM 
362: 45 62 63 63, r49 -> p438 | J JMP_IMM 
363: 45 61 65 65, r6 -> p435, r44 -> p439 [p437] | JMP LOAD 
364: 46 65 66 66, r44 -> p439 | JMP JMP_REG 
365: 46 56 57 66, r1 -> p429, r6 -> p440 [p435] | LEA LEA 
366: 46 57 58 66, r6 -> p440, r0 -> p441 [p424] | MOVSX SEXT_DWORD_TO_QWORD 
367: 46 58 62 66, r0 -> p441, r45 -> p442 [p432] | CMP LOAD 
368: 46 62 63 66, r45 -> p442, r44 -> p443 [p439], r49 -> p444 [p438] | CMP SUB_IMM 
369: 46 63 64 66, r49 -> p444 | J JMP_IMM 
370: 46 56 57 66, r1 -> p429, r1 -> p445 [p429], r49 -> p446 [p444] | ADD ADD_IMM 
371: 46 57 58 66, r1 -> p445, r0 -> p447 [p441] | MOVSX SEXT_DWORD_TO_QWORD 
372: 47 58 62 67, r0 -> p447, r45 -> p448 [p442] | CMP LOAD 
373: 47 62 63 67, r45 -> p448, r44 -> p449 [p443], r49 -> p450 [p446] | CMP SUB_IMM 
374: 47 63 64 67, r49 -> p450 | J JMP_IMM 
375: 47 56 57 67, r2 -> p427, r2 -> p427, r44 -> p451 [p449], r49 -> p452 [p450] | TEST AND 
376: 47 57 58 67, r49 -> p452 | J JMP_IMM 
377: 47 49 50 67, r44 -> p453 [p451] | MOVSX SAVE_PC 
378: 47 52 56 67, r44 -> p453, r44 -> p454 [p453] | MOVSX LOAD 
379: 47 56 57 67, r44 -> p454, r0 -> p455 [p447] | MOVSX SEXT_DWORD_TO_QWORD 
380: 48 57 61 68, r0 -> p455, r6 -> p456 [p440] | MOV LOAD 
381: 48 56 60 68, r2 -> p427, r45 -> p457 [p448] | CMP LOAD 
382: 48 61 62 68, r45 -> p457, r6 -> p456, r44 -> p458 [p454], r49 -> p459 [p452] | CMP SUB 
383: 48 62 63 68, r49 -> p459 | J JMP_IMM 
384: 48 57 61 68, r0 -> p455, r6 -> p460 [p456] | MOV LOAD 
385: 48 56 60 68, r2 -> p427, r45 -> p461 [p457] | CMP LOAD 
386: 48 61 62 68, r45 -> p461, r6 -> p460, r44 -> p462 [p458], r49 -> p463 [p459] | CMP SUB 
387: 48 62 63 68, r49 -> p463 | J JMP_IMM 
388: 49 57 61 69, r0 -> p455, r6 -> p464 [p460] | MOV LOAD 
389: 49 56 60 69, r2 -> p427, r45 -> p465 [p461] | CMP LOAD 
390: 49 61 62 69, r45 -> p465, r6 -> p464, r44 -> p466 [p462], r49 -> p467 [p463] | CMP SUB 
391: 49 62 63 69, r49 -> p467 | J JMP_IMM 
392: 49 57 61 69, r0 -> p455, r6 -> p468 [p464] | MOV LOAD 
393: 49 57 61 69, r2 -> p427, r45 -> p469 [p465] | CMP LOAD 
394: 49 61 62 69, r45 -> p469, r6 -> p468, r44 -> p470 [p466], r49 -> p471 [p467] | CMP SUB 
395: 49 62 63 69, r49 -> p471 | J JMP_IMM 
396: 50 52 53 70, r0 -> p472 [p455] | XOR ADD 
397: 50 52 53 70, r4 -> p418, r4 -> p473 [p418], r49 -> p474 [p471] | ADD ADD_IMM 
398: 50 54 58 70, r4 -> p473, r44 -> p475 [p470] | RET LOAD 
399: 50 55 56 70, r4 -> p473, r4 -> p476 [p473] | RET ADD_IMM 
400: 50 58 59 70, r44 -> p475 | RET JMP_REG 
401: 50 55 56 70, r5 -> p5, r44 -> p477 [p475] | MOV LEA 
402: 50 58 59 70, r0 -> p472, r44 -> p477 | MOV STORE 
403: 50 55 56 70, r0 -> p472, r0 -> p472, r44 -> p478 [p477], r49 -> p479 [p474] | TEST AND 
404: 51 58 59 71, r49 -> p479 | J JMP_IMM 
405: 51 58 59 71, r44 -> p480 [p478] | MOV SAVE_PC 
406: 51 59 63 71, r44 -> p480, r14 -> p481 [p14] | MOV LOAD 
407: 51 63 64 71, r14 -> p481, r14 -> p482 [p481], r49 -> p483 [p479] | ADD ADD_IMM 
408: 51 64 65 71, r14 -> p482, r44 -> p484 [p480], r49 -> p485 [p483] | CMP SUB_IMM 
409: 51 65 66 71, r49 -> p485 | J JMP_IMM 
410: 52 58 62 71, r4 -> p476, r45 -> p486 [p469] | CMP LOAD 
411: 52 62 63 71, r45 -> p486, r44 -> p487 [p484], r49 -> p488 [p485] | CMP SUB_IMM 
412: 52 63 64 72, r49 -> p488 | J JMP_IMM 
413: 52 58 59 72, r13 -> p13, r1 -> p489 [p445] | MOVSX SEXT_DWORD_TO_QWORD 
414: 52 59 60 72, r1 -> p489, r1 -> p489, r1 -> p490 [p489] | LEA LEA 
415: 52 60 64 72, r1 -> p490, r4 -> p476, r44 -> p491 [p487] | MOVSX LOAD 
416: 52 64 65 72, r44 -> p491, r1 -> p492 [p490] | MOVSX SEXT_DWORD_TO_QWORD 
417: 52 65 69 72, r1 -> p492, r14 -> p493 [p482] | MOV LOAD 
418: 53 69 70 72, r14 -> p493, r44 -> p494 [p491], r49 -> p495 [p488] | CMP SUB_IMM 
419: 53 70 71 72, r49 -> p495 | J JMP_IMM 
420: 53 69 70 73, r14 -> p493, r44 -> p496 [p494], r49 -> p497 [p495] | CMP SUB_IMM 
421: 53 70 71 73, r49 -> p497 | J JMP_IMM 
422: 53 65 69 73, r1 -> p492, r1 -> p498 [p492] | MOV LOAD 
423: 53 59 60 73 | JMP JMP_IMM 
424: 53 69 70 73, r1 -> p498, r44 -> p499 [p496], r49 -> p500 [p497] | CMP SUB_IMM 
425: 53 70 71 73, r49 -> p500 | J JMP_IMM 
426: 54 59 60 73, r14 -> p501 [p493] | XOR ADD 
427: 54 59 60 73 | JMP JMP_IMM 
428: 54 59 60 74, r13 -> p13, r1 -> p502 [p498] | MOVSX SEXT_DWORD_TO_QWORD 
429: 54 60 61 74, r1 -> p502, r1 -> p502, r2 -> p503 [p427] | LEA LEA 
430: 54 61 65 74, r2 -> p503, r4 -> p476, r45 -> p504 [p486] | CMP LOAD 
431: 54 65 66 74, r45 -> p504, r44 -> p505 [p499], r49 -> p506 [p500] | CMP SUB 
432: 54 66 67 74, r49 -> p506 | J JMP_IMM 
433: 54 59 60 74, r0 -> p472, r0 -> p472, r44 -> p507 [p505], r49 -> p508 [p506] | TEST AND 
434: 55 59 60 74, r0 -> p509 [p472] | SET ADD 
435: 55 60 61 74, r49 -> p508, r0 -> p510 [p509] | SET ADD_IMM 
436: 55 60 64 75, r4 -> p476, r45 -> p511 [p504] | CMP LOAD 
437: 55 64 65 75, r45 -> p511, r44 -> p512 [p507], r49 -> p513 [p508] | CMP SUB 
438: 55 65 66 75, r49 -> p513 | J JMP_IMM 
439: 55 60 64 75, r4 -> p476, r2 -> p514 [p503] | MOV LOAD 
440: 55 64 65 75, r14 -> p501, r2 -> p514, r5 -> p515 [p5] | LEA LEA 
441: 55 60 64 75, r4 -> p476, r45 -> p516 [p511] | TEST LOAD 
442: 56 64 65 75, r45 -> p516, r44 -> p517 [p512], r49 -> p518 [p513] | TEST AND_IMM 
443: 56 65 66 75, r49 -> p518 | J JMP_IMM 
444: 56 60 61 76, r14 -> p519 [p501] | XOR ADD 
445: 56 61 65 76, r4 -> p476, r7 -> p520 [p414] | MOV LOAD 
446: 56 63 64 76, r12 -> p12, r6 -> p521 [p468] | MOV ADD 
447: 56 65 66 76, r5 -> p515, r2 -> p522 [p514] | MOV ADD 
448: 56 63 64 76, r1 -> p523 [p502] | XOR ADD 
449: 56 63 64 76, r44 -> p524 [p517] | CALL SAVE_PC 
450: 57 63 64 76, r4 -> p476, r4 -> p525 [p476] | CALL SUB_IMM 
451: 57 64 65 76, r44 -> p524, r4 -> p525 | CALL STORE 
452: 57 64 65 77 | CALL JMP_IMM 
453: 57 66 67 77, r5 -> p515, r4 -> p525 | PUSH STORE 
454: 57 64 65 77, r4 -> p525, r4 -> p526 [p525] | PUSH SUB_IMM 
455: 57 66 67 77, r15 -> p15, r4 -> p526 | PUSH STORE 
456: 57 66 67 77, r4 -> p526, r4 -> p527 [p526] | PUSH SUB_IMM 
457: 57 67 68 77, r14 -> p519, r4 -> p527 | PUSH STORE 
458: 58 67 68 77, r4 -> p527, r4 -> p528 [p527] | PUSH SUB_IMM 
459: 58 68 69 77, r13 -> p13, r4 -> p528 | PUSH STORE 
460: 58 68 69 78, r4 -> p528, r4 -> p529 [p528] | PUSH SUB_IMM 
461: 58 69 70 78, r12 -> p12, r4 -> p529 | PUSH STORE 
462: 58 69 70 78, r4 -> p529, r4 -> p530 [p529] | PUSH SUB_IMM 
463: 58 70 71 78, r3 -> p3, r4 -> p530 | PUSH STORE 
464: 58 70 71 78, r4 -> p530, r4 -> p531 [p530] | PUSH SUB_IMM 
465: 58 71 72 78, r4 -> p531, r4 -> p532 [p531], r49 -> p533 [p518] | SUB SUB_IMM 
466: 59 66 67 78, r44 -> p534 [p524] | MOV SAVE_PC 
467: 59 67 71 78, r44 -> p534, r0 -> p535 [p510] | MOV LOAD 
468: 59 71 72 79, r0 -> p535, r0 -> p536 [p535] | INC ADD_IMM 
469: 59 66 67 79, r44 -> p537 [p534] | MOV SAVE_PC 
470: 59 72 73 79, r0 -> p536, r44 -> p537 | MOV STORE 
471: 59 72 73 79, r0 -> p536, r44 -> p538 [p537], r49 -> p539 [p533] | TEST AND_IMM 
472: 59 72 73 79, r1 -> p523, r4 -> p532 | MOV STORE 
473: 59 72 73 79, r2 -> p522, r4 -> p532 | MOV STORE 
474: 60 72 73 79, r6 -> p521, r4 -> p532 | MOV STORE 
475: 60 72 73 79, r7 -> p520, r4 -> p532 | MOV STORE 
476: 60 73 74 80, r49 -> p539 | J JMP_IMM 
477: 60 72 73 80, r4 -> p532 | MOV STORE 
478: 60 66 67 80, r44 -> p540 [p538] | MOVSX SAVE_PC 
479: 60 67 71 80, r44 -> p540, r44 -> p541 [p540] | MOVSX LOAD 
480: 60 71 72 80, r44 -> p541, r3 -> p542 [p3] | MOVSX SEXT_DWORD_TO_QWORD 
481: 60 72 73 80, r3 -> p542, r44 -> p543 [p541] | MOV LEA 
482: 61 73 74 80, r3 -> p542, r44 -> p543 | MOV STORE 
483: 61 66 67 80, r44 -> p544 [p543] | CALL SAVE_PC 
484: 61 73 74 81, r4 -> p532, r4 -> p545 [p532] | CALL SUB_IMM 
485: 61 74 75 81, r44 -> p544, r4 -> p545 | CALL STORE 
486: 61 67 68 81 | CALL JMP_IMM 
487: 61 67 68 81, r44 -> p546 [p544] | MOV SAVE_PC 
488: 61 68 72 81, r44 -> p546, r0 -> p547 [p536] | MOV LOAD 
489: 62 73 74 81, r0 -> p547, r44 -> p548 [p546], r49 -> p549 [p539] | CMP SUB_IMM 
490: 63 74 75 81, r49 -> p549 | J JMP_IMM 
491: 65 73 74 81, r0 -> p547, r44 -> p550 [p548], r49 -> p551 [p549] | CMP SUB_IMM 
492: 66 74 75 82, r49 -> p551 | J JMP_IMM 
493: 66 67 68 82, r0 -> p552 [p547] | XOR ADD 
494: 66 75 79 82, r4 -> p545, r44 -> p553 [p550] | RET LOAD 
495: 66 74 75 82, r4 -> p545, r4 -> p554 [p545] | RET ADD_IMM 
496: 66 79 80 82, r44 -> p553 | RET JMP_REG 
497: 66 68 69 82, r0 -> p552, r0 -> p552, r44 -> p555 [p553], r49 -> p556 [p551] | TEST AND 
498: 66 69 70 82, r49 -> p556 | J JMP_IMM 
499: 66 73 77 82, r3 -> p542, r0 -> p557 [p552] | MOV LOAD 
500: 67 77 78 83, r0 -> p557, r4 -> p554 | MOV STORE 
501: 67 73 74 83, r3 -> p542, r44 -> p558 [p555] | MOV LEA 
502: 67 74 75 83, r44 -> p558 | MOV STORE 
503: 67 73 74 83, r3 -> p542, r44 -> p559 [p558], r49 -> p560 [p556] | CMP SUB_IMM 
504: 67 74 75 83, r49 -> p560 | J JMP_IMM 
505: 67 77 78 83, r0 -> p557, r0 -> p557, r44 -> p561 [p559], r49 -> p562 [p560] | TEST AND 
506: 67 78 79 83, r49 -> p562 | J JMP_IMM 
507: 67 75 76 83, r4 -> p554 | MOV STORE 
508: 68 69 70 84 | JMP JMP_IMM 
509: 68 75 79 84, r4 -> p554, r45 -> p563 [p516] | CMP LOAD 
510: 68 79 80 84, r45 -> p563, r44 -> p564 [p561], r49 -> p565 [p562] | CMP SUB 
511: 68 80 81 84, r49 -> p565 | J JMP_IMM 
512: 68 69 70 84, r44 -> p566 [p564] | MOV SAVE_PC 
513: 68 70 74 84, r44 -> p566, r0 -> p567 [p557] | MOV LOAD 
514: 68 74 75 84, r0 -> p567, r44 -> p568 [p566], r49 -> p569 [p565] | CMP SUB_IMM 
515: 68 75 76 84, r49 -> p569 | J JMP_IMM 
516: 69 74 75 85, r0 -> p567, r44 -> p570 [p568], r49 -> p571 [p569] | CMP SUB_IMM 
517: 69 75 76 85, r49 -> p571 | J JMP_IMM 
518: 69 70 71 85, r2 -> p572 [p522] | MOV ADD_IMM 
519: 69 75 76 85, r2 -> p572, r3 -> p542, r2 -> p573 [p572], r49 -> p574 [p571] | SUB SUB 
520: 69 70 71 85, r44 -> p575 [p570] | MOV ADD_IMM 
521: 69 71 72 85, r45 -> p576 [p563] | MOV SAVE_PC 
522: 69 75 76 85, r44 -> p575, r45 -> p576 | MOV STORE 
523: 69 75 79 85, r4 -> p554, r7 -> p577 [p520] | MOV LOAD 
524: 70 76 80 86, r4 -> p554, r6 -> p578 [p521] | MOV LOAD 
525: 70 71 72 86, r44 -> p579 [p575] | CALL SAVE_PC 
526: 70 76 77 86, r4 -> p554, r4 -> p580 [p554] | CALL SUB_IMM 
527: 70 77 78 86, r44 -> p579, r4 -> p580 | CALL STORE 
528: 70 71 72 86 | CALL JMP_IMM 
529: 70 77 78 86, r5 -> p515, r4 -> p580 | PUSH STORE 
530: 70 77 78 86, r4 -> p580, r4 -> p581 [p580] | PUSH SUB_IMM 
531: 70 78 79 86, r15 -> p15, r4 -> p581 | PUSH STORE 
532: 71 78 79 87, r4 -> p581, r4 -> p582 [p581] | PUSH SUB_IMM 
533: 71 79 80 87, r14 -> p519, r4 -> p582 | PUSH STORE 
534: 71 79 80 87, r4 -> p582, r4 -> p583 [p582] | PUSH SUB_IMM 
535: 71 80 81 87, r13 -> p13, r4 -> p583 | PUSH STORE 
536: 71 80 81 87, r4 -> p583, r4 -> p584 [p583] | PUSH SUB_IMM 
537: 71 81 82 87, r12 -> p12, r4 -> p584 | PUSH STORE 
538: 71 81 82 87, r4 -> p584, r4 -> p585 [p584] | PUSH SUB_IMM 
539: 71 82 83 87, r3 -> p542, r4 -> p585 | PUSH STORE 
540: 72 82 83 88, r4 -> p585, r4 -> p586 [p585] | PUSH SUB_IMM 
541: 72 83 84 88, r4 -> p586, r4 -> p587 [p586], r49 -> p588 [p574] | SUB SUB_IMM 
542: 72 76 77 88, r44 -> p589 [p579] | MOVSX SAVE_PC 
543: 72 77 81 88, r44 -> p589, r44 -> p590 [p589] | MOVSX LOAD 
544: 72 81 82 88, r44 -> p590, r0 -> p591 [p567] | MOVSX SEXT_DWORD_TO_QWORD 
545: 72 82 83 88, r0 -> p591, r44 -> p592 [p590] | MOV LEA 
546: 72 83 84 88, r0 -> p591, r44 -> p592 | MOV STORE 
547: 72 76 77 88, r44 -> p593 [p592] | MOVZX SAVE_PC 
548: 73 77 81 89, r44 -> p593, r44 -> p594 [p593] | MOVZX LOAD 
549: 73 81 82 89, r44 -> p594, r0 -> p595 [p591] | MOVZX ZEXT_WORD_TO_DWORD 
550: 73 82 83 89, r0 -> p595, r0 -> p595, r44 -> p596 [p594], r49 -> p597 [p588] | TEST AND 
551: 73 84 85 89, r2 -> p573, r4 -> p587 | MOV STORE 
552: 73 84 85 89, r6 -> p578, r4 -> p587 | MOV STORE 
553: 73 84 85 89, r7 -> p577, r4 -> p587 | MOV STORE 
554: 73 83 84 89, r49 -> p597 | J JMP_IMM 
555: 73 85 89 89, r4 -> p587, r45 -> p598 [p576] | CMP LOAD 
556: 74 89 90 90, r45 -> p598, r44 -> p599 [p596], r49 -> p600 [p597] | CMP SUB 
557: 74 90 91 91, r49 -> p600 | J JMP_IMM 
558: 74 76 77 91, r45 -> p601 [p598] | CMP SAVE_PC 
559: 74 77 81 91, r45 -> p601, r45 -> p602 [p601] | CMP LOAD 
560: 74 81 82 91, r45 -> p602, r44 -> p603 [p599], r49 -> p604 [p600] | CMP SUB_IMM 
561: 74 82 83 91, r49 -> p604 | J JMP_IMM 
562: 74 76 77 91, r44 -> p605 [p603] | INC SAVE_PC 
563: 74 78 82 91, r44 -> p605, r44 -> p606 [p605] | INC LOAD 
564: 75 82 83 91, r44 -> p606, r44 -> p607 [p606] | INC ADD_IMM 
565: 75 76 77 92, r45 -> p608 [p602] | INC SAVE_PC 
566: 75 83 84 92, r44 -> p607, r45 -> p608 | INC STORE 
567: 75 76 77 92, r44 -> p609 [p607] | INC SAVE_PC 
568: 75 78 82 92, r44 -> p609, r44 -> p610 [p609] | INC LOAD 
569: 75 82 83 92, r44 -> p610, r44 -> p611 [p610] | INC ADD_IMM 
570: 75 78 79 92, r45 -> p612 [p608] | INC SAVE_PC 
571: 75 83 84 92, r44 -> p611, r45 -> p612 | INC STORE 
572: 76 78 79 92, r44 -> p613 [p611] | INC SAVE_PC 
573: 76 79 83 93, r44 -> p613, r44 -> p614 [p613] | INC LOAD 
574: 76 83 84 93, r44 -> p614, r44 -> p615 [p614] | INC ADD_IMM 
575: 76 78 79 93, r45 -> p616 [p612] | INC SAVE_PC 
576: 76 84 85 93, r44 -> p615, r45 -> p616 | INC STORE 
577: 76 79 80 93, r1 -> p617 [p523] | MOV ADD_IMM 
578: 76 79 80 93, r44 -> p618 [p615] | MOV SAVE_PC 
579: 76 80 84 93, r44 -> p618, r6 -> p619 [p578] | MOV LOAD 
580: 77 84 85 93, r6 -> p619, r0 -> p620 [p595] | MOV ADD 
581: 77 85 86 94, r0 -> p620, r1 -> p617, r44 -> p621 [p618], r49 -> p622 [p604] | MUL MUL 
582: 77 86 87 94, r44 -> p621, r0 -> p623 [p620] | MUL ADD 
583: 77 86 87 94, r44 -> p621, r2 -> p624 [p573] | MUL UPPER_HALF 
584: 77 87 88 94, r2 -> p624, r2 -> p625 [p624], r49 -> p626 [p622] | SHR SHR_IMM 
585: 77 88 89 94, r2 -> p625, r0 -> p627 [p623], r49 -> p628 [p626] | IMUL IMUL_T_IMM 
586: 77 84 85 94, r6 -> p619, r1 -> p629 [p617] | MOV ADD 
587: 77 89 90 94, r1 -> p629, r0 -> p627, r1 -> p630 [p629], r49 -> p631 [p628] | SUB SUB 
588: 78 90 91 94, r1 -> p630, r0 -> p632 [p627] | MOV ADD 
589: 78 91 92 95, r0 -> p632, r0 -> p633 [p632], r49 -> p634 [p631] | SHL SHL_IMM 
590: 78 79 80 95, r44 -> p635 [p621] | MOV SAVE_PC 
591: 78 80 84 95, r44 -> p635, r2 -> p636 [p625] | MOV LOAD 
592: 78 92 96 96, r0 -> p633, r2 -> p636, r45 -> p637 [p616] | CMP LOAD 
593: 78 96 97 97, r45 -> p637, r6 -> p619, r44 -> p638 [p635], r49 -> p639 [p634] | CMP SUB 
594: 78 97 98 98, r49 -> p639 | J JMP_IMM 
595: 78 80 81 98, r44 -> p640 [p638] | MOV ADD_IMM 
596: 79 84 85 98, r44 -> p640, r4 -> p587 | MOV STORE 
597: 79 85 89 98, r4 -> p587, r7 -> p641 [p577] | MOV LOAD 
598: 79 85 89 98, r4 -> p587, r3 -> p642 [p542] | MOV LOAD 
599: 79 89 90 98, r3 -> p642, r6 -> p643 [p619] | MOV ADD 
600: 79 80 81 98, r44 -> p644 [p640] | CALL SAVE_PC 
601: 79 84 85 98, r4 -> p587, r4 -> p645 [p587] | CALL SUB_IMM 
602: 79 85 86 99, r44 -> p644, r4 -> p645 | CALL STORE 
603: 79 80 81 99 | CALL JMP_IMM 
604: 80 85 86 99, r5 -> p515, r4 -> p645 | PUSH STORE 
605: 80 85 86 99, r4 -> p645, r4 -> p646 [p645] | PUSH SUB_IMM 
606: 80 86 87 99, r15 -> p15, r4 -> p646 | PUSH STORE 
607: 80 86 87 99, r4 -> p646, r4 -> p647 [p646] | PUSH SUB_IMM 
608: 80 87 88 99, r14 -> p519, r4 -> p647 | PUSH STORE 
609: 80 87 88 99, r4 -> p647, r4 -> p648 [p647] | PUSH SUB_IMM 
610: 80 88 89 100, r13 -> p13, r4 -> p648 | PUSH STORE 
611: 80 88 89 100, r4 -> p648, r4 -> p649 [p648] | PUSH SUB_IMM 
612: 81 89 90 100, r12 -> p12, r4 -> p649 | PUSH STORE 
613: 81 89 90 100, r4 -> p649, r4 -> p650 [p649] | PUSH SUB_IMM 
614: 81 90 91 100, r3 -> p642, r4 -> p650 | PUSH STORE 
615: 81 90 91 100, r4 -> p650, r4 -> p651 [p650] | PUSH SUB_IMM 
616: 81 91 92 100, r4 -> p651, r4 -> p652 [p651], r49 -> p653 [p639] | SUB SUB_IMM 
617: 81 82 83 100, r44 -> p654 [p644] | MOV SAVE_PC 
618: 81 83 87 101, r44 -> p654, r1 -> p655 [p630] | MOV LOAD 
619: 81 87 88 101, r1 -> p655, r44 -> p656 [p654], r49 -> p657 [p653] | CMP SUB_IMM 
620: 82 88 89 101, r49 -> p657 | J JMP_IMM 
621: 82 87 88 101, r1 -> p655, r44 -> p658 [p656], r49 -> p659 [p657] | CMP SUB_IMM 
622: 82 88 89 101, r49 -> p659 | J JMP_IMM 
623: 82 87 88 101, r1 -> p655, r44 -> p660 [p658], r49 -> p661 [p659] | CMP SUB_IMM 
624: 82 88 89 101, r49 -> p661 | J JMP_IMM 
625: 82 83 84 101, r44 -> p662 [p660] | MOV SAVE_PC 
626: 82 85 89 102, r44 -> p662, r1 -> p663 [p655] | MOV LOAD 
627: 82 89 90 102, r1 -> p663, r2 -> p664 [p636] | MOV ADD 
628: 83 90 91 102, r2 -> p664, r2 -> p665 [p664], r49 -> p666 [p661] | NEG SUB 
629: 83 86 87 102, r44 -> p667 [p662] | MOV SAVE_PC 
630: 83 87 91 102, r44 -> p667, r8 -> p668 [p386] | MOV LOAD 
631: 83 91 92 102, r8 -> p668, r8 -> p668, r44 -> p669 [p667], r49 -> p670 [p666] | TEST AND 
632: 83 92 93 102, r1 -> p663, r49 -> p670, r2 -> p671 [p665] | CMOV ADD 
633: 83 86 87 102, r44 -> p672 [p669] | MOV SAVE_PC 
634: 83 87 91 103, r44 -> p672, r1 -> p673 [p663] | MOV LOAD 
635: 83 93 94 103, r2 -> p671, r0 -> p674 [p633] | MOV ADD 
636: 84 94 95 103, r0 -> p674, r1 -> p673, r0 -> p675 [p674], r49 -> p676 [p670] | SUB SUB 
637: 84 95 96 103, r0 -> p675, r6 -> p643, r44 -> p677 [p672], r49 -> p678 [p676] | CMP SUB 
638: 84 96 97 103, r49 -> p678 | J JMP_IMM 
639: 84 93 94 103, r2 -> p671, r1 -> p673, r2 -> p679 [p671], r49 -> p680 [p678] | ADD ADD 
640: 84 94 95 103, r2 -> p679, r7 -> p641, r44 -> p681 [p677], r49 -> p682 [p680] | CMP SUB 
641: 84 95 96 103, r49 -> p682 | J JMP_IMM 
642: 84 94 95 104, r2 -> p679, r0 -> p683 [p675] | MOV ADD 
643: 84 86 87 104 | JMP JMP_IMM 
644: 85 92 93 104, r4 -> p652, r4 -> p684 [p652], r49 -> p685 [p682] | ADD ADD_IMM 
645: 85 93 97 104, r4 -> p684, r3 -> p686 [p642] | POP LOAD 
646: 85 93 94 104, r4 -> p684, r4 -> p687 [p684] | POP ADD_IMM 
647: 85 94 98 104, r4 -> p687, r12 -> p688 [p12] | POP LOAD 
648: 85 94 95 104, r4 -> p687, r4 -> p689 [p687] | POP ADD_IMM 
649: 85 95 99 104, r4 -> p689, r13 -> p690 [p13] | POP LOAD 
650: 85 95 96 105, r4 -> p689, r4 -> p691 [p689] | POP ADD_IMM 
651: 85 96 100 105, r4 -> p691, r14 -> p692 [p519] | POP LOAD 
652: 86 96 97 105, r4 -> p691, r4 -> p693 [p691] | POP ADD_IMM 
653: 86 97 101 105, r4 -> p693, r15 -> p694 [p15] | POP LOAD 
654: 86 97 98 105, r4 -> p693, r4 -> p695 [p693] | POP ADD_IMM 
655: 86 98 102 105, r4 -> p695, r5 -> p696 [p515] | POP LOAD 
656: 86 98 99 105, r4 -> p695, r4 -> p697 [p695] | POP ADD_IMM 
657: 86 99 103 105, r4 -> p697, r44 -> p698 [p681] | RET LOAD 
658: 86 99 100 106, r4 -> p697, r4 -> p699 [p697] | RET ADD_IMM 
659: 86 103 104 106, r44 -> p698 | RET JMP_REG 
660: 87 97 98 106, r0 -> p683, r3 -> p686, r44 -> p700 [p698], r49 -> p701 [p685] | CMP SUB 
661: 87 95 96 106, r0 -> p683, r3 -> p702 [p686] | MOV ADD 
662: 87 98 99 106, r49 -> p701 | J JMP_IMM 
663: 87 100 101 106, r4 -> p699, r7 -> p703 [p641] | LEA LEA 
664: 87 88 89 106, r44 -> p704 [p700] | CALL SAVE_PC 
665: 87 100 101 106, r4 -> p699, r4 -> p705 [p699] | CALL SUB_IMM 
666: 87 101 102 107, r44 -> p704, r4 -> p705 | CALL STORE 
667: 87 88 89 107 | CALL JMP_IMM 
668: 88 102 103 107, r5 -> p696, r4 -> p705 | PUSH STORE 
669: 88 101 102 107, r4 -> p705, r4 -> p706 [p705] | PUSH SUB_IMM 
670: 88 102 103 107, r15 -> p694, r4 -> p706 | PUSH STORE 
671: 88 102 103 107, r4 -> p706, r4 -> p707 [p706] | PUSH SUB_IMM 
672: 88 103 104 107, r14 -> p692, r4 -> p707 | PUSH STORE 
673: 88 103 104 107, r4 -> p707, r4 -> p708 [p707] | PUSH SUB_IMM 
674: 88 104 105 108, r13 -> p690, r4 -> p708 | PUSH STORE 
675: 88 104 105 108, r4 -> p708, r4 -> p709 [p708] | PUSH SUB_IMM 
676: 89 105 106 108, r12 -> p688, r4 -> p709 | PUSH STORE 
677: 89 105 106 108, r4 -> p709, r4 -> p710 [p709] | PUSH SUB_IMM 
678: 89 106 107 108, r3 -> p702, r4 -> p710 | PUSH STORE 
679: 89 106 107 108, r4 -> p710, r4 -> p711 [p710] | PUSH SUB_IMM 
680: 89 107 108 108, r4 -> p711, r4 -> p712 [p711], r49 -> p713 [p701] | SUB SUB_IMM 
681: 89 90 91 108, r44 -> p714 [p704] | MOV SAVE_PC 
682: 89 91 92 109, r44 -> p714 | MOV STORE 
683: 89 90 91 109, r44 -> p715 [p714] | MOV SAVE_PC 
684: 90 91 92 109, r44 -> p715 | MOV STORE 
685: 91 92 93 109, r44 -> p716 [p715] | MOV SAVE_PC 
686: 91 101 102 109, r7 -> p703, r44 -> p716 | MOV STORE 
687: 91 92 93 109, r45 -> p717 [p637] | CMP SAVE_PC 
688: 91 93 97 109, r45 -> p717, r45 -> p718 [p717] | CMP LOAD 
689: 91 97 98 109, r45 -> p718, r44 -> p719 [p716], r49 -> p720 [p713] | CMP SUB_IMM 
690: 91 98 99 110, r49 -> p720 | J JMP_IMM 
691: 91 92 93 110, r44 -> p721 [p719] | MOV SAVE_PC 
692: 91 93 97 110, r44 -> p721, r0 -> p722 [p683] | MOV LOAD 
693: 92 108 109 110, r0 -> p722, r4 -> p712 | MOV STORE 
694: 92 93 94 110, r44 -> p723 [p721] | MOV SAVE_PC 
695: 92 94 98 110, r44 -> p723, r3 -> p724 [p702] | MOV LOAD 
696: 92 93 94 110, r44 -> p725 [p723] | MOV SAVE_PC 
697: 92 94 98 110, r44 -> p725, r0 -> p726 [p722] | MOV LOAD 
698: 92 108 109 111, r0 -> p726, r4 -> p712 | MOV STORE 
699: 92 94 95 111, r44 -> p727 [p725] | MOV SAVE_PC 
700: 92 95 99 111, r44 -> p727, r0 -> p728 [p726] | MOV LOAD 
701: 93 108 109 111, r0 -> p728, r4 -> p712 | MOV STORE 
702: 93 95 96 111, r14 -> p729 [p692] | MOV ADD_IMM 
703: 93 95 96 111 | JMP JMP_IMM 
704: 93 109 113 113, r4 -> p712, r45 -> p730 [p718] | CMP LOAD 
705: 93 113 114 114, r45 -> p730, r44 -> p731 [p727], r49 -> p732 [p720] | CMP SUB 
706: 93 114 115 115, r49 -> p732 | J JMP_IMM 
707: 93 96 97 115, r15 -> p733 [p694] | MOV ADD_IMM 
708: 93 96 97 115, r12 -> p734 [p688] | MOV ADD_IMM 
709: 94 96 97 115 | JMP JMP_IMM 
710: 94 109 113 115, r4 -> p712, r45 -> p735 [p730] | CMP LOAD 
711: 94 113 114 115, r15 -> p733, r45 -> p735, r44 -> p736 [p731], r49 -> p737 [p732] | CMP SUB 
712: 94 114 115 115, r49 -> p737 | J JMP_IMM 
713: 94 96 97 115, r44 -> p738 [p736] | MOV SAVE_PC 
714: 94 97 101 116, r44 -> p738, r0 -> p739 [p728] | MOV LOAD 
715: 94 101 102 116, r0 -> p739, r44 -> p740 [p738], r49 -> p741 [p737] | CMP SUB_IMM 
716: 94 102 103 116, r49 -> p741 | J JMP_IMM 
717: 95 97 98 116, r44 -> p742 [p740] | MOV SAVE_PC 
718: 95 98 102 116, r44 -> p742, r1 -> p743 [p673] | MOV LOAD 
719: 95 102 103 116, r1 -> p743, r44 -> p744 [p742], r49 -> p745 [p741] | CMP SUB_IMM 
720: 96 103 104 116, r49 -> p745 | J JMP_IMM 
721: 97 98 102 116, r12 -> p734, r44 -> p746 [p744] | MOVSX LOAD 
722: 98 102 103 117, r44 -> p746, r13 -> p747 [p690] | MOVSX SEXT_DWORD_TO_QWORD 
723: 98 103 104 117, r13 -> p747, r13 -> p747, r44 -> p748 [p746], r49 -> p749 [p745] | TEST AND 
724: 98 104 105 117, r49 -> p749 | J JMP_IMM 
725: 98 103 104 117, r13 -> p747, r5 -> p750 [p696] | MOV ADD 
726: 98 99 100 117, r44 -> p751 [p748] | MOV SAVE_PC 
727: 98 104 105 117, r5 -> p750, r44 -> p751 | MOV STORE 
728: 98 99 100 117, r15 -> p733, r15 -> p752 [p733] | INC ADD_IMM 
729: 98 103 107 117, r13 -> p747, r1 -> p753 [p743] | MOV LOAD 
730: 99 107 108 118, r1 -> p753, r1 -> p754 [p753] | DEC SUB_IMM 
731: 99 108 109 118, r1 -> p754, r44 -> p755 [p751], r49 -> p756 [p749] | CMP SUB_IMM 
732: 99 109 110 118, r49 -> p756 | J JMP_IMM 
733: 99 108 112 118, r1 -> p754, r44 -> p757 [p755] | JMP LOAD 
734: 99 112 113 118, r44 -> p757 | JMP JMP_REG 
735: 99 104 105 118, r5 -> p750, r7 -> p758 [p703] | LEA LEA 
736: 99 105 106 118, r7 -> p758, r0 -> p759 [p739] | MOVSX SEXT_DWORD_TO_QWORD 
737: 99 106 110 118, r0 -> p759, r45 -> p760 [p735] | CMP LOAD 
738: 100 110 111 119, r45 -> p760, r44 -> p761 [p757], r49 -> p762 [p756] | CMP SUB 
739: 100 111 112 119, r49 -> p762 | J JMP_IMM 
740: 100 104 105 119, r5 -> p750, r7 -> p763 [p758] | LEA LEA 
741: 100 105 106 119, r7 -> p763, r0 -> p764 [p759] | MOVSX SEXT_DWORD_TO_QWORD 
742: 100 106 110 119, r0 -> p764, r45 -> p765 [p760] | CMP LOAD 
743: 100 110 111 119, r45 -> p765, r44 -> p766 [p761], r49 -> p767 [p762] | CMP SUB 
744: 100 111 112 119, r49 -> p767 | J JMP_IMM 
745: 100 101 102 119, r44 -> p768 [p766] | CALL SAVE_PC 
746: 101 108 109 120, r4 -> p712, r4 -> p769 [p712] | CALL SUB_IMM 
747: 101 109 110 120, r44 -> p768, r4 -> p769 | CALL STORE 
748: 101 102 103 120 | CALL JMP_IMM 
749: 101 109 110 120, r14 -> p729, r4 -> p769 | PUSH STORE 
750: 101 109 110 120, r4 -> p769, r4 -> p770 [p769] | PUSH SUB_IMM 
751: 101 110 111 120, r3 -> p724, r4 -> p770 | PUSH STORE 
752: 101 110 111 120, r4 -> p770, r4 -> p771 [p770] | PUSH SUB_IMM 
753: 101 105 106 120, r7 -> p763, r0 -> p772 [p764] | MOVSX SEXT_DWORD_TO_QWORD 
754: 102 106 107 121, r0 -> p772, r0 -> p772, r1 -> p773 [p754] | LEA LEA 
755: 102 103 104 121, r44 -> p774 [p768] | MOVSX SAVE_PC 
756: 102 105 109 121, r44 -> p774, r44 -> p775 [p774] | MOVSX LOAD 
757: 102 109 110 121, r44 -> p775, r2 -> p776 [p679] | MOVSX SEXT_DWORD_TO_QWORD 
758: 102 106 107 121, r0 -> p772, r6 -> p777 [p643] | MOV ADD 
759: 102 110 111 121, r6 -> p777, r2 -> p776, r6 -> p778 [p777], r49 -> p779 [p767] | SUB SUB 
760: 102 111 112 121, r6 -> p778, r6 -> p780 [p778] | MOVSX SEXT_DWORD_TO_QWORD 
761: 102 110 111 121, r1 -> p773, r2 -> p776, r1 -> p781 [p773], r49 -> p782 [p779] | SUB SUB 
762: 103 111 112 122, r1 -> p781, r1 -> p783 [p781] | MOVSX SEXT_DWORD_TO_QWORD 
763: 103 112 113 122, r1 -> p783, r1 -> p784 [p783] | LEA LEA 
764: 103 110 114 122, r2 -> p776, r7 -> p785 [p763] | MOV LOAD 
765: 103 106 107 122, r0 -> p772, r8 -> p786 [p668] | LEA LEA 
766: 103 104 105 122, r9 -> p787 [p9] | XOR ADD 
767: 103 104 105 122, r44 -> p788 [p775] | MOV SAVE_PC 
768: 103 105 109 122, r44 -> p788, r10 -> p789 [p10] | MOV LOAD 
769: 103 105 106 122, r44 -> p790 [p788] | MOV SAVE_PC 
770: 104 106 110 123, r44 -> p790, r11 -> p791 [p11] | MOV LOAD 
771: 104 107 108 123, r44 -> p792 [p790] | MOV SAVE_PC 
772: 104 108 112 123, r44 -> p792, r3 -> p793 [p724] | MOV LOAD 
773: 104 107 108 123 | JMP JMP_IMM 
774: 104 107 111 123, r9 -> p787, r8 -> p786, r14 -> p794 [p729] | MOV LOAD 
775: 104 111 112 123, r14 -> p794, r44 -> p795 [p792], r49 -> p796 [p782] | CMP SUB_IMM 
776: 104 112 113 123, r49 -> p796 | J JMP_IMM 
777: 104 112 113 123, r3 -> p793, r44 -> p797 [p795], r49 -> p798 [p796] | TEST AND_IMM 
778: 105 113 114 124, r49 -> p798 | J JMP_IMM 
779: 105 112 113 124, r0 -> p772, r6 -> p780, r0 -> p799 [p772], r49 -> p800 [p798] | ADD ADD 
780: 105 112 113 124, r6 -> p780, r9 -> p787, r14 -> p801 [p794] | LEA LEA 
781: 105 113 117 124, r9 -> p787, r1 -> p784, r45 -> p802 [p765] | CMP LOAD 
782: 105 117 118 124, r45 -> p802, r44 -> p803 [p797], r49 -> p804 [p800] | CMP SUB 
783: 105 118 119 124, r49 -> p804 | J JMP_IMM 
784: 105 113 114 124, r14 -> p801, r9 -> p805 [p787] | MOV ADD 
785: 105 114 118 124, r9 -> p805, r8 -> p786, r14 -> p806 [p801] | MOV LOAD 
786: 106 118 119 125, r14 -> p806, r44 -> p807 [p803], r49 -> p808 [p804] | CMP SUB_IMM 
787: 106 119 120 125, r49 -> p808 | J JMP_IMM 
788: 106 112 113 125, r3 -> p793, r44 -> p809 [p807], r49 -> p810 [p808] | TEST AND_IMM 
789: 106 113 114 125, r49 -> p810 | J JMP_IMM 
790: 106 113 114 125, r0 -> p799, r6 -> p780, r0 -> p811 [p799], r49 -> p812 [p810] | ADD ADD 
791: 106 114 115 125, r6 -> p780, r9 -> p805, r14 -> p813 [p806] | LEA LEA 
792: 106 114 118 125, r9 -> p805, r1 -> p784, r45 -> p814 [p802] | CMP LOAD 
793: 106 118 119 125, r45 -> p814, r44 -> p815 [p809], r49 -> p816 [p812] | CMP SUB 
794: 107 119 120 126, r49 -> p816 | J JMP_IMM 
795: 107 108 109 126, r44 -> p817 [p815] | MOV SAVE_PC 
796: 107 109 110 126, r10 -> p789, r44 -> p817 | MOV STORE 
797: 107 110 111 126 | JMP JMP_IMM 
798: 107 111 115 126, r4 -> p771, r3 -> p818 [p793] | POP LOAD 
799: 107 111 112 126, r4 -> p771, r4 -> p819 [p771] | POP ADD_IMM 
800: 107 112 116 126, r4 -> p819, r14 -> p820 [p813] | POP LOAD 
801: 107 113 114 126, r4 -> p819, r4 -> p821 [p819] | POP ADD_IMM 
802: 108 114 118 127, r4 -> p821, r44 -> p822 [p817] | RET LOAD 
803: 108 114 115 127, r4 -> p821, r4 -> p823 [p821] | RET ADD_IMM 
804: 108 118 119 127, r44 -> p822 | RET JMP_REG 
805: 108 111 112 127, r5 -> p750, r7 -> p824 [p785] | LEA LEA 
806: 108 114 115 127, r7 -> p824, r0 -> p825 [p811] | MOVSX SEXT_DWORD_TO_QWORD 
807: 108 115 119 127, r0 -> p825, r45 -> p826 [p814] | CMP LOAD 
808: 108 119 120 127, r45 -> p826, r44 -> p827 [p822], r49 -> p828 [p816] | CMP SUB 
809: 108 120 121 127, r49 -> p828 | J JMP_IMM 
810: 109 115 116 128, r44 -> p829 [p827] | CALL SAVE_PC 
811: 109 115 116 128, r4 -> p823, r4 -> p830 [p823] | CALL SUB_IMM 
812: 109 116 117 128, r44 -> p829, r4 -> p830 | CALL STORE 
813: 109 115 116 128 | CALL JMP_IMM 
814: 109 116 117 128, r14 -> p820, r4 -> p830 | PUSH STORE 
815: 109 116 117 128, r4 -> p830, r4 -> p831 [p830] | PUSH SUB_IMM 
816: 109 117 118 128, r3 -> p818, r4 -> p831 | PUSH STORE 
817: 109 117 118 128, r4 -> p831, r4 -> p832 [p831] | PUSH SUB_IMM 
818: 110 115 116 129, r7 -> p824, r0 -> p833 [p825] | MOVSX SEXT_DWORD_TO_QWORD 
819: 110 116 117 129, r0 -> p833, r0 -> p833, r1 -> p834 [p784] | LEA LEA 
820: 110 115 116 129, r44 -> p835 [p829] | MOVSX SAVE_PC 
821: 110 116 120 129, r44 -> p835, r44 -> p836 [p835] | MOVSX LOAD 
822: 110 120 121 129, r44 -> p836, r2 -> p837 [p776] | MOVSX SEXT_DWORD_TO_QWORD 
823: 110 116 117 129, r0 -> p833, r6 -> p838 [p780] | MOV ADD 
824: 110 121 122 129, r6 -> p838, r2 -> p837, r6 -> p839 [p838], r49 -> p840 [p828] | SUB SUB 
825: 110 122 123 129, r6 -> p839, r6 -> p841 [p839] | MOVSX SEXT_DWORD_TO_QWORD 
826: 111 121 122 130, r1 -> p834, r2 -> p837, r1 -> p842 [p834], r49 -> p843 [p840] | SUB SUB 
827: 111 122 123 130, r1 -> p842, r1 -> p844 [p842] | MOVSX SEXT_DWORD_TO_QWORD 
828: 111 123 124 130, r1 -> p844, r1 -> p845 [p844] | LEA LEA 
829: 111 121 125 130, r2 -> p837, r7 -> p846 [p824] | MOV LOAD 
830: 111 116 117 130, r0 -> p833, r8 -> p847 [p786] | LEA LEA 
831: 111 115 116 130, r9 -> p848 [p805] | XOR ADD 
832: 113 115 116 130, r44 -> p849 [p836] | MOV SAVE_PC 
833: 114 116 120 130, r44 -> p849, r10 -> p850 [p789] | MOV LOAD 
834: 115 117 118 131, r44 -> p851 [p849] | MOV SAVE_PC 
835: 115 118 122 131, r44 -> p851, r11 -> p852 [p791] | MOV LOAD 
836: 115 117 118 131, r44 -> p853 [p851] | MOV SAVE_PC 
837: 115 118 122 131, r44 -> p853, r3 -> p854 [p818] | MOV LOAD 
838: 115 117 118 131 | JMP JMP_IMM 
839: 115 117 121 131, r9 -> p848, r8 -> p847, r14 -> p855 [p820] | MOV LOAD 
840: 115 121 122 131, r14 -> p855, r44 -> p856 [p853], r49 -> p857 [p843] | CMP SUB_IMM 
841: 115 122 123 131, r49 -> p857 | J JMP_IMM 
842: 116 122 123 132, r3 -> p854, r44 -> p858 [p856], r49 -> p859 [p857] | TEST AND_IMM 
843: 116 123 124 132, r49 -> p859 | J JMP_IMM 
844: 116 123 124 132, r0 -> p833, r6 -> p841, r0 -> p860 [p833], r49 -> p861 [p859] | ADD ADD 
845: 116 123 124 132, r6 -> p841, r9 -> p848, r14 -> p862 [p855] | LEA LEA 
846: 116 124 128 132, r9 -> p848, r1 -> p845, r45 -> p863 [p826] | CMP LOAD 
847: 116 128 129 132, r45 -> p863, r44 -> p864 [p858], r49 -> p865 [p861] | CMP SUB 
848: 116 129 130 132, r49 -> p865 | J JMP_IMM 
849: 116 124 125 132, r14 -> p862, r9 -> p866 [p848] | MOV ADD 
850: 117 125 129 133, r9 -> p866, r8 -> p847, r14 -> p867 [p862] | MOV LOAD 
851: 117 129 130 133, r14 -> p867, r44 -> p868 [p864], r49 -> p869 [p865] | CMP SUB_IMM 
852: 117 130 131 133, r49 -> p869 | J JMP_IMM 
853: 117 118 119 133, r44 -> p870 [p868] | MOV SAVE_PC 
854: 117 120 121 133, r10 -> p850, r44 -> p870 | MOV STORE 
855: 117 129 130 133, r7 -> p846, r14 -> p867, r7 -> p871 [p846], r49 -> p872 [p869] | XOR XOR 
856: 117 130 131 133, r7 -> p871, r44 -> p873 [p870], r49 -> p874 [p872] | TEST AND_IMM 
857: 117 131 132 133, r49 -> p874 | J JMP_IMM 
858: 118 119 123 134, r4 -> p832, r3 -> p875 [p854] | POP LOAD 
859: 118 119 120 134, r4 -> p832, r4 -> p876 [p832] | POP ADD_IMM 
860: 118 120 124 134, r4 -> p876, r14 -> p877 [p867] | POP LOAD 
861: 118 120 121 134, r4 -> p876, r4 -> p878 [p876] | POP ADD_IMM 
862: 118 121 125 134, r4 -> p878, r44 -> p879 [p873] | RET LOAD 
863: 118 121 122 134, r4 -> p878, r4 -> p880 [p878] | RET ADD_IMM 
864: 118 125 126 134, r44 -> p879 | RET JMP_REG 
865: 118 119 120 134, r5 -> p750, r7 -> p881 [p871] | LEA LEA 
866: 119 120 121 135, r7 -> p881, r0 -> p882 [p860] | MOVSX SEXT_DWORD_TO_QWORD 
867: 119 121 125 135, r0 -> p882, r45 -> p883 [p863] | CMP LOAD 
868: 119 125 126 135, r45 -> p883, r44 -> p884 [p879], r49 -> p885 [p874] | CMP SUB 
869: 119 126 127 135, r49 -> p885 | J JMP_IMM 
870: 119 120 121 135, r44 -> p886 [p884] | CALL SAVE_PC 
871: 119 122 123 135, r4 -> p880, r4 -> p887 [p880] | CALL SUB_IMM 
872: 119 123 124 135, r44 -> p886, r4 -> p887 | CALL STORE 
873: 119 120 121 135 | CALL JMP_IMM 
874: 120 124 125 136, r14 -> p877, r4 -> p887 | PUSH STORE 
875: 120 123 124 136, r4 -> p887, r4 -> p888 [p887] | PUSH SUB_IMM 
876: 120 124 125 136, r3 -> p875, r4 -> p888 | PUSH STORE 
877: 120 124 125 136, r4 -> p888, r4 -> p889 [p888] | PUSH SUB_IMM 
878: 120 121 122 136, r7 -> p881, r0 -> p890 [p882] | MOVSX SEXT_DWORD_TO_QWORD 
879: 120 122 123 136, r0 -> p890, r0 -> p890, r1 -> p891 [p845] | LEA LEA 
880: 120 122 123 136, r44 -> p892 [p886] | MOVSX SAVE_PC 
881: 120 123 127 136, r44 -> p892, r44 -> p893 [p892] | MOVSX LOAD 
882: 121 127 128 137, r44 -> p893, r2 -> p894 [p837] | MOVSX SEXT_DWORD_TO_QWORD 
883: 121 122 123 137, r0 -> p890, r6 -> p895 [p841] | MOV ADD 
884: 121 128 129 137, r6 -> p895, r2 -> p894, r6 -> p896 [p895], r49 -> p897 [p885] | SUB SUB 
885: 121 129 130 137, r6 -> p896, r6 -> p898 [p896] | MOVSX SEXT_DWORD_TO_QWORD 
886: 121 128 129 137, r1 -> p891, r2 -> p894, r1 -> p899 [p891], r49 -> p900 [p897] | SUB SUB 
887: 121 129 130 137, r1 -> p899, r1 -> p901 [p899] | MOVSX SEXT_DWORD_TO_QWORD 
888: 121 130 131 137, r1 -> p901, r1 -> p902 [p901] | LEA LEA 
889: 121 128 132 137, r2 -> p894, r7 -> p903 [p881] | MOV LOAD 
890: 122 123 124 138, r0 -> p890, r8 -> p904 [p847] | LEA LEA 
891: 122 124 125 138, r9 -> p905 [p866] | XOR ADD 
892: 122 124 125 138, r44 -> p906 [p893] | MOV SAVE_PC 
893: 122 125 129 138, r44 -> p906, r10 -> p907 [p850] | MOV LOAD 
894: 122 124 125 138, r44 -> p908 [p906] | MOV SAVE_PC 
895: 122 125 129 138, r44 -> p908, r11 -> p909 [p852] | MOV LOAD 
896: 122 125 126 138, r44 -> p910 [p908] | MOV SAVE_PC 
897: 122 126 130 138, r44 -> p910, r3 -> p911 [p875] | MOV LOAD 
898: 123 125 126 139 | JMP JMP_IMM 
899: 123 125 129 139, r9 -> p905, r8 -> p904, r14 -> p912 [p877] | MOV LOAD 
900: 123 129 130 139, r14 -> p912, r44 -> p913 [p910], r49 -> p914 [p900] | CMP SUB_IMM 
901: 123 130 131 139, r49 -> p914 | J JMP_IMM 
902: 123 126 127 139, r44 -> p915 [p913] | MOV SAVE_PC 
903: 123 129 130 139, r10 -> p907, r44 -> p915 | MOV STORE 
904: 123 132 133 139, r7 -> p903, r14 -> p912, r7 -> p916 [p903], r49 -> p917 [p914] | XOR XOR 
905: 123 133 134 139, r7 -> p916, r44 -> p918 [p915], r49 -> p919 [p917] | TEST AND_IMM 
906: 124 134 135 140, r49 -> p919 | J JMP_IMM 
907: 124 126 127 140, r45 -> p920 [p883] | CMP SAVE_PC 
908: 124 127 131 140, r45 -> p920, r45 -> p921 [p920] | CMP LOAD 
909: 124 131 132 140, r45 -> p921, r44 -> p922 [p918], r49 -> p923 [p919] | CMP SUB_IMM 
910: 124 132 133 140, r49 -> p923 | J JMP_IMM 
911: 124 129 130 140, r14 -> p912, r44 -> p924 [p922], r49 -> p925 [p923] | CMP SUB_IMM 
912: 124 130 131 140, r49 -> p925 | J JMP_IMM 
913: 124 130 131 140, r14 -> p912, r1 -> p926 [p902] | LEA LEA 
914: 125 131 132 141, r1 -> p926, r44 -> p927 [p924], r49 -> p928 [p925] | CMP SUB_IMM 
915: 125 132 133 141, r49 -> p928 | J JMP_IMM 
916: 125 126 127 141, r44 -> p929 [p927] | MOV ADD_IMM 
917: 125 126 127 141, r45 -> p930 [p921] | MOV SAVE_PC 
918: 125 127 128 141, r44 -> p929, r45 -> p930 | MOV STORE 
919: 125 130 131 141, r10 -> p907, r1 -> p931 [p926] | MOVSX SEXT_DWORD_TO_QWORD 
920: 125 131 132 141, r1 -> p931, r1 -> p931, r1 -> p932 [p931] | LEA LEA 
921: 125 126 127 141, r44 -> p933 [p929] | MOV SAVE_PC 
922: 126 127 131 142, r44 -> p933, r10 -> p934 [p907] | MOV LOAD 
923: 126 127 128 142, r44 -> p935 [p933] | MOV SAVE_PC 
924: 126 128 132 142, r44 -> p935, r2 -> p936 [p894] | MOV LOAD 
925: 126 132 133 142, r1 -> p932, r2 -> p936, r44 -> p937 [p935] | MOV LEA 
926: 126 133 134 142, r10 -> p934, r44 -> p937 | MOV STORE 
927: 126 127 128 142, r44 -> p938 [p937] | MOVSX SAVE_PC 
928: 126 130 134 142, r44 -> p938, r44 -> p939 [p938] | MOVSX LOAD 
929: 126 134 135 142, r44 -> p939, r1 -> p940 [p932] | MOVSX SEXT_DWORD_TO_QWORD 
930: 127 135 136 143, r1 -> p940, r1 -> p940, r1 -> p941 [p940] | LEA LEA 
931: 127 128 129 143, r44 -> p942 [p939] | MOV SAVE_PC 
932: 127 131 135 143, r44 -> p942, r2 -> p943 [p936] | MOV LOAD 
933: 127 136 137 143, r1 -> p941, r2 -> p943, r44 -> p944 [p942] | MOV LEA 
934: 127 137 138 143, r0 -> p890, r44 -> p944 | MOV STORE 
935: 127 128 129 143, r44 -> p945 [p944] | MOVSX SAVE_PC 
936: 127 131 135 143, r44 -> p945, r44 -> p946 [p945] | MOVSX LOAD 
937: 127 135 136 143, r44 -> p946, r0 -> p947 [p890] | MOVSX SEXT_DWORD_TO_QWORD 
938: 128 136 137 144, r0 -> p947, r0 -> p947, r0 -> p948 [p947] | LEA LEA 
939: 128 131 132 144, r44 -> p949 [p946] | MOV SAVE_PC 
940: 128 132 136 144, r44 -> p949, r1 -> p950 [p941] | MOV LOAD 
941: 128 137 138 144, r0 -> p948, r1 -> p950, r44 -> p951 [p949] | MOV LEA 
942: 128 138 139 144, r14 -> p912, r44 -> p951 | MOV STORE 
943: 128 131 132 144, r44 -> p952 [p951] | MOVSX SAVE_PC 
944: 128 132 136 144, r44 -> p952, r44 -> p953 [p952] | MOVSX LOAD 
945: 128 136 137 144, r44 -> p953, r0 -> p954 [p948] | MOVSX SEXT_DWORD_TO_QWORD 
946: 129 137 138 145, r0 -> p954, r0 -> p954, r0 -> p955 [p954] | LEA LEA 
947: 129 132 133 145, r44 -> p956 [p953] | MOV SAVE_PC 
948: 129 133 137 145, r44 -> p956, r1 -> p957 [p950] | MOV LOAD 
949: 129 138 139 145, r0 -> p955, r1 -> p957, r44 -> p958 [p956] | MOV LEA 
950: 129 139 140 145, r44 -> p958 | MOV STORE 
951: 129 132 133 145, r44 -> p959 [p958] | MOVSX SAVE_PC 
952: 129 133 137 145, r44 -> p959, r44 -> p960 [p959] | MOVSX LOAD 
953: 129 137 138 145, r44 -> p960, r0 -> p961 [p955] | MOVSX SEXT_DWORD_TO_QWORD 
954: 130 138 139 146, r0 -> p961, r0 -> p961, r0 -> p962 [p961] | LEA LEA 
955: 130 133 134 146, r44 -> p963 [p960] | MOV SAVE_PC 
956: 130 134 138 146, r44 -> p963, r1 -> p964 [p957] | MOV LOAD 
957: 130 139 140 146, r0 -> p962, r1 -> p964, r44 -> p965 [p963] | MOV LEA 
958: 130 140 141 146, r44 -> p965 | MOV STORE 
959: 130 133 134 146, r44 -> p966 [p965] | MOVSX SAVE_PC 
960: 130 134 138 146, r44 -> p966, r44 -> p967 [p966] | MOVSX LOAD 
961: 130 138 139 146, r44 -> p967, r0 -> p968 [p962] | MOVSX SEXT_DWORD_TO_QWORD 
962: 131 139 140 147, r0 -> p968, r0 -> p968, r0 -> p969 [p968] | LEA LEA 
963: 131 133 134 147, r44 -> p970 [p967] | MOV SAVE_PC 
964: 131 134 138 147, r44 -> p970, r1 -> p971 [p964] | MOV LOAD 
965: 131 140 141 147, r0 -> p969, r1 -> p971, r44 -> p972 [p970] | MOV LEA 
966: 131 141 142 147, r44 -> p972 | MOV STORE 
967: 131 133 134 147, r44 -> p973 [p972] | INC SAVE_PC 
968: 131 134 138 147, r44 -> p973, r44 -> p974 [p973] | INC LOAD 
969: 131 138 139 147, r44 -> p974, r44 -> p975 [p974] | INC ADD_IMM 
970: 132 134 135 148, r45 -> p976 [p930] | INC SAVE_PC 
971: 132 139 140 148, r44 -> p975, r45 -> p976 | INC STORE 
972: 132 134 138 148, r4 -> p889, r3 -> p977 [p911] | POP LOAD 
973: 132 135 136 148, r4 -> p889, r4 -> p978 [p889] | POP ADD_IMM 
974: 132 136 140 148, r4 -> p978, r14 -> p979 [p912] | POP LOAD 
975: 132 136 137 148, r4 -> p978, r4 -> p980 [p978] | POP ADD_IMM 
976: 132 137 141 148, r4 -> p980, r44 -> p981 [p975] | RET LOAD 
977: 132 137 138 148, r4 -> p980, r4 -> p982 [p980] | RET ADD_IMM 
978: 133 141 142 149, r44 -> p981 | RET JMP_REG 
979: 133 135 136 149 | JMP JMP_IMM 
980: 133 135 136 149, r12 -> p734, r12 -> p983 [p734], r49 -> p984 [p928] | ADD ADD_IMM 
981: 133 138 142 149, r4 -> p982, r45 -> p985 [p976] | CMP LOAD 
982: 133 142 143 149, r15 -> p752, r45 -> p985, r44 -> p986 [p981], r49 -> p987 [p984] | CMP SUB 
983: 133 143 144 149, r49 -> p987 | J JMP_IMM 
984: 133 135 136 149, r44 -> p988 [p986] | MOV SAVE_PC 
985: 133 136 140 149, r44 -> p988, r0 -> p989 [p969] | MOV LOAD 
986: 134 140 141 150, r0 -> p989, r44 -> p990 [p988], r49 -> p991 [p987] | CMP SUB_IMM 
987: 134 141 142 150, r49 -> p991 | J JMP_IMM 
988: 134 135 136 150, r44 -> p992 [p990] | MOV SAVE_PC 
989: 134 136 140 150, r44 -> p992, r1 -> p993 [p971] | MOV LOAD 
990: 134 140 141 150, r1 -> p993, r44 -> p994 [p992], r49 -> p995 [p991] | CMP SUB_IMM 
991: 134 141 142 150, r49 -> p995 | J JMP_IMM 
992: 134 136 140 150, r12 -> p983, r44 -> p996 [p994] | MOVSX LOAD 
993: 134 140 141 150, r44 -> p996, r13 -> p997 [p747] | MOVSX SEXT_DWORD_TO_QWORD 
994: 135 141 142 151, r13 -> p997, r13 -> p997, r44 -> p998 [p996], r49 -> p999 [p995] | TEST AND 
995: 135 142 143 151, r49 -> p999 | J JMP_IMM 
996: 135 141 142 151, r13 -> p997, r5 -> p1000 [p750] | MOV ADD 
997: 135 137 138 151, r44 -> p1001 [p998] | MOV SAVE_PC 
998: 135 142 143 151, r5 -> p1000, r44 -> p1001 | MOV STORE 
999: 135 137 138 151, r15 -> p752, r15 -> p1002 [p752] | INC ADD_IMM 
1000: 135 141 145 151, r13 -> p997, r1 -> p1003 [p993] | MOV LOAD 
Completed Trace @ cycle 152. Ending Simulation...
Processed 1000 trace lines.
Instructions:
  N Fetched =    		1000
  N Committed =  		1000
Stalls:
  Fetch stalled (ROB full) =    16
IPC: 				6.579
