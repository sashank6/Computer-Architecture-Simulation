debug mode on
Experiments 2 & 3: Modeling Memory Dependences
Experiment 3: Modeling Perfect Memory Scheduling
Trace name  				sjeng-1K
Instruction Limit			none
Processor Configuration:
  Machine Width 			1
  Number of Logical Registers 		50
  Number of Physical Registers 		64
  ROB Size 				4
  modeling memory dependences: Perfect Memory Scheduling
#: F I D C 	 Reg Mappings [freeMe] | Mop Uop
1: 0 1 2 2, r49 -> p49 | J JMP_IMM 
2: 1 2 6 6, r1 -> p1, r44 -> p50 [p44] | MOVSX LOAD 
3: 2 6 7 7, r44 -> p50, r2 -> p51 [p2] | MOVSX SEXT_DWORD_TO_QWORD 
4: 3 7 8 8, r7 -> p7, r2 -> p51, r6 -> p52 [p6] | LEA LEA 
5: 4 8 9 9, r6 -> p52, r6 -> p53 [p52] | MOVSX SEXT_DWORD_TO_QWORD 
6: 6 9 13 13, r6 -> p53, r6 -> p54 [p53] | MOV LOAD 
7: 7 13 14 14, r6 -> p54, r44 -> p55 [p50], r49 -> p56 [p49] | CMP SUB_IMM 
8: 8 14 15 15, r49 -> p56 | J JMP_IMM 
9: 9 15 16 16, r6 -> p54, r44 -> p57 [p55], r49 -> p58 [p56] | CMP SUB_IMM 
10: 13 16 17 17, r49 -> p58 | J JMP_IMM 
11: 14 17 18 18, r2 -> p51, r8 -> p59 [p8] | MOV ADD 
12: 15 18 19 19, r8 -> p59, r7 -> p7, r8 -> p60 [p59] | LEA LEA 
13: 16 19 20 20, r8 -> p60, r8 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD 
14: 17 20 21 21, r8 -> p61, r8 -> p62 [p61] | LEA LEA 
15: 18 21 22 22, r2 -> p51, r2 -> p63 [p51], r49 -> p44 [p58] | SHL SHL_IMM 
16: 19 22 23 23 | JMP JMP_IMM 
17: 20 23 24 24, r6 -> p54, r44 -> p2 [p57], r49 -> p6 [p44] | CMP SUB_IMM 
18: 21 24 25 25, r49 -> p6 | J JMP_IMM 
19: 22 25 26 26, r6 -> p54, r44 -> p52 [p2], r49 -> p53 [p6] | CMP SUB_IMM 
20: 23 26 27 27, r49 -> p53 | J JMP_IMM 
21: 24 27 28 28, r6 -> p54, r44 -> p50 [p52], r49 -> p49 [p53] | CMP SUB_IMM 
22: 25 28 29 29, r49 -> p49 | J JMP_IMM 
23: 26 29 30 30, r1 -> p1, r1 -> p55 [p1], r49 -> p56 [p49] | ADD ADD_IMM 
24: 27 30 31 31, r0 -> p0, r0 -> p8 [p0] | INC ADD_IMM 
25: 28 31 32 32, r0 -> p8, r44 -> p59 [p50], r49 -> p60 [p56] | CMP SUB_IMM 
26: 29 32 33 33, r49 -> p60 | J JMP_IMM 
27: 30 33 37 37, r1 -> p55, r44 -> p61 [p59] | MOVSX LOAD 
28: 31 37 38 38, r44 -> p61, r2 -> p51 [p63] | MOVSX SEXT_DWORD_TO_QWORD 
29: 32 38 39 39, r7 -> p7, r2 -> p51, r6 -> p58 [p54] | LEA LEA 
30: 33 39 40 40, r6 -> p58, r6 -> p57 [p58] | MOVSX SEXT_DWORD_TO_QWORD 
31: 37 40 44 44, r6 -> p57, r6 -> p44 [p57] | MOV LOAD 
32: 38 44 45 45, r6 -> p44, r44 -> p2 [p61], r49 -> p6 [p60] | CMP SUB_IMM 
33: 39 45 46 46, r49 -> p6 | J JMP_IMM 
34: 40 46 47 47, r6 -> p44, r44 -> p52 [p2], r49 -> p53 [p6] | CMP SUB_IMM 
35: 44 47 48 48, r49 -> p53 | J JMP_IMM 
36: 45 48 49 49, r2 -> p51, r8 -> p1 [p62] | MOV ADD 
37: 46 49 50 50, r8 -> p1, r7 -> p7, r8 -> p49 [p1] | LEA LEA 
38: 47 50 51 51, r8 -> p49, r8 -> p0 [p49] | MOVSX SEXT_DWORD_TO_QWORD 
39: 48 51 52 52, r8 -> p0, r8 -> p50 [p0] | LEA LEA 
40: 49 52 53 53, r2 -> p51, r2 -> p56 [p51], r49 -> p59 [p53] | SHL SHL_IMM 
41: 50 53 54 54 | JMP JMP_IMM 
42: 51 54 55 55, r6 -> p44, r44 -> p63 [p52], r49 -> p54 [p59] | CMP SUB_IMM 
43: 52 55 56 56, r49 -> p54 | J JMP_IMM 
44: 53 56 57 57, r6 -> p44, r44 -> p58 [p63], r49 -> p57 [p54] | CMP SUB_IMM 
45: 54 57 58 58, r49 -> p57 | J JMP_IMM 
46: 55 58 59 59, r6 -> p44, r44 -> p61 [p58], r49 -> p60 [p57] | CMP SUB_IMM 
47: 56 59 60 60, r49 -> p60 | J JMP_IMM 
48: 57 60 61 61, r1 -> p55, r1 -> p2 [p55], r49 -> p6 [p60] | ADD ADD_IMM 
49: 58 61 62 62, r0 -> p8, r0 -> p62 [p8] | INC ADD_IMM 
50: 59 62 63 63, r0 -> p62, r44 -> p1 [p61], r49 -> p49 [p6] | CMP SUB_IMM 
51: 60 63 64 64, r49 -> p49 | J JMP_IMM 
52: 61 64 68 68, r1 -> p2, r44 -> p0 [p1] | MOVSX LOAD 
53: 62 68 69 69, r44 -> p0, r2 -> p51 [p56] | MOVSX SEXT_DWORD_TO_QWORD 
54: 63 69 70 70, r7 -> p7, r2 -> p51, r6 -> p53 [p44] | LEA LEA 
55: 64 70 71 71, r6 -> p53, r6 -> p52 [p53] | MOVSX SEXT_DWORD_TO_QWORD 
56: 68 71 75 75, r6 -> p52, r6 -> p59 [p52] | MOV LOAD 
57: 69 75 76 76, r6 -> p59, r44 -> p63 [p0], r49 -> p54 [p49] | CMP SUB_IMM 
58: 70 76 77 77, r49 -> p54 | J JMP_IMM 
59: 71 77 78 78, r6 -> p59, r44 -> p58 [p63], r49 -> p57 [p54] | CMP SUB_IMM 
60: 75 78 79 79, r49 -> p57 | J JMP_IMM 
61: 76 79 80 80, r2 -> p51, r8 -> p55 [p50] | MOV ADD 
62: 77 80 81 81, r8 -> p55, r7 -> p7, r8 -> p60 [p55] | LEA LEA 
63: 78 81 82 82, r8 -> p60, r8 -> p8 [p60] | MOVSX SEXT_DWORD_TO_QWORD 
64: 79 82 83 83, r8 -> p8, r8 -> p61 [p8] | LEA LEA 
65: 80 83 84 84, r2 -> p51, r2 -> p6 [p51], r49 -> p1 [p57] | SHL SHL_IMM 
66: 81 84 85 85 | JMP JMP_IMM 
67: 82 85 86 86, r6 -> p59, r44 -> p56 [p58], r49 -> p44 [p1] | CMP SUB_IMM 
68: 83 86 87 87, r49 -> p44 | J JMP_IMM 
69: 84 87 88 88, r6 -> p59, r44 -> p53 [p56], r49 -> p52 [p44] | CMP SUB_IMM 
70: 85 88 89 89, r49 -> p52 | J JMP_IMM 
71: 86 89 90 90, r6 -> p59, r44 -> p0 [p53], r49 -> p49 [p52] | CMP SUB_IMM 
72: 87 90 91 91, r49 -> p49 | J JMP_IMM 
73: 88 91 92 92, r1 -> p2, r1 -> p63 [p2], r49 -> p54 [p49] | ADD ADD_IMM 
74: 89 92 93 93, r0 -> p62, r0 -> p50 [p62] | INC ADD_IMM 
75: 90 93 94 94, r0 -> p50, r44 -> p55 [p0], r49 -> p60 [p54] | CMP SUB_IMM 
76: 91 94 95 95, r49 -> p60 | J JMP_IMM 
77: 92 95 96 96, r0 -> p8 [p50] | XOR ADD 
78: 93 96 97 97, r1 -> p51 [p63] | MOV ADD_IMM 
79: 94 97 98 98 | JMP JMP_IMM 
80: 95 98 99 99, r0 -> p8, r44 -> p57 [p55], r49 -> p58 [p60] | CMP SUB_IMM 
81: 96 99 100 100, r49 -> p58 | J JMP_IMM 
82: 97 100 101 101, r7 -> p7, r2 -> p1 [p6] | MOV ADD 
83: 98 101 105 105, r1 -> p51, r44 -> p56 [p57] | ADD LOAD 
84: 99 105 106 106, r2 -> p1, r44 -> p56, r2 -> p44 [p1], r49 -> p53 [p58] | ADD ADD 
85: 100 106 107 107, r2 -> p44, r2 -> p52 [p44] | MOVSX SEXT_DWORD_TO_QWORD 
86: 101 107 111 111, r2 -> p52, r45 -> p2 [p45] | CMP LOAD 
87: 105 111 112 112, r45 -> p2, r44 -> p49 [p56], r49 -> p62 [p53] | CMP SUB_IMM 
88: 106 112 113 113, r49 -> p62 | J JMP_IMM 
89: 107 108 109 114, r1 -> p51, r1 -> p0 [p51], r49 -> p54 [p62] | ADD ADD_IMM 
90: 111 113 114 115, r0 -> p8, r0 -> p50 [p8] | INC ADD_IMM 
91: 112 114 115 116, r0 -> p50, r44 -> p63 [p49], r49 -> p55 [p54] | CMP SUB_IMM 
92: 113 115 116 117, r49 -> p55 | J JMP_IMM 
93: 114 116 117 118, r7 -> p7, r2 -> p60 [p52] | MOV ADD 
94: 115 117 121 121, r1 -> p0, r44 -> p6 [p63] | ADD LOAD 
95: 116 121 122 122, r2 -> p60, r44 -> p6, r2 -> p57 [p60], r49 -> p1 [p55] | ADD ADD 
96: 117 122 123 123, r2 -> p57, r2 -> p58 [p57] | MOVSX SEXT_DWORD_TO_QWORD 
97: 118 123 127 127, r2 -> p58, r45 -> p44 [p2] | CMP LOAD 
98: 121 127 128 128, r45 -> p44, r44 -> p45 [p6], r49 -> p56 [p1] | CMP SUB_IMM 
99: 122 128 129 129, r49 -> p56 | J JMP_IMM 
100: 123 124 125 130, r1 -> p0, r1 -> p53 [p0], r49 -> p51 [p56] | ADD ADD_IMM 
101: 127 129 130 131, r0 -> p50, r0 -> p62 [p50] | INC ADD_IMM 
102: 128 130 131 132, r0 -> p62, r44 -> p8 [p45], r49 -> p49 [p51] | CMP SUB_IMM 
103: 129 131 132 133, r49 -> p49 | J JMP_IMM 
104: 130 132 133 134, r7 -> p7, r2 -> p54 [p58] | MOV ADD 
105: 131 133 137 137, r1 -> p53, r44 -> p52 [p8] | ADD LOAD 
106: 132 137 138 138, r2 -> p54, r44 -> p52, r2 -> p63 [p54], r49 -> p60 [p49] | ADD ADD 
107: 133 138 139 139, r2 -> p63, r2 -> p55 [p63] | MOVSX SEXT_DWORD_TO_QWORD 
108: 134 139 143 143, r2 -> p55, r45 -> p57 [p44] | CMP LOAD 
109: 137 143 144 144, r45 -> p57, r44 -> p2 [p52], r49 -> p6 [p60] | CMP SUB_IMM 
110: 138 144 145 145, r49 -> p6 | J JMP_IMM 
111: 139 140 141 146, r1 -> p53, r1 -> p1 [p53], r49 -> p0 [p6] | ADD ADD_IMM 
112: 143 145 146 147, r0 -> p62, r0 -> p56 [p62] | INC ADD_IMM 
113: 144 146 147 148, r0 -> p56, r44 -> p50 [p2], r49 -> p45 [p0] | CMP SUB_IMM 
114: 145 147 148 149, r49 -> p45 | J JMP_IMM 
115: 146 148 149 150, r7 -> p7, r2 -> p51 [p55] | MOV ADD 
116: 147 149 153 153, r1 -> p1, r44 -> p58 [p50] | ADD LOAD 
117: 148 153 154 154, r2 -> p51, r44 -> p58, r2 -> p8 [p51], r49 -> p54 [p45] | ADD ADD 
118: 149 154 155 155, r2 -> p8, r2 -> p49 [p8] | MOVSX SEXT_DWORD_TO_QWORD 
119: 150 155 159 159, r2 -> p49, r45 -> p63 [p57] | CMP LOAD 
120: 153 159 160 160, r45 -> p63, r44 -> p44 [p58], r49 -> p52 [p54] | CMP SUB_IMM 
121: 154 160 161 161, r49 -> p52 | J JMP_IMM 
122: 155 156 157 162, r1 -> p1, r1 -> p60 [p1], r49 -> p53 [p52] | ADD ADD_IMM 
123: 159 161 162 163, r0 -> p56, r0 -> p6 [p56] | INC ADD_IMM 
124: 160 162 163 164, r0 -> p6, r44 -> p62 [p44], r49 -> p2 [p53] | CMP SUB_IMM 
125: 161 163 164 165, r49 -> p2 | J JMP_IMM 
126: 162 164 165 166, r7 -> p7, r2 -> p0 [p49] | MOV ADD 
127: 163 165 169 169, r1 -> p60, r44 -> p55 [p62] | ADD LOAD 
128: 164 169 170 170, r2 -> p0, r44 -> p55, r2 -> p50 [p0], r49 -> p51 [p2] | ADD ADD 
129: 165 170 171 171, r2 -> p50, r2 -> p45 [p50] | MOVSX SEXT_DWORD_TO_QWORD 
130: 166 171 175 175, r2 -> p45, r45 -> p8 [p63] | CMP LOAD 
131: 169 175 176 176, r45 -> p8, r44 -> p57 [p55], r49 -> p58 [p51] | CMP SUB_IMM 
132: 170 176 177 177, r49 -> p58 | J JMP_IMM 
133: 171 172 173 178, r1 -> p60, r1 -> p54 [p60], r49 -> p1 [p58] | ADD ADD_IMM 
134: 175 177 178 179, r0 -> p6, r0 -> p52 [p6] | INC ADD_IMM 
135: 176 178 179 180, r0 -> p52, r44 -> p56 [p57], r49 -> p44 [p1] | CMP SUB_IMM 
136: 177 179 180 181, r49 -> p44 | J JMP_IMM 
137: 178 180 181 182, r7 -> p7, r2 -> p53 [p45] | MOV ADD 
138: 179 181 185 185, r1 -> p54, r44 -> p49 [p56] | ADD LOAD 
139: 180 185 186 186, r2 -> p53, r44 -> p49, r2 -> p62 [p53], r49 -> p0 [p44] | ADD ADD 
140: 181 186 187 187, r2 -> p62, r2 -> p2 [p62] | MOVSX SEXT_DWORD_TO_QWORD 
141: 182 187 191 191, r2 -> p2, r45 -> p50 [p8] | CMP LOAD 
142: 185 191 192 192, r45 -> p50, r44 -> p63 [p49], r49 -> p55 [p0] | CMP SUB_IMM 
143: 186 192 193 193, r49 -> p55 | J JMP_IMM 
144: 187 188 189 194, r1 -> p54, r1 -> p51 [p54], r49 -> p60 [p55] | ADD ADD_IMM 
145: 191 193 194 195, r0 -> p52, r0 -> p58 [p52] | INC ADD_IMM 
146: 192 194 195 196, r0 -> p58, r44 -> p6 [p63], r49 -> p57 [p60] | CMP SUB_IMM 
147: 193 195 196 197, r49 -> p57 | J JMP_IMM 
148: 194 196 197 198, r7 -> p7, r2 -> p1 [p2] | MOV ADD 
149: 195 197 201 201, r1 -> p51, r44 -> p45 [p6] | ADD LOAD 
150: 196 201 202 202, r2 -> p1, r44 -> p45, r2 -> p56 [p1], r49 -> p53 [p57] | ADD ADD 
151: 197 202 203 203, r2 -> p56, r2 -> p44 [p56] | MOVSX SEXT_DWORD_TO_QWORD 
152: 198 203 207 207, r2 -> p44, r45 -> p62 [p50] | CMP LOAD 
153: 201 207 208 208, r45 -> p62, r44 -> p8 [p45], r49 -> p49 [p53] | CMP SUB_IMM 
154: 202 208 209 209, r49 -> p49 | J JMP_IMM 
155: 203 204 205 210, r1 -> p51, r1 -> p0 [p51], r49 -> p54 [p49] | ADD ADD_IMM 
156: 207 209 210 211, r0 -> p58, r0 -> p55 [p58] | INC ADD_IMM 
157: 208 210 211 212, r0 -> p55, r44 -> p52 [p8], r49 -> p63 [p54] | CMP SUB_IMM 
158: 209 211 212 213, r49 -> p63 | J JMP_IMM 
159: 210 212 213 214, r7 -> p7, r2 -> p60 [p44] | MOV ADD 
160: 211 213 217 217, r1 -> p0, r44 -> p2 [p52] | ADD LOAD 
161: 212 217 218 218, r2 -> p60, r44 -> p2, r2 -> p6 [p60], r49 -> p1 [p63] | ADD ADD 
162: 213 218 219 219, r2 -> p6, r2 -> p57 [p6] | MOVSX SEXT_DWORD_TO_QWORD 
163: 214 219 223 223, r2 -> p57, r45 -> p56 [p62] | CMP LOAD 
164: 217 223 224 224, r45 -> p56, r44 -> p50 [p2], r49 -> p45 [p1] | CMP SUB_IMM 
165: 218 224 225 225, r49 -> p45 | J JMP_IMM 
166: 219 220 221 226, r1 -> p0, r1 -> p53 [p0], r49 -> p51 [p45] | ADD ADD_IMM 
167: 223 225 226 227, r0 -> p55, r0 -> p49 [p55] | INC ADD_IMM 
168: 224 226 227 228, r0 -> p49, r44 -> p58 [p50], r49 -> p8 [p51] | CMP SUB_IMM 
169: 225 227 228 229, r49 -> p8 | J JMP_IMM 
170: 226 228 229 230, r0 -> p54 [p49] | XOR ADD 
171: 227 229 230 231, r1 -> p44 [p53] | MOV ADD_IMM 
172: 228 230 231 232 | JMP JMP_IMM 
173: 229 231 232 233, r0 -> p54, r44 -> p52 [p58], r49 -> p60 [p8] | CMP SUB_IMM 
174: 230 232 233 234, r49 -> p60 | J JMP_IMM 
175: 231 233 237 237, r1 -> p44, r44 -> p63 [p52] | MOVSX LOAD 
176: 232 237 238 238, r44 -> p63, r2 -> p6 [p57] | MOVSX SEXT_DWORD_TO_QWORD 
177: 233 238 239 239, r7 -> p7, r2 -> p6, r6 -> p62 [p59] | LEA LEA 
178: 234 239 240 240, r6 -> p62, r6 -> p2 [p62] | MOVSX SEXT_DWORD_TO_QWORD 
179: 237 240 244 244, r6 -> p2, r6 -> p1 [p2] | MOV LOAD 
180: 238 244 245 245, r6 -> p1, r44 -> p0 [p63], r49 -> p45 [p60] | CMP SUB_IMM 
181: 239 245 246 246, r49 -> p45 | J JMP_IMM 
182: 240 241 242 247, r2 -> p6, r8 -> p55 [p61] | MOV ADD 
183: 244 246 247 248, r8 -> p55, r7 -> p7, r8 -> p50 [p55] | LEA LEA 
184: 245 247 248 249, r8 -> p50, r8 -> p51 [p50] | MOVSX SEXT_DWORD_TO_QWORD 
185: 246 248 249 250, r8 -> p51, r8 -> p49 [p51] | LEA LEA 
186: 247 249 250 251, r2 -> p6, r2 -> p53 [p6], r49 -> p58 [p45] | SHL SHL_IMM 
187: 248 250 251 252 | JMP JMP_IMM 
188: 249 251 252 253, r6 -> p1, r44 -> p8 [p0], r49 -> p52 [p58] | CMP SUB_IMM 
189: 250 252 253 254, r49 -> p52 | J JMP_IMM 
190: 251 253 254 255, r6 -> p1, r44 -> p57 [p8], r49 -> p59 [p52] | CMP SUB_IMM 
191: 252 254 255 256, r49 -> p59 | J JMP_IMM 
192: 253 255 256 257, r6 -> p1, r44 -> p62 [p57], r49 -> p2 [p59] | CMP SUB_IMM 
193: 254 256 257 258, r49 -> p2 | J JMP_IMM 
194: 255 257 258 259, r1 -> p44, r1 -> p63 [p44], r49 -> p60 [p2] | ADD ADD_IMM 
195: 256 258 259 260, r0 -> p54, r0 -> p61 [p54] | INC ADD_IMM 
196: 257 259 260 261, r0 -> p61, r44 -> p55 [p62], r49 -> p50 [p60] | CMP SUB_IMM 
197: 258 260 261 262, r49 -> p50 | J JMP_IMM 
198: 259 261 265 265, r1 -> p63, r44 -> p51 [p55] | MOVSX LOAD 
199: 260 265 266 266, r44 -> p51, r2 -> p6 [p53] | MOVSX SEXT_DWORD_TO_QWORD 
200: 261 266 267 267, r7 -> p7, r2 -> p6, r6 -> p45 [p1] | LEA LEA 
201: 262 267 268 268, r6 -> p45, r6 -> p0 [p45] | MOVSX SEXT_DWORD_TO_QWORD 
202: 265 268 272 272, r6 -> p0, r6 -> p58 [p0] | MOV LOAD 
203: 266 272 273 273, r6 -> p58, r44 -> p8 [p51], r49 -> p52 [p50] | CMP SUB_IMM 
204: 267 273 274 274, r49 -> p52 | J JMP_IMM 
205: 268 269 270 275, r2 -> p6, r8 -> p57 [p49] | MOV ADD 
206: 272 274 275 276, r8 -> p57, r7 -> p7, r8 -> p59 [p57] | LEA LEA 
207: 273 275 276 277, r8 -> p59, r8 -> p44 [p59] | MOVSX SEXT_DWORD_TO_QWORD 
208: 274 276 277 278, r8 -> p44, r8 -> p2 [p44] | LEA LEA 
209: 275 277 278 279, r2 -> p6, r2 -> p54 [p6], r49 -> p62 [p52] | SHL SHL_IMM 
210: 276 278 279 280 | JMP JMP_IMM 
211: 277 279 280 281, r6 -> p58, r44 -> p60 [p8], r49 -> p55 [p62] | CMP SUB_IMM 
212: 278 280 281 282, r49 -> p55 | J JMP_IMM 
213: 279 281 282 283, r6 -> p58, r44 -> p53 [p60], r49 -> p1 [p55] | CMP SUB_IMM 
214: 280 282 283 284, r49 -> p1 | J JMP_IMM 
215: 281 283 284 285, r6 -> p58, r44 -> p45 [p53], r49 -> p0 [p1] | CMP SUB_IMM 
216: 282 284 285 286, r49 -> p0 | J JMP_IMM 
217: 283 285 289 289, r8 -> p2, r6 -> p51 [p58] | MOV LOAD 
218: 284 286 287 290, r8 -> p2, r2 -> p54, r8 -> p50 [p2], r49 -> p49 [p0] | ADD ADD 
219: 285 289 290 291, r6 -> p51, r44 -> p57 [p45], r49 -> p59 [p49] | CMP SUB_IMM 
220: 286 290 291 292, r49 -> p59 | J JMP_IMM 
221: 289 291 292 293, r6 -> p51, r44 -> p44 [p57], r49 -> p6 [p59] | CMP SUB_IMM 
222: 290 292 293 294, r49 -> p6 | J JMP_IMM 
223: 291 293 294 295, r6 -> p51, r44 -> p52 [p44], r49 -> p8 [p6] | CMP SUB_IMM 
224: 292 294 295 296, r49 -> p8 | J JMP_IMM 
225: 293 295 299 299, r8 -> p50, r6 -> p62 [p51] | MOV LOAD 
226: 294 296 297 300, r8 -> p50, r2 -> p54, r8 -> p60 [p50], r49 -> p55 [p8] | ADD ADD 
227: 295 299 300 301, r6 -> p62, r44 -> p53 [p52], r49 -> p1 [p55] | CMP SUB_IMM 
228: 296 300 301 302, r49 -> p1 | J JMP_IMM 
229: 299 301 302 303, r6 -> p62, r44 -> p58 [p53], r49 -> p2 [p1] | CMP SUB_IMM 
230: 300 302 303 304, r49 -> p2 | J JMP_IMM 
231: 301 303 304 305, r6 -> p62, r44 -> p0 [p58], r49 -> p45 [p2] | CMP SUB_IMM 
232: 302 304 305 306, r49 -> p45 | J JMP_IMM 
233: 303 305 306 307, r1 -> p63, r1 -> p49 [p63], r49 -> p57 [p45] | ADD ADD_IMM 
234: 304 306 307 308, r0 -> p61, r0 -> p59 [p61] | INC ADD_IMM 
235: 305 307 308 309, r0 -> p59, r44 -> p44 [p0], r49 -> p6 [p57] | CMP SUB_IMM 
236: 306 308 309 310, r49 -> p6 | J JMP_IMM 
237: 307 309 313 313, r1 -> p49, r44 -> p51 [p44] | MOVSX LOAD 
238: 308 313 314 314, r44 -> p51, r2 -> p50 [p54] | MOVSX SEXT_DWORD_TO_QWORD 
239: 309 314 315 315, r7 -> p7, r2 -> p50, r6 -> p8 [p62] | LEA LEA 
240: 310 315 316 316, r6 -> p8, r6 -> p52 [p8] | MOVSX SEXT_DWORD_TO_QWORD 
241: 313 316 320 320, r6 -> p52, r6 -> p55 [p52] | MOV LOAD 
242: 314 320 321 321, r6 -> p55, r44 -> p53 [p51], r49 -> p1 [p6] | CMP SUB_IMM 
243: 315 321 322 322, r49 -> p1 | J JMP_IMM 
244: 316 317 318 323, r2 -> p50, r8 -> p58 [p60] | MOV ADD 
245: 320 322 323 324, r8 -> p58, r7 -> p7, r8 -> p2 [p58] | LEA LEA 
246: 321 323 324 325, r8 -> p2, r8 -> p63 [p2] | MOVSX SEXT_DWORD_TO_QWORD 
247: 322 324 325 326, r8 -> p63, r8 -> p45 [p63] | LEA LEA 
248: 323 325 326 327, r2 -> p50, r2 -> p61 [p50], r49 -> p0 [p1] | SHL SHL_IMM 
249: 324 326 327 328 | JMP JMP_IMM 
250: 325 327 328 329, r6 -> p55, r44 -> p57 [p53], r49 -> p44 [p0] | CMP SUB_IMM 
251: 326 328 329 330, r49 -> p44 | J JMP_IMM 
252: 327 329 330 331, r6 -> p55, r44 -> p54 [p57], r49 -> p62 [p44] | CMP SUB_IMM 
253: 328 330 331 332, r49 -> p62 | J JMP_IMM 
254: 329 331 332 333, r6 -> p55, r44 -> p8 [p54], r49 -> p52 [p62] | CMP SUB_IMM 
255: 330 332 333 334, r49 -> p52 | J JMP_IMM 
256: 331 333 337 337, r8 -> p45, r6 -> p51 [p55] | MOV LOAD 
257: 332 334 335 338, r8 -> p45, r2 -> p61, r8 -> p6 [p45], r49 -> p60 [p52] | ADD ADD 
258: 333 337 338 339, r6 -> p51, r44 -> p58 [p8], r49 -> p2 [p60] | CMP SUB_IMM 
259: 334 338 339 340, r49 -> p2 | J JMP_IMM 
260: 337 339 340 341, r6 -> p51, r44 -> p63 [p58], r49 -> p50 [p2] | CMP SUB_IMM 
261: 338 340 341 342, r49 -> p50 | J JMP_IMM 
262: 339 341 342 343, r6 -> p51, r44 -> p1 [p63], r49 -> p53 [p50] | CMP SUB_IMM 
263: 340 342 343 344, r49 -> p53 | J JMP_IMM 
264: 341 343 347 347, r8 -> p6, r6 -> p0 [p51] | MOV LOAD 
265: 342 344 345 348, r8 -> p6, r2 -> p61, r8 -> p57 [p6], r49 -> p44 [p53] | ADD ADD 
266: 343 347 348 349, r6 -> p0, r44 -> p54 [p1], r49 -> p62 [p44] | CMP SUB_IMM 
267: 344 348 349 350, r49 -> p62 | J JMP_IMM 
268: 347 349 350 351, r6 -> p0, r44 -> p55 [p54], r49 -> p45 [p62] | CMP SUB_IMM 
269: 348 350 351 352, r49 -> p45 | J JMP_IMM 
270: 349 351 352 353, r6 -> p0, r44 -> p52 [p55], r49 -> p8 [p45] | CMP SUB_IMM 
271: 350 352 353 354, r49 -> p8 | J JMP_IMM 
272: 351 353 354 355, r1 -> p49, r1 -> p60 [p49], r49 -> p58 [p8] | ADD ADD_IMM 
273: 352 354 355 356, r0 -> p59, r0 -> p2 [p59] | INC ADD_IMM 
274: 353 355 356 357, r0 -> p2, r44 -> p63 [p52], r49 -> p50 [p58] | CMP SUB_IMM 
275: 354 356 357 358, r49 -> p50 | J JMP_IMM 
276: 355 357 361 361, r1 -> p60, r44 -> p51 [p63] | MOVSX LOAD 
277: 356 361 362 362, r44 -> p51, r2 -> p6 [p61] | MOVSX SEXT_DWORD_TO_QWORD 
278: 357 362 363 363, r7 -> p7, r2 -> p6, r6 -> p53 [p0] | LEA LEA 
279: 358 363 364 364, r6 -> p53, r6 -> p1 [p53] | MOVSX SEXT_DWORD_TO_QWORD 
280: 361 364 368 368, r6 -> p1, r6 -> p44 [p1] | MOV LOAD 
281: 362 368 369 369, r6 -> p44, r44 -> p54 [p51], r49 -> p62 [p50] | CMP SUB_IMM 
282: 363 369 370 370, r49 -> p62 | J JMP_IMM 
283: 364 365 366 371, r2 -> p6, r8 -> p55 [p57] | MOV ADD 
284: 368 370 371 372, r8 -> p55, r7 -> p7, r8 -> p45 [p55] | LEA LEA 
285: 369 371 372 373, r8 -> p45, r8 -> p49 [p45] | MOVSX SEXT_DWORD_TO_QWORD 
286: 370 372 373 374, r8 -> p49, r8 -> p8 [p49] | LEA LEA 
287: 371 373 374 375, r2 -> p6, r2 -> p59 [p6], r49 -> p52 [p62] | SHL SHL_IMM 
288: 372 374 375 376 | JMP JMP_IMM 
289: 373 375 376 377, r6 -> p44, r44 -> p58 [p54], r49 -> p63 [p52] | CMP SUB_IMM 
290: 374 376 377 378, r49 -> p63 | J JMP_IMM 
291: 375 377 378 379, r6 -> p44, r44 -> p61 [p58], r49 -> p0 [p63] | CMP SUB_IMM 
292: 376 378 379 380, r49 -> p0 | J JMP_IMM 
293: 377 379 380 381, r6 -> p44, r44 -> p53 [p61], r49 -> p1 [p0] | CMP SUB_IMM 
294: 378 380 381 382, r49 -> p1 | J JMP_IMM 
295: 379 381 385 385, r8 -> p8, r6 -> p51 [p44] | MOV LOAD 
296: 380 382 383 386, r8 -> p8, r2 -> p59, r8 -> p50 [p8], r49 -> p57 [p1] | ADD ADD 
297: 381 385 386 387, r6 -> p51, r44 -> p55 [p53], r49 -> p45 [p57] | CMP SUB_IMM 
298: 382 386 387 388, r49 -> p45 | J JMP_IMM 
299: 385 387 388 389, r6 -> p51, r44 -> p49 [p55], r49 -> p6 [p45] | CMP SUB_IMM 
300: 386 388 389 390, r49 -> p6 | J JMP_IMM 
301: 387 389 390 391, r6 -> p51, r44 -> p62 [p49], r49 -> p54 [p6] | CMP SUB_IMM 
302: 388 390 391 392, r49 -> p54 | J JMP_IMM 
303: 389 391 395 395, r8 -> p50, r6 -> p52 [p51] | MOV LOAD 
304: 390 392 393 396, r8 -> p50, r2 -> p59, r8 -> p58 [p50], r49 -> p63 [p54] | ADD ADD 
305: 391 395 396 397, r6 -> p52, r44 -> p61 [p62], r49 -> p0 [p63] | CMP SUB_IMM 
306: 392 396 397 398, r49 -> p0 | J JMP_IMM 
307: 395 397 398 399, r6 -> p52, r44 -> p44 [p61], r49 -> p8 [p0] | CMP SUB_IMM 
308: 396 398 399 400, r49 -> p8 | J JMP_IMM 
309: 397 399 400 401, r6 -> p52, r44 -> p1 [p44], r49 -> p53 [p8] | CMP SUB_IMM 
310: 398 400 401 402, r49 -> p53 | J JMP_IMM 
311: 399 401 405 405, r8 -> p58, r6 -> p57 [p52] | MOV LOAD 
312: 400 402 403 406, r8 -> p58, r2 -> p59, r8 -> p55 [p58], r49 -> p45 [p53] | ADD ADD 
313: 401 405 406 407, r6 -> p57, r44 -> p49 [p1], r49 -> p6 [p45] | CMP SUB_IMM 
314: 402 406 407 408, r49 -> p6 | J JMP_IMM 
315: 405 407 408 409, r6 -> p57, r44 -> p51 [p49], r49 -> p50 [p6] | CMP SUB_IMM 
316: 406 408 409 410, r49 -> p50 | J JMP_IMM 
317: 407 409 410 411, r6 -> p57, r44 -> p54 [p51], r49 -> p62 [p50] | CMP SUB_IMM 
318: 408 410 411 412, r49 -> p62 | J JMP_IMM 
319: 409 411 412 413, r1 -> p60, r1 -> p63 [p60], r49 -> p61 [p62] | ADD ADD_IMM 
320: 410 412 413 414, r0 -> p2, r0 -> p0 [p2] | INC ADD_IMM 
321: 411 413 414 415, r0 -> p0, r44 -> p44 [p54], r49 -> p8 [p61] | CMP SUB_IMM 
322: 412 414 415 416, r49 -> p8 | J JMP_IMM 
323: 413 415 416 417, r0 -> p52 [p0] | XOR ADD 
324: 414 416 420 420, r4 -> p4, r44 -> p58 [p44] | RET LOAD 
325: 415 417 418 421, r4 -> p4, r4 -> p53 [p4] | RET ADD_IMM 
326: 416 420 421 422, r44 -> p58 | RET JMP_REG 
327: 417 418 419 423, r0 -> p52, r0 -> p52, r44 -> p1 [p58], r49 -> p45 [p8] | TEST AND 
328: 420 421 422 424, r0 -> p49 [p52] | SET ADD 
329: 421 422 423 425, r49 -> p45, r0 -> p6 [p49] | SET ADD_IMM 
330: 422 423 424 426, r0 -> p6, r0 -> p51 [p6] | MOVZX ZEXT_BYTE_TO_DWORD 
331: 423 424 425 427, r4 -> p53, r4 -> p50 [p53], r49 -> p60 [p45] | ADD ADD_IMM 
332: 424 425 429 429, r4 -> p50, r44 -> p62 [p1] | RET LOAD 
333: 425 426 427 430, r4 -> p50, r4 -> p2 [p50] | RET ADD_IMM 
334: 426 429 430 431, r44 -> p62 | RET JMP_REG 
335: 427 428 429 432, r0 -> p51, r0 -> p51, r44 -> p54 [p62], r49 -> p61 [p60] | TEST AND 
336: 429 430 431 433, r49 -> p61 | J JMP_IMM 
337: 430 431 432 434, r4 -> p2, r0 -> p0 [p51] | LEA LEA 
338: 431 432 433 435, r0 -> p0, r7 -> p44 [p7] | MOV ADD 
339: 432 433 434 436, r13 -> p13, r6 -> p4 [p57] | MOV ADD 
340: 433 434 435 437, r44 -> p58 [p54] | CALL SAVE_PC 
341: 434 435 436 438, r4 -> p2, r4 -> p8 [p2] | CALL SUB_IMM 
342: 435 436 437 439, r44 -> p58, r4 -> p8 | CALL STORE 
343: 436 437 438 440 | CALL JMP_IMM 
344: 437 438 439 441, r4 -> p8, r4 -> p52 [p8], r49 -> p49 [p61] | SUB SUB_IMM 
345: 438 439 440 442, r45 -> p6 [p56] | CMP SAVE_PC 
346: 439 440 444 444, r45 -> p6, r45 -> p53 [p6] | CMP LOAD 
347: 440 444 445 445, r45 -> p53, r44 -> p45 [p58], r49 -> p1 [p49] | CMP SUB_IMM 
348: 441 445 446 446, r49 -> p1 | J JMP_IMM 
349: 442 443 444 447, r6 -> p4, r0 -> p50 [p0] | MOVSX SEXT_DWORD_TO_QWORD 
350: 444 446 447 448, r0 -> p50, r0 -> p50, r1 -> p62 [p63] | LEA LEA 
351: 445 447 451 451, r1 -> p62, r7 -> p44, r44 -> p60 [p45] | MOVSX LOAD 
352: 446 451 452 452, r44 -> p60, r2 -> p51 [p59] | MOVSX SEXT_DWORD_TO_QWORD 
353: 447 448 452 453, r1 -> p62, r7 -> p44, r44 -> p7 [p60] | MOVSX LOAD 
354: 448 452 453 454, r44 -> p7, r1 -> p57 [p62] | MOVSX SEXT_DWORD_TO_QWORD 
355: 451 453 457 457, r1 -> p57, r6 -> p54 [p4] | MOV LOAD 
356: 452 454 455 458, r45 -> p2 [p53] | CMP SAVE_PC 
357: 453 455 459 459, r45 -> p2, r45 -> p8 [p2] | CMP LOAD 
358: 454 459 460 460, r45 -> p8, r44 -> p61 [p7], r49 -> p56 [p1] | CMP SUB_IMM 
359: 457 460 461 461, r49 -> p56 | J JMP_IMM 
360: 458 461 462 462, r6 -> p54, r6 -> p6 [p54], r49 -> p58 [p56] | ADD ADD_IMM 
361: 459 462 463 463, r6 -> p6, r44 -> p49 [p61], r49 -> p0 [p58] | CMP SUB_IMM 
362: 460 463 464 464, r49 -> p0 | J JMP_IMM 
363: 461 464 468 468, r6 -> p6, r44 -> p63 [p49] | JMP LOAD 
364: 462 468 469 469, r44 -> p63 | JMP JMP_REG 
365: 463 465 466 470, r1 -> p57, r6 -> p45 [p6] | LEA LEA 
366: 464 466 467 471, r6 -> p45, r0 -> p59 [p50] | MOVSX SEXT_DWORD_TO_QWORD 
367: 468 469 473 473, r0 -> p59, r45 -> p60 [p8] | CMP LOAD 
368: 469 473 474 474, r45 -> p60, r44 -> p62 [p63], r49 -> p4 [p0] | CMP SUB_IMM 
369: 470 474 475 475, r49 -> p4 | J JMP_IMM 
370: 471 472 473 476, r1 -> p57, r1 -> p53 [p57], r49 -> p2 [p4] | ADD ADD_IMM 
371: 473 475 476 477, r1 -> p53, r0 -> p7 [p59] | MOVSX SEXT_DWORD_TO_QWORD 
372: 474 476 480 480, r0 -> p7, r45 -> p1 [p60] | CMP LOAD 
373: 475 480 481 481, r45 -> p1, r44 -> p54 [p62], r49 -> p56 [p2] | CMP SUB_IMM 
374: 476 481 482 482, r49 -> p56 | J JMP_IMM 
375: 477 478 479 483, r2 -> p51, r2 -> p51, r44 -> p61 [p54], r49 -> p58 [p56] | TEST AND 
376: 480 482 483 484, r49 -> p58 | J JMP_IMM 
377: 481 483 484 485, r44 -> p49 [p61] | MOVSX SAVE_PC 
378: 482 484 488 488, r44 -> p49, r44 -> p6 [p49] | MOVSX LOAD 
379: 483 488 489 489, r44 -> p6, r0 -> p50 [p7] | MOVSX SEXT_DWORD_TO_QWORD 
380: 484 489 493 493, r0 -> p50, r6 -> p8 [p45] | MOV LOAD 
381: 485 486 490 494, r2 -> p51, r45 -> p63 [p1] | CMP LOAD 
382: 488 493 494 495, r45 -> p63, r6 -> p8, r44 -> p0 [p6], r49 -> p57 [p58] | CMP SUB 
383: 489 494 495 496, r49 -> p57 | J JMP_IMM 
384: 493 495 499 499, r0 -> p50, r6 -> p4 [p8] | MOV LOAD 
385: 494 496 500 500, r2 -> p51, r45 -> p59 [p63] | CMP LOAD 
386: 495 500 501 501, r45 -> p59, r6 -> p4, r44 -> p60 [p0], r49 -> p62 [p57] | CMP SUB 
387: 496 501 502 502, r49 -> p62 | J JMP_IMM 
388: 499 502 506 506, r0 -> p50, r6 -> p2 [p4] | MOV LOAD 
389: 500 503 507 507, r2 -> p51, r45 -> p54 [p59] | CMP LOAD 
390: 501 507 508 508, r45 -> p54, r6 -> p2, r44 -> p56 [p60], r49 -> p61 [p62] | CMP SUB 
391: 502 508 509 509, r49 -> p61 | J JMP_IMM 
392: 506 509 513 513, r0 -> p50, r6 -> p49 [p2] | MOV LOAD 
393: 507 510 514 514, r2 -> p51, r45 -> p7 [p54] | CMP LOAD 
394: 508 514 515 515, r45 -> p7, r6 -> p49, r44 -> p45 [p56], r49 -> p1 [p61] | CMP SUB 
395: 509 515 516 516, r49 -> p1 | J JMP_IMM 
396: 513 516 517 517, r0 -> p6 [p50] | XOR ADD 
397: 514 517 518 518, r4 -> p52, r4 -> p58 [p52], r49 -> p8 [p1] | ADD ADD_IMM 
398: 515 518 522 522, r4 -> p58, r44 -> p63 [p45] | RET LOAD 
399: 516 519 520 523, r4 -> p58, r4 -> p0 [p58] | RET ADD_IMM 
400: 517 522 523 524, r44 -> p63 | RET JMP_REG 
401: 518 520 521 525, r5 -> p5, r44 -> p57 [p63] | MOV LEA 
402: 522 523 524 526, r0 -> p6, r44 -> p57 | MOV STORE 
403: 523 524 525 527, r0 -> p6, r0 -> p6, r44 -> p4 [p57], r49 -> p59 [p8] | TEST AND 
404: 524 525 526 528, r49 -> p59 | J JMP_IMM 
405: 525 526 527 529, r44 -> p60 [p4] | MOV SAVE_PC 
406: 526 527 531 531, r44 -> p60, r14 -> p62 [p14] | MOV LOAD 
407: 527 531 532 532, r14 -> p62, r14 -> p2 [p62], r49 -> p54 [p59] | ADD ADD_IMM 
408: 528 532 533 533, r14 -> p2, r44 -> p56 [p60], r49 -> p61 [p54] | CMP SUB_IMM 
409: 529 533 534 534, r49 -> p61 | J JMP_IMM 
410: 531 534 538 538, r4 -> p0, r45 -> p50 [p7] | CMP LOAD 
411: 532 538 539 539, r45 -> p50, r44 -> p52 [p56], r49 -> p1 [p61] | CMP SUB_IMM 
412: 533 539 540 540, r49 -> p1 | J JMP_IMM 
413: 534 535 536 541, r13 -> p13, r1 -> p45 [p53] | MOVSX SEXT_DWORD_TO_QWORD 
414: 538 540 541 542, r1 -> p45, r1 -> p45, r1 -> p58 [p45] | LEA LEA 
415: 539 541 545 545, r1 -> p58, r4 -> p0, r44 -> p63 [p52] | MOVSX LOAD 
416: 540 545 546 546, r44 -> p63, r1 -> p57 [p58] | MOVSX SEXT_DWORD_TO_QWORD 
417: 541 546 550 550, r1 -> p57, r14 -> p8 [p2] | MOV LOAD 
418: 542 550 551 551, r14 -> p8, r44 -> p4 [p63], r49 -> p14 [p1] | CMP SUB_IMM 
419: 545 551 552 552, r49 -> p14 | J JMP_IMM 
420: 546 552 553 553, r14 -> p8, r44 -> p62 [p4], r49 -> p59 [p14] | CMP SUB_IMM 
421: 550 553 554 554, r49 -> p59 | J JMP_IMM 
422: 551 554 558 558, r1 -> p57, r1 -> p60 [p57] | MOV LOAD 
423: 552 555 556 559 | JMP JMP_IMM 
424: 553 558 559 560, r1 -> p60, r44 -> p54 [p62], r49 -> p7 [p59] | CMP SUB_IMM 
425: 554 559 560 561, r49 -> p7 | J JMP_IMM 
426: 558 560 561 562, r14 -> p56 [p8] | XOR ADD 
427: 559 561 562 563 | JMP JMP_IMM 
428: 560 562 563 564, r13 -> p13, r1 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD 
429: 561 563 564 565, r1 -> p61, r1 -> p61, r2 -> p53 [p51] | LEA LEA 
430: 562 564 568 568, r2 -> p53, r4 -> p0, r45 -> p45 [p50] | CMP LOAD 
431: 563 568 569 569, r45 -> p45, r44 -> p52 [p54], r49 -> p58 [p7] | CMP SUB 
432: 564 569 570 570, r49 -> p58 | J JMP_IMM 
433: 565 566 567 571, r0 -> p6, r0 -> p6, r44 -> p2 [p52], r49 -> p63 [p58] | TEST AND 
434: 568 570 571 572, r0 -> p1 [p6] | SET ADD 
435: 569 571 572 573, r49 -> p63, r0 -> p4 [p1] | SET ADD_IMM 
436: 570 572 576 576, r4 -> p0, r45 -> p14 [p45] | CMP LOAD 
437: 571 576 577 577, r45 -> p14, r44 -> p57 [p2], r49 -> p62 [p63] | CMP SUB 
438: 572 577 578 578, r49 -> p62 | J JMP_IMM 
439: 573 574 578 579, r4 -> p0, r2 -> p59 [p53] | MOV LOAD 
440: 576 578 579 580, r14 -> p56, r2 -> p59, r5 -> p8 [p5] | LEA LEA 
441: 577 579 583 583, r4 -> p0, r45 -> p60 [p14] | TEST LOAD 
442: 578 583 584 584, r45 -> p60, r44 -> p51 [p57], r49 -> p50 [p62] | TEST AND_IMM 
443: 579 584 585 585, r49 -> p50 | J JMP_IMM 
444: 580 581 582 586, r14 -> p54 [p56] | XOR ADD 
445: 583 585 589 589, r4 -> p0, r7 -> p7 [p44] | MOV LOAD 
446: 584 586 587 590, r12 -> p12, r6 -> p52 [p49] | MOV ADD 
447: 585 587 588 591, r5 -> p8, r2 -> p58 [p59] | MOV ADD 
448: 586 588 589 592, r1 -> p6 [p61] | XOR ADD 
449: 589 590 591 593, r44 -> p1 [p51] | CALL SAVE_PC 
450: 590 591 592 594, r4 -> p0, r4 -> p45 [p0] | CALL SUB_IMM 
451: 591 592 593 595, r44 -> p1, r4 -> p45 | CALL STORE 
452: 592 593 594 596 | CALL JMP_IMM 
453: 593 594 595 597, r5 -> p8, r4 -> p45 | PUSH STORE 
454: 594 595 596 598, r4 -> p45, r4 -> p2 [p45] | PUSH SUB_IMM 
455: 595 596 597 599, r15 -> p15, r4 -> p2 | PUSH STORE 
456: 596 597 598 600, r4 -> p2, r4 -> p63 [p2] | PUSH SUB_IMM 
457: 597 598 599 601, r14 -> p54, r4 -> p63 | PUSH STORE 
458: 598 599 600 602, r4 -> p63, r4 -> p53 [p63] | PUSH SUB_IMM 
459: 599 600 601 603, r13 -> p13, r4 -> p53 | PUSH STORE 
460: 600 601 602 604, r4 -> p53, r4 -> p5 [p53] | PUSH SUB_IMM 
461: 601 602 603 605, r12 -> p12, r4 -> p5 | PUSH STORE 
462: 602 603 604 606, r4 -> p5, r4 -> p14 [p5] | PUSH SUB_IMM 
463: 603 604 605 607, r3 -> p3, r4 -> p14 | PUSH STORE 
464: 604 605 606 608, r4 -> p14, r4 -> p57 [p14] | PUSH SUB_IMM 
465: 605 606 607 609, r4 -> p57, r4 -> p62 [p57], r49 -> p56 [p50] | SUB SUB_IMM 
466: 606 607 608 610, r44 -> p44 [p1] | MOV SAVE_PC 
467: 607 608 612 612, r44 -> p44, r0 -> p49 [p4] | MOV LOAD 
468: 608 612 613 613, r0 -> p49, r0 -> p59 [p49] | INC ADD_IMM 
469: 609 610 611 614, r44 -> p61 [p44] | MOV SAVE_PC 
470: 610 613 614 615, r0 -> p59, r44 -> p61 | MOV STORE 
471: 612 614 615 616, r0 -> p59, r44 -> p51 [p61], r49 -> p0 [p56] | TEST AND_IMM 
472: 613 615 616 617, r1 -> p6, r4 -> p62 | MOV STORE 
473: 614 616 617 618, r2 -> p58, r4 -> p62 | MOV STORE 
474: 615 617 618 619, r6 -> p52, r4 -> p62 | MOV STORE 
475: 616 618 619 620, r7 -> p7, r4 -> p62 | MOV STORE 
476: 617 619 620 621, r49 -> p0 | J JMP_IMM 
477: 618 620 621 622, r4 -> p62 | MOV STORE 
478: 619 621 622 623, r44 -> p45 [p51] | MOVSX SAVE_PC 
479: 620 622 626 626, r44 -> p45, r44 -> p2 [p45] | MOVSX LOAD 
480: 621 626 627 627, r44 -> p2, r3 -> p63 [p3] | MOVSX SEXT_DWORD_TO_QWORD 
481: 622 627 628 628, r3 -> p63, r44 -> p53 [p2] | MOV LEA 
482: 623 628 629 629, r3 -> p63, r44 -> p53 | MOV STORE 
483: 626 629 630 630, r44 -> p5 [p53] | CALL SAVE_PC 
484: 627 630 631 631, r4 -> p62, r4 -> p14 [p62] | CALL SUB_IMM 
485: 628 631 632 632, r44 -> p5, r4 -> p14 | CALL STORE 
486: 629 632 633 633 | CALL JMP_IMM 
487: 630 633 634 634, r44 -> p57 [p5] | MOV SAVE_PC 
488: 631 634 638 638, r44 -> p57, r0 -> p50 [p59] | MOV LOAD 
489: 632 638 639 639, r0 -> p50, r44 -> p1 [p57], r49 -> p4 [p0] | CMP SUB_IMM 
490: 633 639 640 640, r49 -> p4 | J JMP_IMM 
491: 634 640 641 641, r0 -> p50, r44 -> p49 [p1], r49 -> p44 [p4] | CMP SUB_IMM 
492: 638 641 642 642, r49 -> p44 | J JMP_IMM 
493: 639 642 643 643, r0 -> p61 [p50] | XOR ADD 
494: 640 643 647 647, r4 -> p14, r44 -> p56 [p49] | RET LOAD 
495: 641 644 645 648, r4 -> p14, r4 -> p51 [p14] | RET ADD_IMM 
496: 642 647 648 649, r44 -> p56 | RET JMP_REG 
497: 643 645 646 650, r0 -> p61, r0 -> p61, r44 -> p45 [p56], r49 -> p3 [p44] | TEST AND 
498: 647 648 649 651, r49 -> p3 | J JMP_IMM 
499: 648 649 653 653, r3 -> p63, r0 -> p2 [p61] | MOV LOAD 
500: 649 653 654 654, r0 -> p2, r4 -> p51 | MOV STORE 
501: 650 651 652 655, r3 -> p63, r44 -> p53 [p45] | MOV LEA 
502: 651 652 653 656, r44 -> p53 | MOV STORE 
503: 653 654 655 657, r3 -> p63, r44 -> p62 [p53], r49 -> p5 [p3] | CMP SUB_IMM 
504: 654 655 656 658, r49 -> p5 | J JMP_IMM 
505: 655 656 657 659, r0 -> p2, r0 -> p2, r44 -> p59 [p62], r49 -> p57 [p5] | TEST AND 
506: 656 657 658 660, r49 -> p57 | J JMP_IMM 
507: 657 658 659 661, r4 -> p51 | MOV STORE 
508: 658 659 660 662 | JMP JMP_IMM 
509: 659 660 664 664, r4 -> p51, r45 -> p0 [p60] | CMP LOAD 
510: 660 664 665 665, r45 -> p0, r44 -> p1 [p59], r49 -> p4 [p57] | CMP SUB 
511: 661 665 666 666, r49 -> p4 | J JMP_IMM 
512: 662 663 664 667, r44 -> p50 [p1] | MOV SAVE_PC 
513: 664 666 670 670, r44 -> p50, r0 -> p49 [p2] | MOV LOAD 
514: 665 670 671 671, r0 -> p49, r44 -> p14 [p50], r49 -> p56 [p4] | CMP SUB_IMM 
515: 666 671 672 672, r49 -> p56 | J JMP_IMM 
516: 667 672 673 673, r0 -> p49, r44 -> p44 [p14], r49 -> p61 [p56] | CMP SUB_IMM 
517: 670 673 674 674, r49 -> p61 | J JMP_IMM 
518: 671 674 675 675, r2 -> p45 [p58] | MOV ADD_IMM 
519: 672 675 676 676, r2 -> p45, r3 -> p63, r2 -> p53 [p45], r49 -> p3 [p61] | SUB SUB 
520: 673 676 677 677, r44 -> p62 [p44] | MOV ADD_IMM 
521: 674 677 678 678, r45 -> p5 [p0] | MOV SAVE_PC 
522: 675 678 679 679, r44 -> p62, r45 -> p5 | MOV STORE 
523: 676 679 683 683, r4 -> p51, r7 -> p60 [p7] | MOV LOAD 
524: 677 680 684 684, r4 -> p51, r6 -> p59 [p52] | MOV LOAD 
525: 678 681 682 685, r44 -> p57 [p62] | CALL SAVE_PC 
526: 679 682 683 686, r4 -> p51, r4 -> p1 [p51] | CALL SUB_IMM 
527: 683 684 685 687, r44 -> p57, r4 -> p1 | CALL STORE 
528: 684 685 686 688 | CALL JMP_IMM 
529: 685 686 687 689, r5 -> p8, r4 -> p1 | PUSH STORE 
530: 686 687 688 690, r4 -> p1, r4 -> p2 [p1] | PUSH SUB_IMM 
531: 687 688 689 691, r15 -> p15, r4 -> p2 | PUSH STORE 
532: 688 689 690 692, r4 -> p2, r4 -> p50 [p2] | PUSH SUB_IMM 
533: 689 690 691 693, r14 -> p54, r4 -> p50 | PUSH STORE 
534: 690 691 692 694, r4 -> p50, r4 -> p4 [p50] | PUSH SUB_IMM 
535: 691 692 693 695, r13 -> p13, r4 -> p4 | PUSH STORE 
536: 692 693 694 696, r4 -> p4, r4 -> p14 [p4] | PUSH SUB_IMM 
537: 693 694 695 697, r12 -> p12, r4 -> p14 | PUSH STORE 
538: 694 695 696 698, r4 -> p14, r4 -> p56 [p14] | PUSH SUB_IMM 
539: 695 696 697 699, r3 -> p63, r4 -> p56 | PUSH STORE 
540: 696 697 698 700, r4 -> p56, r4 -> p58 [p56] | PUSH SUB_IMM 
541: 697 698 699 701, r4 -> p58, r4 -> p45 [p58], r49 -> p61 [p3] | SUB SUB_IMM 
542: 698 699 700 702, r44 -> p44 [p57] | MOVSX SAVE_PC 
543: 699 700 704 704, r44 -> p44, r44 -> p0 [p44] | MOVSX LOAD 
544: 700 704 705 705, r44 -> p0, r0 -> p7 [p49] | MOVSX SEXT_DWORD_TO_QWORD 
545: 701 705 706 706, r0 -> p7, r44 -> p52 [p0] | MOV LEA 
546: 702 706 707 707, r0 -> p7, r44 -> p52 | MOV STORE 
547: 704 707 708 708, r44 -> p62 [p52] | MOVZX SAVE_PC 
548: 705 708 712 712, r44 -> p62, r44 -> p51 [p62] | MOVZX LOAD 
549: 706 712 713 713, r44 -> p51, r0 -> p1 [p7] | MOVZX ZEXT_WORD_TO_DWORD 
550: 707 713 714 714, r0 -> p1, r0 -> p1, r44 -> p2 [p51], r49 -> p50 [p61] | TEST AND 
551: 708 709 710 715, r2 -> p53, r4 -> p45 | MOV STORE 
552: 712 714 715 716, r6 -> p59, r4 -> p45 | MOV STORE 
553: 713 715 716 717, r7 -> p60, r4 -> p45 | MOV STORE 
554: 714 716 717 718, r49 -> p50 | J JMP_IMM 
555: 715 717 721 721, r4 -> p45, r45 -> p4 [p5] | CMP LOAD 
556: 716 721 722 722, r45 -> p4, r44 -> p14 [p2], r49 -> p56 [p50] | CMP SUB 
557: 717 722 723 723, r49 -> p56 | J JMP_IMM 
558: 718 719 720 724, r45 -> p58 [p4] | CMP SAVE_PC 
559: 721 723 727 727, r45 -> p58, r45 -> p3 [p58] | CMP LOAD 
560: 722 727 728 728, r45 -> p3, r44 -> p57 [p14], r49 -> p44 [p56] | CMP SUB_IMM 
561: 723 728 729 729, r49 -> p44 | J JMP_IMM 
562: 724 725 726 730, r44 -> p49 [p57] | INC SAVE_PC 
563: 727 729 733 733, r44 -> p49, r44 -> p0 [p49] | INC LOAD 
564: 728 733 734 734, r44 -> p0, r44 -> p52 [p0] | INC ADD_IMM 
565: 729 730 731 735, r45 -> p62 [p3] | INC SAVE_PC 
566: 730 734 735 736, r44 -> p52, r45 -> p62 | INC STORE 
567: 733 735 736 737, r44 -> p7 [p52] | INC SAVE_PC 
568: 734 736 740 740, r44 -> p7, r44 -> p51 [p7] | INC LOAD 
569: 735 740 741 741, r44 -> p51, r44 -> p61 [p51] | INC ADD_IMM 
570: 736 737 738 742, r45 -> p5 [p62] | INC SAVE_PC 
571: 737 741 742 743, r44 -> p61, r45 -> p5 | INC STORE 
572: 740 742 743 744, r44 -> p2 [p61] | INC SAVE_PC 
573: 741 743 747 747, r44 -> p2, r44 -> p50 [p2] | INC LOAD 
574: 742 747 748 748, r44 -> p50, r44 -> p4 [p50] | INC ADD_IMM 
575: 743 744 745 749, r45 -> p58 [p5] | INC SAVE_PC 
576: 744 748 749 750, r44 -> p4, r45 -> p58 | INC STORE 
577: 747 749 750 751, r1 -> p14 [p6] | MOV ADD_IMM 
578: 748 750 751 752, r44 -> p56 [p4] | MOV SAVE_PC 
579: 749 751 755 755, r44 -> p56, r6 -> p57 [p59] | MOV LOAD 
580: 750 755 756 756, r6 -> p57, r0 -> p49 [p1] | MOV ADD 
581: 751 756 757 757, r0 -> p49, r1 -> p14, r44 -> p0 [p56], r49 -> p3 [p44] | MUL MUL 
582: 752 757 758 758, r44 -> p0, r0 -> p52 [p49] | MUL ADD 
583: 755 758 759 759, r44 -> p0, r2 -> p7 [p53] | MUL UPPER_HALF 
584: 756 759 760 760, r2 -> p7, r2 -> p51 [p7], r49 -> p62 [p3] | SHR SHR_IMM 
585: 757 760 761 761, r2 -> p51, r0 -> p61 [p52], r49 -> p2 [p62] | IMUL IMUL_T_IMM 
586: 758 761 762 762, r6 -> p57, r1 -> p50 [p14] | MOV ADD 
587: 759 762 763 763, r1 -> p50, r0 -> p61, r1 -> p5 [p50], r49 -> p6 [p2] | SUB SUB 
588: 760 763 764 764, r1 -> p5, r0 -> p4 [p61] | MOV ADD 
589: 761 764 765 765, r0 -> p4, r0 -> p59 [p4], r49 -> p1 [p6] | SHL SHL_IMM 
590: 762 765 766 766, r44 -> p56 [p0] | MOV SAVE_PC 
591: 763 766 770 770, r44 -> p56, r2 -> p44 [p51] | MOV LOAD 
592: 764 770 774 774, r0 -> p59, r2 -> p44, r45 -> p49 [p58] | CMP LOAD 
593: 765 774 775 775, r45 -> p49, r6 -> p57, r44 -> p53 [p56], r49 -> p7 [p1] | CMP SUB 
594: 766 775 776 776, r49 -> p7 | J JMP_IMM 
595: 770 771 772 777, r44 -> p3 [p53] | MOV ADD_IMM 
596: 774 776 777 778, r44 -> p3, r4 -> p45 | MOV STORE 
597: 775 777 781 781, r4 -> p45, r7 -> p52 [p60] | MOV LOAD 
598: 776 778 782 782, r4 -> p45, r3 -> p62 [p63] | MOV LOAD 
599: 777 782 783 783, r3 -> p62, r6 -> p14 [p57] | MOV ADD 
600: 778 779 780 784, r44 -> p50 [p3] | CALL SAVE_PC 
601: 781 783 784 785, r4 -> p45, r4 -> p2 [p45] | CALL SUB_IMM 
602: 782 784 785 786, r44 -> p50, r4 -> p2 | CALL STORE 
603: 783 785 786 787 | CALL JMP_IMM 
604: 784 786 787 788, r5 -> p8, r4 -> p2 | PUSH STORE 
605: 785 787 788 789, r4 -> p2, r4 -> p61 [p2] | PUSH SUB_IMM 
606: 786 788 789 790, r15 -> p15, r4 -> p61 | PUSH STORE 
607: 787 789 790 791, r4 -> p61, r4 -> p4 [p61] | PUSH SUB_IMM 
608: 788 790 791 792, r14 -> p54, r4 -> p4 | PUSH STORE 
609: 789 791 792 793, r4 -> p4, r4 -> p6 [p4] | PUSH SUB_IMM 
610: 790 792 793 794, r13 -> p13, r4 -> p6 | PUSH STORE 
611: 791 793 794 795, r4 -> p6, r4 -> p0 [p6] | PUSH SUB_IMM 
612: 792 794 795 796, r12 -> p12, r4 -> p0 | PUSH STORE 
613: 793 795 796 797, r4 -> p0, r4 -> p51 [p0] | PUSH SUB_IMM 
614: 794 796 797 798, r3 -> p62, r4 -> p51 | PUSH STORE 
615: 795 797 798 799, r4 -> p51, r4 -> p58 [p51] | PUSH SUB_IMM 
616: 796 798 799 800, r4 -> p58, r4 -> p56 [p58], r49 -> p1 [p7] | SUB SUB_IMM 
617: 797 799 800 801, r44 -> p53 [p50] | MOV SAVE_PC 
618: 798 800 804 804, r44 -> p53, r1 -> p60 [p5] | MOV LOAD 
619: 799 804 805 805, r1 -> p60, r44 -> p63 [p53], r49 -> p57 [p1] | CMP SUB_IMM 
620: 800 805 806 806, r49 -> p57 | J JMP_IMM 
621: 801 806 807 807, r1 -> p60, r44 -> p3 [p63], r49 -> p45 [p57] | CMP SUB_IMM 
622: 804 807 808 808, r49 -> p45 | J JMP_IMM 
623: 805 808 809 809, r1 -> p60, r44 -> p2 [p3], r49 -> p61 [p45] | CMP SUB_IMM 
624: 806 809 810 810, r49 -> p61 | J JMP_IMM 
625: 807 810 811 811, r44 -> p4 [p2] | MOV SAVE_PC 
626: 808 811 815 815, r44 -> p4, r1 -> p6 [p60] | MOV LOAD 
627: 809 815 816 816, r1 -> p6, r2 -> p0 [p44] | MOV ADD 
628: 810 816 817 817, r2 -> p0, r2 -> p51 [p0], r49 -> p58 [p61] | NEG SUB 
629: 811 812 813 818, r44 -> p7 [p4] | MOV SAVE_PC 
630: 815 817 821 821, r44 -> p7, r8 -> p50 [p55] | MOV LOAD 
631: 816 821 822 822, r8 -> p50, r8 -> p50, r44 -> p5 [p7], r49 -> p53 [p58] | TEST AND 
632: 817 822 823 823, r1 -> p6, r49 -> p53, r2 -> p1 [p51] | CMOV ADD 
633: 818 819 820 824, r44 -> p63 [p5] | MOV SAVE_PC 
634: 821 823 827 827, r44 -> p63, r1 -> p57 [p6] | MOV LOAD 
635: 822 824 825 828, r2 -> p1, r0 -> p3 [p59] | MOV ADD 
636: 823 827 828 829, r0 -> p3, r1 -> p57, r0 -> p45 [p3], r49 -> p2 [p53] | SUB SUB 
637: 824 828 829 830, r0 -> p45, r6 -> p14, r44 -> p60 [p63], r49 -> p44 [p2] | CMP SUB 
638: 827 829 830 831, r49 -> p44 | J JMP_IMM 
639: 828 830 831 832, r2 -> p1, r1 -> p57, r2 -> p0 [p1], r49 -> p61 [p44] | ADD ADD 
640: 829 831 832 833, r2 -> p0, r7 -> p52, r44 -> p4 [p60], r49 -> p55 [p61] | CMP SUB 
641: 830 832 833 834, r49 -> p55 | J JMP_IMM 
642: 831 833 834 835, r2 -> p0, r0 -> p7 [p45] | MOV ADD 
643: 832 834 835 836 | JMP JMP_IMM 
644: 833 835 836 837, r4 -> p56, r4 -> p58 [p56], r49 -> p51 [p55] | ADD ADD_IMM 
645: 834 836 840 840, r4 -> p58, r3 -> p5 [p62] | POP LOAD 
646: 835 837 838 841, r4 -> p58, r4 -> p6 [p58] | POP ADD_IMM 
647: 836 838 842 842, r4 -> p6, r12 -> p59 [p12] | POP LOAD 
648: 837 839 840 843, r4 -> p6, r4 -> p3 [p6] | POP ADD_IMM 
649: 840 841 845 845, r4 -> p3, r13 -> p53 [p13] | POP LOAD 
650: 841 842 843 846, r4 -> p3, r4 -> p63 [p3] | POP ADD_IMM 
651: 842 843 847 847, r4 -> p63, r14 -> p2 [p54] | POP LOAD 
652: 843 844 845 848, r4 -> p63, r4 -> p1 [p63] | POP ADD_IMM 
653: 845 846 850 850, r4 -> p1, r15 -> p44 [p15] | POP LOAD 
654: 846 847 848 851, r4 -> p1, r4 -> p60 [p1] | POP ADD_IMM 
655: 847 848 852 852, r4 -> p60, r5 -> p61 [p8] | POP LOAD 
656: 848 849 850 853, r4 -> p60, r4 -> p45 [p60] | POP ADD_IMM 
657: 850 851 855 855, r4 -> p45, r44 -> p56 [p4] | RET LOAD 
658: 851 852 853 856, r4 -> p45, r4 -> p55 [p45] | RET ADD_IMM 
659: 852 855 856 857, r44 -> p56 | RET JMP_REG 
660: 853 854 855 858, r0 -> p7, r3 -> p5, r44 -> p62 [p56], r49 -> p58 [p51] | CMP SUB 
661: 855 856 857 859, r0 -> p7, r3 -> p12 [p5] | MOV ADD 
662: 856 857 858 860, r49 -> p58 | J JMP_IMM 
663: 857 858 859 861, r4 -> p55, r7 -> p6 [p52] | LEA LEA 
664: 858 859 860 862, r44 -> p13 [p62] | CALL SAVE_PC 
665: 859 860 861 863, r4 -> p55, r4 -> p3 [p55] | CALL SUB_IMM 
666: 860 861 862 864, r44 -> p13, r4 -> p3 | CALL STORE 
667: 861 862 863 865 | CALL JMP_IMM 
668: 862 863 864 866, r5 -> p61, r4 -> p3 | PUSH STORE 
669: 863 864 865 867, r4 -> p3, r4 -> p54 [p3] | PUSH SUB_IMM 
670: 864 865 866 868, r15 -> p44, r4 -> p54 | PUSH STORE 
671: 865 866 867 869, r4 -> p54, r4 -> p63 [p54] | PUSH SUB_IMM 
672: 866 867 868 870, r14 -> p2, r4 -> p63 | PUSH STORE 
673: 867 868 869 871, r4 -> p63, r4 -> p15 [p63] | PUSH SUB_IMM 
674: 868 869 870 872, r13 -> p53, r4 -> p15 | PUSH STORE 
675: 869 870 871 873, r4 -> p15, r4 -> p1 [p15] | PUSH SUB_IMM 
676: 870 871 872 874, r12 -> p59, r4 -> p1 | PUSH STORE 
677: 871 872 873 875, r4 -> p1, r4 -> p8 [p1] | PUSH SUB_IMM 
678: 872 873 874 876, r3 -> p12, r4 -> p8 | PUSH STORE 
679: 873 874 875 877, r4 -> p8, r4 -> p60 [p8] | PUSH SUB_IMM 
680: 874 875 876 878, r4 -> p60, r4 -> p4 [p60], r49 -> p45 [p58] | SUB SUB_IMM 
681: 875 876 877 879, r44 -> p56 [p13] | MOV SAVE_PC 
682: 876 877 878 880, r44 -> p56 | MOV STORE 
683: 877 878 879 881, r44 -> p51 [p56] | MOV SAVE_PC 
684: 878 879 880 882, r44 -> p51 | MOV STORE 
685: 879 880 881 883, r44 -> p5 [p51] | MOV SAVE_PC 
686: 880 881 882 884, r7 -> p6, r44 -> p5 | MOV STORE 
687: 881 882 883 885, r45 -> p52 [p49] | CMP SAVE_PC 
688: 882 883 887 887, r45 -> p52, r45 -> p62 [p52] | CMP LOAD 
689: 883 887 888 888, r45 -> p62, r44 -> p55 [p5], r49 -> p3 [p45] | CMP SUB_IMM 
690: 884 888 889 889, r49 -> p3 | J JMP_IMM 
691: 885 886 887 890, r44 -> p54 [p55] | MOV SAVE_PC 
692: 887 889 893 893, r44 -> p54, r0 -> p63 [p7] | MOV LOAD 
693: 888 893 894 894, r0 -> p63, r4 -> p4 | MOV STORE 
694: 889 890 891 895, r44 -> p15 [p54] | MOV SAVE_PC 
695: 890 891 895 896, r44 -> p15, r3 -> p1 [p12] | MOV LOAD 
696: 893 894 895 897, r44 -> p8 [p15] | MOV SAVE_PC 
697: 894 895 899 899, r44 -> p8, r0 -> p60 [p63] | MOV LOAD 
698: 895 899 900 900, r0 -> p60, r4 -> p4 | MOV STORE 
699: 896 897 898 901, r44 -> p58 [p8] | MOV SAVE_PC 
700: 897 898 902 902, r44 -> p58, r0 -> p13 [p60] | MOV LOAD 
701: 899 902 903 903, r0 -> p13, r4 -> p4 | MOV STORE 
702: 900 901 902 904, r14 -> p56 [p2] | MOV ADD_IMM 
703: 901 903 904 905 | JMP JMP_IMM 
704: 902 904 908 908, r4 -> p4, r45 -> p51 [p62] | CMP LOAD 
705: 903 908 909 909, r45 -> p51, r44 -> p49 [p58], r49 -> p52 [p3] | CMP SUB 
706: 904 909 910 910, r49 -> p52 | J JMP_IMM 
707: 905 906 907 911, r15 -> p5 [p44] | MOV ADD_IMM 
708: 908 910 911 912, r12 -> p45 [p59] | MOV ADD_IMM 
709: 909 911 912 913 | JMP JMP_IMM 
710: 910 912 916 916, r4 -> p4, r45 -> p55 [p51] | CMP LOAD 
711: 911 916 917 917, r15 -> p5, r45 -> p55, r44 -> p7 [p49], r49 -> p54 [p52] | CMP SUB 
712: 912 917 918 918, r49 -> p54 | J JMP_IMM 
713: 913 914 915 919, r44 -> p12 [p7] | MOV SAVE_PC 
714: 916 918 922 922, r44 -> p12, r0 -> p15 [p13] | MOV LOAD 
715: 917 922 923 923, r0 -> p15, r44 -> p63 [p12], r49 -> p8 [p54] | CMP SUB_IMM 
716: 918 923 924 924, r49 -> p8 | J JMP_IMM 
717: 919 920 921 925, r44 -> p60 [p63] | MOV SAVE_PC 
718: 922 924 928 928, r44 -> p60, r1 -> p2 [p57] | MOV LOAD 
719: 923 928 929 929, r1 -> p2, r44 -> p62 [p60], r49 -> p58 [p8] | CMP SUB_IMM 
720: 924 929 930 930, r49 -> p58 | J JMP_IMM 
721: 925 926 930 931, r12 -> p45, r44 -> p3 [p62] | MOVSX LOAD 
722: 928 930 931 932, r44 -> p3, r13 -> p44 [p53] | MOVSX SEXT_DWORD_TO_QWORD 
723: 929 931 932 933, r13 -> p44, r13 -> p44, r44 -> p59 [p3], r49 -> p51 [p58] | TEST AND 
724: 930 932 933 934, r49 -> p51 | J JMP_IMM 
725: 931 933 934 935, r13 -> p44, r5 -> p49 [p61] | MOV ADD 
726: 932 934 935 936, r44 -> p52 [p59] | MOV SAVE_PC 
727: 933 935 936 937, r5 -> p49, r44 -> p52 | MOV STORE 
728: 934 936 937 938, r15 -> p5, r15 -> p7 [p5] | INC ADD_IMM 
729: 935 937 941 941, r13 -> p44, r1 -> p13 [p2] | MOV LOAD 
730: 936 941 942 942, r1 -> p13, r1 -> p12 [p13] | DEC SUB_IMM 
731: 937 942 943 943, r1 -> p12, r44 -> p54 [p52], r49 -> p63 [p51] | CMP SUB_IMM 
732: 938 943 944 944, r49 -> p63 | J JMP_IMM 
733: 941 944 948 948, r1 -> p12, r44 -> p57 [p54] | JMP LOAD 
734: 942 948 949 949, r44 -> p57 | JMP JMP_REG 
735: 943 945 946 950, r5 -> p49, r7 -> p60 [p6] | LEA LEA 
736: 944 946 947 951, r7 -> p60, r0 -> p8 [p15] | MOVSX SEXT_DWORD_TO_QWORD 
737: 948 949 953 953, r0 -> p8, r45 -> p62 [p55] | CMP LOAD 
738: 949 953 954 954, r45 -> p62, r44 -> p53 [p57], r49 -> p3 [p63] | CMP SUB 
739: 950 954 955 955, r49 -> p3 | J JMP_IMM 
740: 951 952 953 956, r5 -> p49, r7 -> p58 [p60] | LEA LEA 
741: 953 955 956 957, r7 -> p58, r0 -> p61 [p8] | MOVSX SEXT_DWORD_TO_QWORD 
742: 954 956 960 960, r0 -> p61, r45 -> p59 [p62] | CMP LOAD 
743: 955 960 961 961, r45 -> p59, r44 -> p5 [p53], r49 -> p2 [p3] | CMP SUB 
744: 956 961 962 962, r49 -> p2 | J JMP_IMM 
745: 957 958 959 963, r44 -> p13 [p5] | CALL SAVE_PC 
746: 960 962 963 964, r4 -> p4, r4 -> p52 [p4] | CALL SUB_IMM 
747: 961 963 964 965, r44 -> p13, r4 -> p52 | CALL STORE 
748: 962 964 965 966 | CALL JMP_IMM 
749: 963 965 966 967, r14 -> p56, r4 -> p52 | PUSH STORE 
750: 964 966 967 968, r4 -> p52, r4 -> p51 [p52] | PUSH SUB_IMM 
751: 965 967 968 969, r3 -> p1, r4 -> p51 | PUSH STORE 
752: 966 968 969 970, r4 -> p51, r4 -> p54 [p51] | PUSH SUB_IMM 
753: 967 969 970 971, r7 -> p58, r0 -> p6 [p61] | MOVSX SEXT_DWORD_TO_QWORD 
754: 968 970 971 972, r0 -> p6, r0 -> p6, r1 -> p15 [p12] | LEA LEA 
755: 969 971 972 973, r44 -> p55 [p13] | MOVSX SAVE_PC 
756: 970 972 976 976, r44 -> p55, r44 -> p57 [p55] | MOVSX LOAD 
757: 971 976 977 977, r44 -> p57, r2 -> p63 [p0] | MOVSX SEXT_DWORD_TO_QWORD 
758: 972 973 974 978, r0 -> p6, r6 -> p60 [p14] | MOV ADD 
759: 973 977 978 979, r6 -> p60, r2 -> p63, r6 -> p8 [p60], r49 -> p62 [p2] | SUB SUB 
760: 976 978 979 980, r6 -> p8, r6 -> p53 [p8] | MOVSX SEXT_DWORD_TO_QWORD 
761: 977 979 980 981, r1 -> p15, r2 -> p63, r1 -> p3 [p15], r49 -> p5 [p62] | SUB SUB 
762: 978 980 981 982, r1 -> p3, r1 -> p4 [p3] | MOVSX SEXT_DWORD_TO_QWORD 
763: 979 981 982 983, r1 -> p4, r1 -> p52 [p4] | LEA LEA 
764: 980 982 986 986, r2 -> p63, r7 -> p51 [p58] | MOV LOAD 
765: 981 983 984 987, r0 -> p6, r8 -> p61 [p50] | LEA LEA 
766: 982 984 985 988, r9 -> p12 [p9] | XOR ADD 
767: 983 985 986 989, r44 -> p13 [p57] | MOV SAVE_PC 
768: 986 987 991 991, r44 -> p13, r10 -> p55 [p10] | MOV LOAD 
769: 987 988 989 992, r44 -> p0 [p13] | MOV SAVE_PC 
770: 988 989 993 993, r44 -> p0, r11 -> p14 [p11] | MOV LOAD 
771: 989 990 991 994, r44 -> p60 [p0] | MOV SAVE_PC 
772: 991 992 996 996, r44 -> p60, r3 -> p2 [p1] | MOV LOAD 
773: 992 993 994 997 | JMP JMP_IMM 
774: 993 994 998 998, r9 -> p12, r8 -> p61, r14 -> p8 [p56] | MOV LOAD 
775: 994 998 999 999, r14 -> p8, r44 -> p15 [p60], r49 -> p62 [p5] | CMP SUB_IMM 
776: 996 999 1000 1000, r49 -> p62 | J JMP_IMM 
777: 997 1000 1001 1001, r3 -> p2, r44 -> p3 [p15], r49 -> p4 [p62] | TEST AND_IMM 
778: 998 1001 1002 1002, r49 -> p4 | J JMP_IMM 
779: 999 1002 1003 1003, r0 -> p6, r6 -> p53, r0 -> p58 [p6], r49 -> p50 [p4] | ADD ADD 
780: 1000 1003 1004 1004, r6 -> p53, r9 -> p12, r14 -> p9 [p8] | LEA LEA 
781: 1001 1004 1008 1008, r9 -> p12, r1 -> p52, r45 -> p57 [p59] | CMP LOAD 
782: 1002 1008 1009 1009, r45 -> p57, r44 -> p10 [p3], r49 -> p13 [p50] | CMP SUB 
783: 1003 1009 1010 1010, r49 -> p13 | J JMP_IMM 
784: 1004 1005 1006 1011, r14 -> p9, r9 -> p11 [p12] | MOV ADD 
785: 1008 1010 1014 1014, r9 -> p11, r8 -> p61, r14 -> p0 [p9] | MOV LOAD 
786: 1009 1014 1015 1015, r14 -> p0, r44 -> p1 [p10], r49 -> p56 [p13] | CMP SUB_IMM 
787: 1010 1015 1016 1016, r49 -> p56 | J JMP_IMM 
788: 1011 1012 1013 1017, r3 -> p2, r44 -> p60 [p1], r49 -> p5 [p56] | TEST AND_IMM 
789: 1014 1016 1017 1018, r49 -> p5 | J JMP_IMM 
790: 1015 1017 1018 1019, r0 -> p58, r6 -> p53, r0 -> p15 [p58], r49 -> p62 [p5] | ADD ADD 
791: 1016 1018 1019 1020, r6 -> p53, r9 -> p11, r14 -> p6 [p0] | LEA LEA 
792: 1017 1019 1023 1023, r9 -> p11, r1 -> p52, r45 -> p4 [p57] | CMP LOAD 
793: 1018 1023 1024 1024, r45 -> p4, r44 -> p8 [p60], r49 -> p59 [p62] | CMP SUB 
794: 1019 1024 1025 1025, r49 -> p59 | J JMP_IMM 
795: 1020 1021 1022 1026, r44 -> p3 [p8] | MOV SAVE_PC 
796: 1023 1025 1026 1027, r10 -> p55, r44 -> p3 | MOV STORE 
797: 1024 1026 1027 1028 | JMP JMP_IMM 
798: 1025 1027 1031 1031, r4 -> p54, r3 -> p50 [p2] | POP LOAD 
799: 1026 1028 1029 1032, r4 -> p54, r4 -> p12 [p54] | POP ADD_IMM 
800: 1027 1029 1033 1033, r4 -> p12, r14 -> p9 [p6] | POP LOAD 
801: 1028 1030 1031 1034, r4 -> p12, r4 -> p10 [p12] | POP ADD_IMM 
802: 1031 1032 1036 1036, r4 -> p10, r44 -> p13 [p3] | RET LOAD 
803: 1032 1033 1034 1037, r4 -> p10, r4 -> p1 [p10] | RET ADD_IMM 
804: 1033 1036 1037 1038, r44 -> p13 | RET JMP_REG 
805: 1034 1035 1036 1039, r5 -> p49, r7 -> p56 [p51] | LEA LEA 
806: 1036 1037 1038 1040, r7 -> p56, r0 -> p58 [p15] | MOVSX SEXT_DWORD_TO_QWORD 
807: 1037 1038 1042 1042, r0 -> p58, r45 -> p5 [p4] | CMP LOAD 
808: 1038 1042 1043 1043, r45 -> p5, r44 -> p0 [p13], r49 -> p57 [p59] | CMP SUB 
809: 1039 1043 1044 1044, r49 -> p57 | J JMP_IMM 
810: 1040 1041 1042 1045, r44 -> p60 [p0] | CALL SAVE_PC 
811: 1042 1044 1045 1046, r4 -> p1, r4 -> p62 [p1] | CALL SUB_IMM 
812: 1043 1045 1046 1047, r44 -> p60, r4 -> p62 | CALL STORE 
813: 1044 1046 1047 1048 | CALL JMP_IMM 
814: 1045 1047 1048 1049, r14 -> p9, r4 -> p62 | PUSH STORE 
815: 1046 1048 1049 1050, r4 -> p62, r4 -> p8 [p62] | PUSH SUB_IMM 
816: 1047 1049 1050 1051, r3 -> p50, r4 -> p8 | PUSH STORE 
817: 1048 1050 1051 1052, r4 -> p8, r4 -> p2 [p8] | PUSH SUB_IMM 
818: 1049 1051 1052 1053, r7 -> p56, r0 -> p54 [p58] | MOVSX SEXT_DWORD_TO_QWORD 
819: 1050 1052 1053 1054, r0 -> p54, r0 -> p54, r1 -> p6 [p52] | LEA LEA 
820: 1051 1053 1054 1055, r44 -> p12 [p60] | MOVSX SAVE_PC 
821: 1052 1054 1058 1058, r44 -> p12, r44 -> p3 [p12] | MOVSX LOAD 
822: 1053 1058 1059 1059, r44 -> p3, r2 -> p10 [p63] | MOVSX SEXT_DWORD_TO_QWORD 
823: 1054 1055 1056 1060, r0 -> p54, r6 -> p51 [p53] | MOV ADD 
824: 1055 1059 1060 1061, r6 -> p51, r2 -> p10, r6 -> p15 [p51], r49 -> p4 [p57] | SUB SUB 
825: 1058 1060 1061 1062, r6 -> p15, r6 -> p13 [p15] | MOVSX SEXT_DWORD_TO_QWORD 
826: 1059 1061 1062 1063, r1 -> p6, r2 -> p10, r1 -> p59 [p6], r49 -> p0 [p4] | SUB SUB 
827: 1060 1062 1063 1064, r1 -> p59, r1 -> p1 [p59] | MOVSX SEXT_DWORD_TO_QWORD 
828: 1061 1063 1064 1065, r1 -> p1, r1 -> p62 [p1] | LEA LEA 
829: 1062 1064 1068 1068, r2 -> p10, r7 -> p8 [p56] | MOV LOAD 
830: 1063 1065 1066 1069, r0 -> p54, r8 -> p58 [p61] | LEA LEA 
831: 1064 1066 1067 1070, r9 -> p52 [p11] | XOR ADD 
832: 1065 1067 1068 1071, r44 -> p60 [p3] | MOV SAVE_PC 
833: 1068 1069 1073 1073, r44 -> p60, r10 -> p12 [p55] | MOV LOAD 
834: 1069 1070 1071 1074, r44 -> p63 [p60] | MOV SAVE_PC 
835: 1070 1071 1075 1075, r44 -> p63, r11 -> p53 [p14] | MOV LOAD 
836: 1071 1072 1073 1076, r44 -> p51 [p63] | MOV SAVE_PC 
837: 1073 1074 1078 1078, r44 -> p51, r3 -> p57 [p50] | MOV LOAD 
838: 1074 1075 1076 1079 | JMP JMP_IMM 
839: 1075 1076 1080 1080, r9 -> p52, r8 -> p58, r14 -> p15 [p9] | MOV LOAD 
840: 1076 1080 1081 1081, r14 -> p15, r44 -> p6 [p51], r49 -> p4 [p0] | CMP SUB_IMM 
841: 1078 1081 1082 1082, r49 -> p4 | J JMP_IMM 
842: 1079 1082 1083 1083, r3 -> p57, r44 -> p59 [p6], r49 -> p1 [p4] | TEST AND_IMM 
843: 1080 1083 1084 1084, r49 -> p1 | J JMP_IMM 
844: 1081 1084 1085 1085, r0 -> p54, r6 -> p13, r0 -> p56 [p54], r49 -> p61 [p1] | ADD ADD 
845: 1082 1085 1086 1086, r6 -> p13, r9 -> p52, r14 -> p11 [p15] | LEA LEA 
846: 1083 1086 1090 1090, r9 -> p52, r1 -> p62, r45 -> p3 [p5] | CMP LOAD 
847: 1084 1090 1091 1091, r45 -> p3, r44 -> p55 [p59], r49 -> p60 [p61] | CMP SUB 
848: 1085 1091 1092 1092, r49 -> p60 | J JMP_IMM 
849: 1086 1087 1088 1093, r14 -> p11, r9 -> p14 [p52] | MOV ADD 
850: 1090 1092 1096 1096, r9 -> p14, r8 -> p58, r14 -> p63 [p11] | MOV LOAD 
851: 1091 1096 1097 1097, r14 -> p63, r44 -> p50 [p55], r49 -> p9 [p60] | CMP SUB_IMM 
852: 1092 1097 1098 1098, r49 -> p9 | J JMP_IMM 
853: 1093 1094 1095 1099, r44 -> p51 [p50] | MOV SAVE_PC 
854: 1096 1098 1099 1100, r10 -> p12, r44 -> p51 | MOV STORE 
855: 1097 1099 1100 1101, r7 -> p8, r14 -> p63, r7 -> p0 [p8], r49 -> p6 [p9] | XOR XOR 
856: 1098 1100 1101 1102, r7 -> p0, r44 -> p4 [p51], r49 -> p54 [p6] | TEST AND_IMM 
857: 1099 1101 1102 1103, r49 -> p54 | J JMP_IMM 
858: 1100 1102 1106 1106, r4 -> p2, r3 -> p1 [p57] | POP LOAD 
859: 1101 1103 1104 1107, r4 -> p2, r4 -> p15 [p2] | POP ADD_IMM 
860: 1102 1104 1108 1108, r4 -> p15, r14 -> p5 [p63] | POP LOAD 
861: 1103 1105 1106 1109, r4 -> p15, r4 -> p59 [p15] | POP ADD_IMM 
862: 1106 1107 1111 1111, r4 -> p59, r44 -> p61 [p4] | RET LOAD 
863: 1107 1108 1109 1112, r4 -> p59, r4 -> p52 [p59] | RET ADD_IMM 
864: 1108 1111 1112 1113, r44 -> p61 | RET JMP_REG 
865: 1109 1110 1111 1114, r5 -> p49, r7 -> p11 [p0] | LEA LEA 
866: 1111 1112 1113 1115, r7 -> p11, r0 -> p55 [p56] | MOVSX SEXT_DWORD_TO_QWORD 
867: 1112 1113 1117 1117, r0 -> p55, r45 -> p60 [p3] | CMP LOAD 
868: 1113 1117 1118 1118, r45 -> p60, r44 -> p50 [p61], r49 -> p8 [p54] | CMP SUB 
869: 1114 1118 1119 1119, r49 -> p8 | J JMP_IMM 
870: 1115 1116 1117 1120, r44 -> p9 [p50] | CALL SAVE_PC 
871: 1117 1119 1120 1121, r4 -> p52, r4 -> p51 [p52] | CALL SUB_IMM 
872: 1118 1120 1121 1122, r44 -> p9, r4 -> p51 | CALL STORE 
873: 1119 1121 1122 1123 | CALL JMP_IMM 
874: 1120 1122 1123 1124, r14 -> p5, r4 -> p51 | PUSH STORE 
875: 1121 1123 1124 1125, r4 -> p51, r4 -> p6 [p51] | PUSH SUB_IMM 
876: 1122 1124 1125 1126, r3 -> p1, r4 -> p6 | PUSH STORE 
877: 1123 1125 1126 1127, r4 -> p6, r4 -> p57 [p6] | PUSH SUB_IMM 
878: 1124 1126 1127 1128, r7 -> p11, r0 -> p2 [p55] | MOVSX SEXT_DWORD_TO_QWORD 
879: 1125 1127 1128 1129, r0 -> p2, r0 -> p2, r1 -> p63 [p62] | LEA LEA 
880: 1126 1128 1129 1130, r44 -> p15 [p9] | MOVSX SAVE_PC 
881: 1127 1129 1133 1133, r44 -> p15, r44 -> p4 [p15] | MOVSX LOAD 
882: 1128 1133 1134 1134, r44 -> p4, r2 -> p59 [p10] | MOVSX SEXT_DWORD_TO_QWORD 
883: 1129 1130 1131 1135, r0 -> p2, r6 -> p0 [p13] | MOV ADD 
884: 1130 1134 1135 1136, r6 -> p0, r2 -> p59, r6 -> p56 [p0], r49 -> p3 [p8] | SUB SUB 
885: 1133 1135 1136 1137, r6 -> p56, r6 -> p61 [p56] | MOVSX SEXT_DWORD_TO_QWORD 
886: 1134 1136 1137 1138, r1 -> p63, r2 -> p59, r1 -> p54 [p63], r49 -> p50 [p3] | SUB SUB 
887: 1135 1137 1138 1139, r1 -> p54, r1 -> p52 [p54] | MOVSX SEXT_DWORD_TO_QWORD 
888: 1136 1138 1139 1140, r1 -> p52, r1 -> p51 [p52] | LEA LEA 
889: 1137 1139 1143 1143, r2 -> p59, r7 -> p6 [p11] | MOV LOAD 
890: 1138 1140 1141 1144, r0 -> p2, r8 -> p55 [p58] | LEA LEA 
891: 1139 1141 1142 1145, r9 -> p62 [p14] | XOR ADD 
892: 1140 1142 1143 1146, r44 -> p9 [p4] | MOV SAVE_PC 
893: 1143 1144 1148 1148, r44 -> p9, r10 -> p15 [p12] | MOV LOAD 
894: 1144 1145 1146 1149, r44 -> p10 [p9] | MOV SAVE_PC 
895: 1145 1146 1150 1150, r44 -> p10, r11 -> p13 [p53] | MOV LOAD 
896: 1146 1147 1148 1151, r44 -> p0 [p10] | MOV SAVE_PC 
897: 1148 1149 1153 1153, r44 -> p0, r3 -> p8 [p1] | MOV LOAD 
898: 1149 1150 1151 1154 | JMP JMP_IMM 
899: 1150 1151 1155 1155, r9 -> p62, r8 -> p55, r14 -> p56 [p5] | MOV LOAD 
900: 1151 1155 1156 1156, r14 -> p56, r44 -> p63 [p0], r49 -> p3 [p50] | CMP SUB_IMM 
901: 1153 1156 1157 1157, r49 -> p3 | J JMP_IMM 
902: 1154 1157 1158 1158, r44 -> p54 [p63] | MOV SAVE_PC 
903: 1155 1158 1159 1159, r10 -> p15, r44 -> p54 | MOV STORE 
904: 1156 1159 1160 1160, r7 -> p6, r14 -> p56, r7 -> p52 [p6], r49 -> p11 [p3] | XOR XOR 
905: 1157 1160 1161 1161, r7 -> p52, r44 -> p58 [p54], r49 -> p14 [p11] | TEST AND_IMM 
906: 1158 1161 1162 1162, r49 -> p14 | J JMP_IMM 
907: 1159 1162 1163 1163, r45 -> p4 [p60] | CMP SAVE_PC 
908: 1160 1163 1167 1167, r45 -> p4, r45 -> p12 [p4] | CMP LOAD 
909: 1161 1167 1168 1168, r45 -> p12, r44 -> p9 [p58], r49 -> p53 [p14] | CMP SUB_IMM 
910: 1162 1168 1169 1169, r49 -> p53 | J JMP_IMM 
911: 1163 1164 1165 1170, r14 -> p56, r44 -> p10 [p9], r49 -> p1 [p53] | CMP SUB_IMM 
912: 1167 1169 1170 1171, r49 -> p1 | J JMP_IMM 
913: 1168 1170 1171 1172, r14 -> p56, r1 -> p5 [p51] | LEA LEA 
914: 1169 1171 1172 1173, r1 -> p5, r44 -> p0 [p10], r49 -> p50 [p1] | CMP SUB_IMM 
915: 1170 1172 1173 1174, r49 -> p50 | J JMP_IMM 
916: 1171 1173 1174 1175, r44 -> p63 [p0] | MOV ADD_IMM 
917: 1172 1174 1175 1176, r45 -> p6 [p12] | MOV SAVE_PC 
918: 1173 1175 1176 1177, r44 -> p63, r45 -> p6 | MOV STORE 
919: 1174 1176 1177 1178, r10 -> p15, r1 -> p3 [p5] | MOVSX SEXT_DWORD_TO_QWORD 
920: 1175 1177 1178 1179, r1 -> p3, r1 -> p3, r1 -> p54 [p3] | LEA LEA 
921: 1176 1178 1179 1180, r44 -> p11 [p63] | MOV SAVE_PC 
922: 1177 1179 1183 1183, r44 -> p11, r10 -> p60 [p15] | MOV LOAD 
923: 1178 1180 1181 1184, r44 -> p4 [p11] | MOV SAVE_PC 
924: 1179 1181 1185 1185, r44 -> p4, r2 -> p58 [p59] | MOV LOAD 
925: 1180 1185 1186 1186, r1 -> p54, r2 -> p58, r44 -> p14 [p4] | MOV LEA 
926: 1183 1186 1187 1187, r10 -> p60, r44 -> p14 | MOV STORE 
927: 1184 1187 1188 1188, r44 -> p9 [p14] | MOVSX SAVE_PC 
928: 1185 1188 1192 1192, r44 -> p9, r44 -> p53 [p9] | MOVSX LOAD 
929: 1186 1192 1193 1193, r44 -> p53, r1 -> p51 [p54] | MOVSX SEXT_DWORD_TO_QWORD 
930: 1187 1193 1194 1194, r1 -> p51, r1 -> p51, r1 -> p10 [p51] | LEA LEA 
931: 1188 1189 1190 1195, r44 -> p1 [p53] | MOV SAVE_PC 
932: 1192 1194 1198 1198, r44 -> p1, r2 -> p0 [p58] | MOV LOAD 
933: 1193 1198 1199 1199, r1 -> p10, r2 -> p0, r44 -> p12 [p1] | MOV LEA 
934: 1194 1199 1200 1200, r0 -> p2, r44 -> p12 | MOV STORE 
935: 1195 1196 1197 1201, r44 -> p5 [p12] | MOVSX SAVE_PC 
936: 1198 1200 1204 1204, r44 -> p5, r44 -> p3 [p5] | MOVSX LOAD 
937: 1199 1204 1205 1205, r44 -> p3, r0 -> p63 [p2] | MOVSX SEXT_DWORD_TO_QWORD 
938: 1200 1205 1206 1206, r0 -> p63, r0 -> p63, r0 -> p15 [p63] | LEA LEA 
939: 1201 1202 1203 1207, r44 -> p11 [p3] | MOV SAVE_PC 
940: 1204 1206 1210 1210, r44 -> p11, r1 -> p59 [p10] | MOV LOAD 
941: 1205 1210 1211 1211, r0 -> p15, r1 -> p59, r44 -> p4 [p11] | MOV LEA 
942: 1206 1211 1212 1212, r14 -> p56, r44 -> p4 | MOV STORE 
943: 1207 1208 1209 1213, r44 -> p14 [p4] | MOVSX SAVE_PC 
944: 1210 1212 1216 1216, r44 -> p14, r44 -> p9 [p14] | MOVSX LOAD 
945: 1211 1216 1217 1217, r44 -> p9, r0 -> p54 [p15] | MOVSX SEXT_DWORD_TO_QWORD 
946: 1212 1217 1218 1218, r0 -> p54, r0 -> p54, r0 -> p51 [p54] | LEA LEA 
947: 1213 1214 1215 1219, r44 -> p53 [p9] | MOV SAVE_PC 
948: 1216 1218 1222 1222, r44 -> p53, r1 -> p58 [p59] | MOV LOAD 
949: 1217 1222 1223 1223, r0 -> p51, r1 -> p58, r44 -> p1 [p53] | MOV LEA 
950: 1218 1223 1224 1224, r44 -> p1 | MOV STORE 
951: 1219 1220 1221 1225, r44 -> p12 [p1] | MOVSX SAVE_PC 
952: 1222 1224 1228 1228, r44 -> p12, r44 -> p5 [p12] | MOVSX LOAD 
953: 1223 1228 1229 1229, r44 -> p5, r0 -> p2 [p51] | MOVSX SEXT_DWORD_TO_QWORD 
954: 1224 1229 1230 1230, r0 -> p2, r0 -> p2, r0 -> p63 [p2] | LEA LEA 
955: 1225 1226 1227 1231, r44 -> p3 [p5] | MOV SAVE_PC 
956: 1228 1230 1234 1234, r44 -> p3, r1 -> p10 [p58] | MOV LOAD 
957: 1229 1234 1235 1235, r0 -> p63, r1 -> p10, r44 -> p11 [p3] | MOV LEA 
958: 1230 1235 1236 1236, r44 -> p11 | MOV STORE 
959: 1231 1232 1233 1237, r44 -> p4 [p11] | MOVSX SAVE_PC 
960: 1234 1236 1240 1240, r44 -> p4, r44 -> p14 [p4] | MOVSX LOAD 
961: 1235 1240 1241 1241, r44 -> p14, r0 -> p15 [p63] | MOVSX SEXT_DWORD_TO_QWORD 
962: 1236 1241 1242 1242, r0 -> p15, r0 -> p15, r0 -> p54 [p15] | LEA LEA 
963: 1237 1238 1239 1243, r44 -> p9 [p14] | MOV SAVE_PC 
964: 1240 1242 1246 1246, r44 -> p9, r1 -> p59 [p10] | MOV LOAD 
965: 1241 1246 1247 1247, r0 -> p54, r1 -> p59, r44 -> p53 [p9] | MOV LEA 
966: 1242 1247 1248 1248, r44 -> p53 | MOV STORE 
967: 1243 1244 1245 1249, r44 -> p1 [p53] | INC SAVE_PC 
968: 1246 1248 1252 1252, r44 -> p1, r44 -> p12 [p1] | INC LOAD 
969: 1247 1252 1253 1253, r44 -> p12, r44 -> p51 [p12] | INC ADD_IMM 
970: 1248 1249 1250 1254, r45 -> p2 [p6] | INC SAVE_PC 
971: 1249 1253 1254 1255, r44 -> p51, r45 -> p2 | INC STORE 
972: 1252 1254 1258 1258, r4 -> p57, r3 -> p5 [p8] | POP LOAD 
973: 1253 1255 1256 1259, r4 -> p57, r4 -> p58 [p57] | POP ADD_IMM 
974: 1254 1256 1260 1260, r4 -> p58, r14 -> p3 [p56] | POP LOAD 
975: 1255 1257 1258 1261, r4 -> p58, r4 -> p11 [p58] | POP ADD_IMM 
976: 1258 1259 1263 1263, r4 -> p11, r44 -> p4 [p51] | RET LOAD 
977: 1259 1260 1261 1264, r4 -> p11, r4 -> p63 [p11] | RET ADD_IMM 
978: 1260 1263 1264 1265, r44 -> p4 | RET JMP_REG 
979: 1261 1262 1263 1266 | JMP JMP_IMM 
980: 1263 1264 1265 1267, r12 -> p45, r12 -> p15 [p45], r49 -> p14 [p50] | ADD ADD_IMM 
981: 1264 1265 1269 1269, r4 -> p63, r45 -> p10 [p2] | CMP LOAD 
982: 1265 1269 1270 1270, r15 -> p7, r45 -> p10, r44 -> p9 [p4], r49 -> p53 [p14] | CMP SUB 
983: 1266 1270 1271 1271, r49 -> p53 | J JMP_IMM 
984: 1267 1268 1269 1272, r44 -> p1 [p9] | MOV SAVE_PC 
985: 1269 1271 1275 1275, r44 -> p1, r0 -> p12 [p54] | MOV LOAD 
986: 1270 1275 1276 1276, r0 -> p12, r44 -> p6 [p1], r49 -> p8 [p53] | CMP SUB_IMM 
987: 1271 1276 1277 1277, r49 -> p8 | J JMP_IMM 
988: 1272 1273 1274 1278, r44 -> p57 [p6] | MOV SAVE_PC 
989: 1275 1277 1281 1281, r44 -> p57, r1 -> p56 [p59] | MOV LOAD 
990: 1276 1281 1282 1282, r1 -> p56, r44 -> p58 [p57], r49 -> p51 [p8] | CMP SUB_IMM 
991: 1277 1282 1283 1283, r49 -> p51 | J JMP_IMM 
992: 1278 1279 1283 1284, r12 -> p15, r44 -> p11 [p58] | MOVSX LOAD 
993: 1281 1283 1284 1285, r44 -> p11, r13 -> p45 [p44] | MOVSX SEXT_DWORD_TO_QWORD 
994: 1282 1284 1285 1286, r13 -> p45, r13 -> p45, r44 -> p50 [p11], r49 -> p2 [p51] | TEST AND 
995: 1283 1285 1286 1287, r49 -> p2 | J JMP_IMM 
996: 1284 1286 1287 1288, r13 -> p45, r5 -> p4 [p49] | MOV ADD 
997: 1285 1287 1288 1289, r44 -> p14 [p50] | MOV SAVE_PC 
998: 1286 1288 1289 1290, r5 -> p4, r44 -> p14 | MOV STORE 
999: 1287 1289 1290 1291, r15 -> p7, r15 -> p9 [p7] | INC ADD_IMM 
1000: 1288 1290 1294 1294, r13 -> p45, r1 -> p54 [p56] | MOV LOAD 
Completed Trace @ cycle 1295. Ending Simulation...
Processed 1000 trace lines.
Instructions:
  N Fetched =    		1000
  N Committed =  		1000
Stalls:
  Fetch stalled (ROB full) =    289
IPC: 				0.772
