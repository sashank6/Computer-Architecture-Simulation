debug mode on
PART 1: Rename Only
Trace name  				sjeng-1K
Instruction Limit			none
Processor Configuration:
  Machine Width 			1
  Number of Logical Registers 		50
  Number of Physical Registers 		256
  ROB Size 				64
uop# 	 Reg Mappings [freeMe] | Mop Uop
1, r49 -> p49 | J JMP_IMM 
2, r1 -> p1, r44 -> p50 [p44] | MOVSX LOAD 
3, r44 -> p50, r2 -> p51 [p2] | MOVSX SEXT_DWORD_TO_QWORD 
4, r7 -> p7, r2 -> p51, r6 -> p52 [p6] | LEA LEA 
5, r6 -> p52, r6 -> p53 [p52] | MOVSX SEXT_DWORD_TO_QWORD 
6, r6 -> p53, r6 -> p54 [p53] | MOV LOAD 
7, r6 -> p54, r44 -> p55 [p50], r49 -> p56 [p49] | CMP SUB_IMM 
8, r49 -> p56 | J JMP_IMM 
9, r6 -> p54, r44 -> p57 [p55], r49 -> p58 [p56] | CMP SUB_IMM 
10, r49 -> p58 | J JMP_IMM 
11, r2 -> p51, r8 -> p59 [p8] | MOV ADD 
12, r8 -> p59, r7 -> p7, r8 -> p60 [p59] | LEA LEA 
13, r8 -> p60, r8 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD 
14, r8 -> p61, r8 -> p62 [p61] | LEA LEA 
15, r2 -> p51, r2 -> p63 [p51], r49 -> p64 [p58] | SHL SHL_IMM 
16 | JMP JMP_IMM 
17, r6 -> p54, r44 -> p65 [p57], r49 -> p66 [p64] | CMP SUB_IMM 
18, r49 -> p66 | J JMP_IMM 
19, r6 -> p54, r44 -> p67 [p65], r49 -> p68 [p66] | CMP SUB_IMM 
20, r49 -> p68 | J JMP_IMM 
21, r6 -> p54, r44 -> p69 [p67], r49 -> p70 [p68] | CMP SUB_IMM 
22, r49 -> p70 | J JMP_IMM 
23, r1 -> p1, r1 -> p71 [p1], r49 -> p72 [p70] | ADD ADD_IMM 
24, r0 -> p0, r0 -> p73 [p0] | INC ADD_IMM 
25, r0 -> p73, r44 -> p74 [p69], r49 -> p75 [p72] | CMP SUB_IMM 
26, r49 -> p75 | J JMP_IMM 
27, r1 -> p71, r44 -> p76 [p74] | MOVSX LOAD 
28, r44 -> p76, r2 -> p77 [p63] | MOVSX SEXT_DWORD_TO_QWORD 
29, r7 -> p7, r2 -> p77, r6 -> p78 [p54] | LEA LEA 
30, r6 -> p78, r6 -> p79 [p78] | MOVSX SEXT_DWORD_TO_QWORD 
31, r6 -> p79, r6 -> p80 [p79] | MOV LOAD 
32, r6 -> p80, r44 -> p81 [p76], r49 -> p82 [p75] | CMP SUB_IMM 
33, r49 -> p82 | J JMP_IMM 
34, r6 -> p80, r44 -> p83 [p81], r49 -> p84 [p82] | CMP SUB_IMM 
35, r49 -> p84 | J JMP_IMM 
36, r2 -> p77, r8 -> p85 [p62] | MOV ADD 
37, r8 -> p85, r7 -> p7, r8 -> p86 [p85] | LEA LEA 
38, r8 -> p86, r8 -> p87 [p86] | MOVSX SEXT_DWORD_TO_QWORD 
39, r8 -> p87, r8 -> p88 [p87] | LEA LEA 
40, r2 -> p77, r2 -> p89 [p77], r49 -> p90 [p84] | SHL SHL_IMM 
41 | JMP JMP_IMM 
42, r6 -> p80, r44 -> p91 [p83], r49 -> p92 [p90] | CMP SUB_IMM 
43, r49 -> p92 | J JMP_IMM 
44, r6 -> p80, r44 -> p93 [p91], r49 -> p94 [p92] | CMP SUB_IMM 
45, r49 -> p94 | J JMP_IMM 
46, r6 -> p80, r44 -> p95 [p93], r49 -> p96 [p94] | CMP SUB_IMM 
47, r49 -> p96 | J JMP_IMM 
48, r1 -> p71, r1 -> p97 [p71], r49 -> p98 [p96] | ADD ADD_IMM 
49, r0 -> p73, r0 -> p99 [p73] | INC ADD_IMM 
50, r0 -> p99, r44 -> p100 [p95], r49 -> p101 [p98] | CMP SUB_IMM 
51, r49 -> p101 | J JMP_IMM 
52, r1 -> p97, r44 -> p102 [p100] | MOVSX LOAD 
53, r44 -> p102, r2 -> p103 [p89] | MOVSX SEXT_DWORD_TO_QWORD 
54, r7 -> p7, r2 -> p103, r6 -> p104 [p80] | LEA LEA 
55, r6 -> p104, r6 -> p105 [p104] | MOVSX SEXT_DWORD_TO_QWORD 
56, r6 -> p105, r6 -> p106 [p105] | MOV LOAD 
57, r6 -> p106, r44 -> p107 [p102], r49 -> p108 [p101] | CMP SUB_IMM 
58, r49 -> p108 | J JMP_IMM 
59, r6 -> p106, r44 -> p109 [p107], r49 -> p110 [p108] | CMP SUB_IMM 
60, r49 -> p110 | J JMP_IMM 
61, r2 -> p103, r8 -> p111 [p88] | MOV ADD 
62, r8 -> p111, r7 -> p7, r8 -> p112 [p111] | LEA LEA 
63, r8 -> p112, r8 -> p113 [p112] | MOVSX SEXT_DWORD_TO_QWORD 
64, r8 -> p113, r8 -> p114 [p113] | LEA LEA 
65, r2 -> p103, r2 -> p115 [p103], r49 -> p116 [p110] | SHL SHL_IMM 
66 | JMP JMP_IMM 
67, r6 -> p106, r44 -> p117 [p109], r49 -> p118 [p116] | CMP SUB_IMM 
68, r49 -> p118 | J JMP_IMM 
69, r6 -> p106, r44 -> p119 [p117], r49 -> p120 [p118] | CMP SUB_IMM 
70, r49 -> p120 | J JMP_IMM 
71, r6 -> p106, r44 -> p121 [p119], r49 -> p122 [p120] | CMP SUB_IMM 
72, r49 -> p122 | J JMP_IMM 
73, r1 -> p97, r1 -> p123 [p97], r49 -> p124 [p122] | ADD ADD_IMM 
74, r0 -> p99, r0 -> p125 [p99] | INC ADD_IMM 
75, r0 -> p125, r44 -> p126 [p121], r49 -> p127 [p124] | CMP SUB_IMM 
76, r49 -> p127 | J JMP_IMM 
77, r0 -> p128 [p125] | XOR ADD 
78, r1 -> p129 [p123] | MOV ADD_IMM 
79 | JMP JMP_IMM 
80, r0 -> p128, r44 -> p130 [p126], r49 -> p131 [p127] | CMP SUB_IMM 
81, r49 -> p131 | J JMP_IMM 
82, r7 -> p7, r2 -> p132 [p115] | MOV ADD 
83, r1 -> p129, r44 -> p133 [p130] | ADD LOAD 
84, r2 -> p132, r44 -> p133, r2 -> p134 [p132], r49 -> p135 [p131] | ADD ADD 
85, r2 -> p134, r2 -> p136 [p134] | MOVSX SEXT_DWORD_TO_QWORD 
86, r2 -> p136, r45 -> p137 [p45] | CMP LOAD 
87, r45 -> p137, r44 -> p138 [p133], r49 -> p139 [p135] | CMP SUB_IMM 
88, r49 -> p139 | J JMP_IMM 
89, r1 -> p129, r1 -> p140 [p129], r49 -> p141 [p139] | ADD ADD_IMM 
90, r0 -> p128, r0 -> p142 [p128] | INC ADD_IMM 
91, r0 -> p142, r44 -> p143 [p138], r49 -> p144 [p141] | CMP SUB_IMM 
92, r49 -> p144 | J JMP_IMM 
93, r7 -> p7, r2 -> p145 [p136] | MOV ADD 
94, r1 -> p140, r44 -> p146 [p143] | ADD LOAD 
95, r2 -> p145, r44 -> p146, r2 -> p147 [p145], r49 -> p148 [p144] | ADD ADD 
96, r2 -> p147, r2 -> p149 [p147] | MOVSX SEXT_DWORD_TO_QWORD 
97, r2 -> p149, r45 -> p150 [p137] | CMP LOAD 
98, r45 -> p150, r44 -> p151 [p146], r49 -> p152 [p148] | CMP SUB_IMM 
99, r49 -> p152 | J JMP_IMM 
100, r1 -> p140, r1 -> p153 [p140], r49 -> p154 [p152] | ADD ADD_IMM 
101, r0 -> p142, r0 -> p155 [p142] | INC ADD_IMM 
102, r0 -> p155, r44 -> p156 [p151], r49 -> p157 [p154] | CMP SUB_IMM 
103, r49 -> p157 | J JMP_IMM 
104, r7 -> p7, r2 -> p158 [p149] | MOV ADD 
105, r1 -> p153, r44 -> p159 [p156] | ADD LOAD 
106, r2 -> p158, r44 -> p159, r2 -> p160 [p158], r49 -> p161 [p157] | ADD ADD 
107, r2 -> p160, r2 -> p162 [p160] | MOVSX SEXT_DWORD_TO_QWORD 
108, r2 -> p162, r45 -> p163 [p150] | CMP LOAD 
109, r45 -> p163, r44 -> p164 [p159], r49 -> p165 [p161] | CMP SUB_IMM 
110, r49 -> p165 | J JMP_IMM 
111, r1 -> p153, r1 -> p166 [p153], r49 -> p167 [p165] | ADD ADD_IMM 
112, r0 -> p155, r0 -> p168 [p155] | INC ADD_IMM 
113, r0 -> p168, r44 -> p169 [p164], r49 -> p170 [p167] | CMP SUB_IMM 
114, r49 -> p170 | J JMP_IMM 
115, r7 -> p7, r2 -> p171 [p162] | MOV ADD 
116, r1 -> p166, r44 -> p172 [p169] | ADD LOAD 
117, r2 -> p171, r44 -> p172, r2 -> p173 [p171], r49 -> p174 [p170] | ADD ADD 
118, r2 -> p173, r2 -> p175 [p173] | MOVSX SEXT_DWORD_TO_QWORD 
119, r2 -> p175, r45 -> p176 [p163] | CMP LOAD 
120, r45 -> p176, r44 -> p177 [p172], r49 -> p178 [p174] | CMP SUB_IMM 
121, r49 -> p178 | J JMP_IMM 
122, r1 -> p166, r1 -> p179 [p166], r49 -> p180 [p178] | ADD ADD_IMM 
123, r0 -> p168, r0 -> p181 [p168] | INC ADD_IMM 
124, r0 -> p181, r44 -> p182 [p177], r49 -> p183 [p180] | CMP SUB_IMM 
125, r49 -> p183 | J JMP_IMM 
126, r7 -> p7, r2 -> p184 [p175] | MOV ADD 
127, r1 -> p179, r44 -> p185 [p182] | ADD LOAD 
128, r2 -> p184, r44 -> p185, r2 -> p186 [p184], r49 -> p187 [p183] | ADD ADD 
129, r2 -> p186, r2 -> p188 [p186] | MOVSX SEXT_DWORD_TO_QWORD 
130, r2 -> p188, r45 -> p189 [p176] | CMP LOAD 
131, r45 -> p189, r44 -> p190 [p185], r49 -> p191 [p187] | CMP SUB_IMM 
132, r49 -> p191 | J JMP_IMM 
133, r1 -> p179, r1 -> p192 [p179], r49 -> p193 [p191] | ADD ADD_IMM 
134, r0 -> p181, r0 -> p194 [p181] | INC ADD_IMM 
135, r0 -> p194, r44 -> p195 [p190], r49 -> p196 [p193] | CMP SUB_IMM 
136, r49 -> p196 | J JMP_IMM 
137, r7 -> p7, r2 -> p197 [p188] | MOV ADD 
138, r1 -> p192, r44 -> p198 [p195] | ADD LOAD 
139, r2 -> p197, r44 -> p198, r2 -> p199 [p197], r49 -> p200 [p196] | ADD ADD 
140, r2 -> p199, r2 -> p201 [p199] | MOVSX SEXT_DWORD_TO_QWORD 
141, r2 -> p201, r45 -> p202 [p189] | CMP LOAD 
142, r45 -> p202, r44 -> p203 [p198], r49 -> p204 [p200] | CMP SUB_IMM 
143, r49 -> p204 | J JMP_IMM 
144, r1 -> p192, r1 -> p205 [p192], r49 -> p206 [p204] | ADD ADD_IMM 
145, r0 -> p194, r0 -> p207 [p194] | INC ADD_IMM 
146, r0 -> p207, r44 -> p208 [p203], r49 -> p209 [p206] | CMP SUB_IMM 
147, r49 -> p209 | J JMP_IMM 
148, r7 -> p7, r2 -> p210 [p201] | MOV ADD 
149, r1 -> p205, r44 -> p211 [p208] | ADD LOAD 
150, r2 -> p210, r44 -> p211, r2 -> p212 [p210], r49 -> p213 [p209] | ADD ADD 
151, r2 -> p212, r2 -> p214 [p212] | MOVSX SEXT_DWORD_TO_QWORD 
152, r2 -> p214, r45 -> p215 [p202] | CMP LOAD 
153, r45 -> p215, r44 -> p216 [p211], r49 -> p217 [p213] | CMP SUB_IMM 
154, r49 -> p217 | J JMP_IMM 
155, r1 -> p205, r1 -> p218 [p205], r49 -> p219 [p217] | ADD ADD_IMM 
156, r0 -> p207, r0 -> p220 [p207] | INC ADD_IMM 
157, r0 -> p220, r44 -> p221 [p216], r49 -> p222 [p219] | CMP SUB_IMM 
158, r49 -> p222 | J JMP_IMM 
159, r7 -> p7, r2 -> p223 [p214] | MOV ADD 
160, r1 -> p218, r44 -> p224 [p221] | ADD LOAD 
161, r2 -> p223, r44 -> p224, r2 -> p225 [p223], r49 -> p226 [p222] | ADD ADD 
162, r2 -> p225, r2 -> p227 [p225] | MOVSX SEXT_DWORD_TO_QWORD 
163, r2 -> p227, r45 -> p228 [p215] | CMP LOAD 
164, r45 -> p228, r44 -> p229 [p224], r49 -> p230 [p226] | CMP SUB_IMM 
165, r49 -> p230 | J JMP_IMM 
166, r1 -> p218, r1 -> p231 [p218], r49 -> p232 [p230] | ADD ADD_IMM 
167, r0 -> p220, r0 -> p233 [p220] | INC ADD_IMM 
168, r0 -> p233, r44 -> p234 [p229], r49 -> p235 [p232] | CMP SUB_IMM 
169, r49 -> p235 | J JMP_IMM 
170, r0 -> p236 [p233] | XOR ADD 
171, r1 -> p237 [p231] | MOV ADD_IMM 
172 | JMP JMP_IMM 
173, r0 -> p236, r44 -> p238 [p234], r49 -> p239 [p235] | CMP SUB_IMM 
174, r49 -> p239 | J JMP_IMM 
175, r1 -> p237, r44 -> p240 [p238] | MOVSX LOAD 
176, r44 -> p240, r2 -> p241 [p227] | MOVSX SEXT_DWORD_TO_QWORD 
177, r7 -> p7, r2 -> p241, r6 -> p242 [p106] | LEA LEA 
178, r6 -> p242, r6 -> p243 [p242] | MOVSX SEXT_DWORD_TO_QWORD 
179, r6 -> p243, r6 -> p244 [p243] | MOV LOAD 
180, r6 -> p244, r44 -> p245 [p240], r49 -> p246 [p239] | CMP SUB_IMM 
181, r49 -> p246 | J JMP_IMM 
182, r2 -> p241, r8 -> p247 [p114] | MOV ADD 
183, r8 -> p247, r7 -> p7, r8 -> p248 [p247] | LEA LEA 
184, r8 -> p248, r8 -> p249 [p248] | MOVSX SEXT_DWORD_TO_QWORD 
185, r8 -> p249, r8 -> p250 [p249] | LEA LEA 
186, r2 -> p241, r2 -> p251 [p241], r49 -> p252 [p246] | SHL SHL_IMM 
187 | JMP JMP_IMM 
188, r6 -> p244, r44 -> p253 [p245], r49 -> p254 [p252] | CMP SUB_IMM 
189, r49 -> p254 | J JMP_IMM 
190, r6 -> p244, r44 -> p255 [p253], r49 -> p44 [p254] | CMP SUB_IMM 
191, r49 -> p44 | J JMP_IMM 
192, r6 -> p244, r44 -> p2 [p255], r49 -> p6 [p44] | CMP SUB_IMM 
193, r49 -> p6 | J JMP_IMM 
194, r1 -> p237, r1 -> p52 [p237], r49 -> p53 [p6] | ADD ADD_IMM 
195, r0 -> p236, r0 -> p50 [p236] | INC ADD_IMM 
196, r0 -> p50, r44 -> p49 [p2], r49 -> p55 [p53] | CMP SUB_IMM 
197, r49 -> p55 | J JMP_IMM 
198, r1 -> p52, r44 -> p56 [p49] | MOVSX LOAD 
199, r44 -> p56, r2 -> p8 [p251] | MOVSX SEXT_DWORD_TO_QWORD 
200, r7 -> p7, r2 -> p8, r6 -> p59 [p244] | LEA LEA 
201, r6 -> p59, r6 -> p60 [p59] | MOVSX SEXT_DWORD_TO_QWORD 
202, r6 -> p60, r6 -> p61 [p60] | MOV LOAD 
203, r6 -> p61, r44 -> p51 [p56], r49 -> p58 [p55] | CMP SUB_IMM 
204, r49 -> p58 | J JMP_IMM 
205, r2 -> p8, r8 -> p57 [p250] | MOV ADD 
206, r8 -> p57, r7 -> p7, r8 -> p64 [p57] | LEA LEA 
207, r8 -> p64, r8 -> p65 [p64] | MOVSX SEXT_DWORD_TO_QWORD 
208, r8 -> p65, r8 -> p66 [p65] | LEA LEA 
209, r2 -> p8, r2 -> p67 [p8], r49 -> p68 [p58] | SHL SHL_IMM 
210 | JMP JMP_IMM 
211, r6 -> p61, r44 -> p1 [p51], r49 -> p70 [p68] | CMP SUB_IMM 
212, r49 -> p70 | J JMP_IMM 
213, r6 -> p61, r44 -> p0 [p1], r49 -> p69 [p70] | CMP SUB_IMM 
214, r49 -> p69 | J JMP_IMM 
215, r6 -> p61, r44 -> p72 [p0], r49 -> p74 [p69] | CMP SUB_IMM 
216, r49 -> p74 | J JMP_IMM 
217, r8 -> p66, r6 -> p63 [p61] | MOV LOAD 
218, r8 -> p66, r2 -> p67, r8 -> p54 [p66], r49 -> p78 [p74] | ADD ADD 
219, r6 -> p63, r44 -> p79 [p72], r49 -> p76 [p78] | CMP SUB_IMM 
220, r49 -> p76 | J JMP_IMM 
221, r6 -> p63, r44 -> p75 [p79], r49 -> p81 [p76] | CMP SUB_IMM 
222, r49 -> p81 | J JMP_IMM 
223, r6 -> p63, r44 -> p82 [p75], r49 -> p62 [p81] | CMP SUB_IMM 
224, r49 -> p62 | J JMP_IMM 
225, r8 -> p54, r6 -> p85 [p63] | MOV LOAD 
226, r8 -> p54, r2 -> p67, r8 -> p86 [p54], r49 -> p87 [p62] | ADD ADD 
227, r6 -> p85, r44 -> p77 [p82], r49 -> p84 [p87] | CMP SUB_IMM 
228, r49 -> p84 | J JMP_IMM 
229, r6 -> p85, r44 -> p83 [p77], r49 -> p90 [p84] | CMP SUB_IMM 
230, r49 -> p90 | J JMP_IMM 
231, r6 -> p85, r44 -> p91 [p83], r49 -> p92 [p90] | CMP SUB_IMM 
232, r49 -> p92 | J JMP_IMM 
233, r1 -> p52, r1 -> p93 [p52], r49 -> p94 [p92] | ADD ADD_IMM 
234, r0 -> p50, r0 -> p71 [p50] | INC ADD_IMM 
235, r0 -> p71, r44 -> p96 [p91], r49 -> p73 [p94] | CMP SUB_IMM 
236, r49 -> p73 | J JMP_IMM 
237, r1 -> p93, r44 -> p95 [p96] | MOVSX LOAD 
238, r44 -> p95, r2 -> p98 [p67] | MOVSX SEXT_DWORD_TO_QWORD 
239, r7 -> p7, r2 -> p98, r6 -> p100 [p85] | LEA LEA 
240, r6 -> p100, r6 -> p89 [p100] | MOVSX SEXT_DWORD_TO_QWORD 
241, r6 -> p89, r6 -> p80 [p89] | MOV LOAD 
242, r6 -> p80, r44 -> p104 [p95], r49 -> p105 [p73] | CMP SUB_IMM 
243, r49 -> p105 | J JMP_IMM 
244, r2 -> p98, r8 -> p102 [p86] | MOV ADD 
245, r8 -> p102, r7 -> p7, r8 -> p101 [p102] | LEA LEA 
246, r8 -> p101, r8 -> p107 [p101] | MOVSX SEXT_DWORD_TO_QWORD 
247, r8 -> p107, r8 -> p108 [p107] | LEA LEA 
248, r2 -> p98, r2 -> p88 [p98], r49 -> p111 [p105] | SHL SHL_IMM 
249 | JMP JMP_IMM 
250, r6 -> p80, r44 -> p112 [p104], r49 -> p113 [p111] | CMP SUB_IMM 
251, r49 -> p113 | J JMP_IMM 
252, r6 -> p80, r44 -> p103 [p112], r49 -> p110 [p113] | CMP SUB_IMM 
253, r49 -> p110 | J JMP_IMM 
254, r6 -> p80, r44 -> p109 [p103], r49 -> p116 [p110] | CMP SUB_IMM 
255, r49 -> p116 | J JMP_IMM 
256, r8 -> p108, r6 -> p117 [p80] | MOV LOAD 
257, r8 -> p108, r2 -> p88, r8 -> p118 [p108], r49 -> p119 [p116] | ADD ADD 
258, r6 -> p117, r44 -> p120 [p109], r49 -> p97 [p119] | CMP SUB_IMM 
259, r49 -> p97 | J JMP_IMM 
260, r6 -> p117, r44 -> p122 [p120], r49 -> p99 [p97] | CMP SUB_IMM 
261, r49 -> p99 | J JMP_IMM 
262, r6 -> p117, r44 -> p121 [p122], r49 -> p124 [p99] | CMP SUB_IMM 
263, r49 -> p124 | J JMP_IMM 
264, r8 -> p118, r6 -> p125 [p117] | MOV LOAD 
265, r8 -> p118, r2 -> p88, r8 -> p123 [p118], r49 -> p126 [p124] | ADD ADD 
266, r6 -> p125, r44 -> p127 [p121], r49 -> p115 [p126] | CMP SUB_IMM 
267, r49 -> p115 | J JMP_IMM 
268, r6 -> p125, r44 -> p130 [p127], r49 -> p132 [p115] | CMP SUB_IMM 
269, r49 -> p132 | J JMP_IMM 
270, r6 -> p125, r44 -> p131 [p130], r49 -> p134 [p132] | CMP SUB_IMM 
271, r49 -> p134 | J JMP_IMM 
272, r1 -> p93, r1 -> p45 [p93], r49 -> p133 [p134] | ADD ADD_IMM 
273, r0 -> p71, r0 -> p135 [p71] | INC ADD_IMM 
274, r0 -> p135, r44 -> p129 [p131], r49 -> p139 [p133] | CMP SUB_IMM 
275, r49 -> p139 | J JMP_IMM 
276, r1 -> p45, r44 -> p128 [p129] | MOVSX LOAD 
277, r44 -> p128, r2 -> p138 [p88] | MOVSX SEXT_DWORD_TO_QWORD 
278, r7 -> p7, r2 -> p138, r6 -> p141 [p125] | LEA LEA 
279, r6 -> p141, r6 -> p136 [p141] | MOVSX SEXT_DWORD_TO_QWORD 
280, r6 -> p136, r6 -> p143 [p136] | MOV LOAD 
281, r6 -> p143, r44 -> p145 [p128], r49 -> p144 [p139] | CMP SUB_IMM 
282, r49 -> p144 | J JMP_IMM 
283, r2 -> p138, r8 -> p147 [p123] | MOV ADD 
284, r8 -> p147, r7 -> p7, r8 -> p137 [p147] | LEA LEA 
285, r8 -> p137, r8 -> p146 [p137] | MOVSX SEXT_DWORD_TO_QWORD 
286, r8 -> p146, r8 -> p148 [p146] | LEA LEA 
287, r2 -> p138, r2 -> p140 [p138], r49 -> p152 [p144] | SHL SHL_IMM 
288 | JMP JMP_IMM 
289, r6 -> p143, r44 -> p142 [p145], r49 -> p151 [p152] | CMP SUB_IMM 
290, r49 -> p151 | J JMP_IMM 
291, r6 -> p143, r44 -> p154 [p142], r49 -> p149 [p151] | CMP SUB_IMM 
292, r49 -> p149 | J JMP_IMM 
293, r6 -> p143, r44 -> p156 [p154], r49 -> p158 [p149] | CMP SUB_IMM 
294, r49 -> p158 | J JMP_IMM 
295, r8 -> p148, r6 -> p157 [p143] | MOV LOAD 
296, r8 -> p148, r2 -> p140, r8 -> p160 [p148], r49 -> p150 [p158] | ADD ADD 
297, r6 -> p157, r44 -> p159 [p156], r49 -> p161 [p150] | CMP SUB_IMM 
298, r49 -> p161 | J JMP_IMM 
299, r6 -> p157, r44 -> p153 [p159], r49 -> p165 [p161] | CMP SUB_IMM 
300, r49 -> p165 | J JMP_IMM 
301, r6 -> p157, r44 -> p155 [p153], r49 -> p164 [p165] | CMP SUB_IMM 
302, r49 -> p164 | J JMP_IMM 
303, r8 -> p160, r6 -> p167 [p157] | MOV LOAD 
304, r8 -> p160, r2 -> p140, r8 -> p162 [p160], r49 -> p169 [p164] | ADD ADD 
305, r6 -> p167, r44 -> p171 [p155], r49 -> p170 [p169] | CMP SUB_IMM 
306, r49 -> p170 | J JMP_IMM 
307, r6 -> p167, r44 -> p173 [p171], r49 -> p163 [p170] | CMP SUB_IMM 
308, r49 -> p163 | J JMP_IMM 
309, r6 -> p167, r44 -> p172 [p173], r49 -> p174 [p163] | CMP SUB_IMM 
310, r49 -> p174 | J JMP_IMM 
311, r8 -> p162, r6 -> p166 [p167] | MOV LOAD 
312, r8 -> p162, r2 -> p140, r8 -> p178 [p162], r49 -> p168 [p174] | ADD ADD 
313, r6 -> p166, r44 -> p177 [p172], r49 -> p180 [p168] | CMP SUB_IMM 
314, r49 -> p180 | J JMP_IMM 
315, r6 -> p166, r44 -> p175 [p177], r49 -> p182 [p180] | CMP SUB_IMM 
316, r49 -> p182 | J JMP_IMM 
317, r6 -> p166, r44 -> p184 [p175], r49 -> p183 [p182] | CMP SUB_IMM 
318, r49 -> p183 | J JMP_IMM 
319, r1 -> p45, r1 -> p186 [p45], r49 -> p176 [p183] | ADD ADD_IMM 
320, r0 -> p135, r0 -> p185 [p135] | INC ADD_IMM 
321, r0 -> p185, r44 -> p187 [p184], r49 -> p179 [p176] | CMP SUB_IMM 
322, r49 -> p179 | J JMP_IMM 
323, r0 -> p191 [p185] | XOR ADD 
324, r4 -> p4, r44 -> p181 [p187] | RET LOAD 
325, r4 -> p4, r4 -> p190 [p4] | RET ADD_IMM 
326, r44 -> p181 | RET JMP_REG 
327, r0 -> p191, r0 -> p191, r44 -> p193 [p181], r49 -> p188 [p179] | TEST AND 
328, r0 -> p195 [p191] | SET ADD 
329, r49 -> p188, r0 -> p197 [p195] | SET ADD_IMM 
330, r0 -> p197, r0 -> p196 [p197] | MOVZX ZEXT_BYTE_TO_DWORD 
331, r4 -> p190, r4 -> p199 [p190], r49 -> p189 [p188] | ADD ADD_IMM 
332, r4 -> p199, r44 -> p198 [p193] | RET LOAD 
333, r4 -> p199, r4 -> p200 [p199] | RET ADD_IMM 
334, r44 -> p198 | RET JMP_REG 
335, r0 -> p196, r0 -> p196, r44 -> p192 [p198], r49 -> p204 [p189] | TEST AND 
336, r49 -> p204 | J JMP_IMM 
337, r4 -> p200, r0 -> p194 [p196] | LEA LEA 
338, r0 -> p194, r7 -> p203 [p7] | MOV ADD 
339, r13 -> p13, r6 -> p206 [p166] | MOV ADD 
340, r44 -> p201 [p192] | CALL SAVE_PC 
341, r4 -> p200, r4 -> p208 [p200] | CALL SUB_IMM 
342, r44 -> p201, r4 -> p208 | CALL STORE 
343 | CALL JMP_IMM 
344, r4 -> p208, r4 -> p210 [p208], r49 -> p209 [p204] | SUB SUB_IMM 
345, r45 -> p212 [p228] | CMP SAVE_PC 
346, r45 -> p212, r45 -> p202 [p212] | CMP LOAD 
347, r45 -> p202, r44 -> p211 [p201], r49 -> p213 [p209] | CMP SUB_IMM 
348, r49 -> p213 | J JMP_IMM 
349, r6 -> p206, r0 -> p205 [p194] | MOVSX SEXT_DWORD_TO_QWORD 
350, r0 -> p205, r0 -> p205, r1 -> p217 [p186] | LEA LEA 
351, r1 -> p217, r7 -> p203, r44 -> p207 [p211] | MOVSX LOAD 
352, r44 -> p207, r2 -> p216 [p140] | MOVSX SEXT_DWORD_TO_QWORD 
353, r1 -> p217, r7 -> p203, r44 -> p219 [p207] | MOVSX LOAD 
354, r44 -> p219, r1 -> p214 [p217] | MOVSX SEXT_DWORD_TO_QWORD 
355, r1 -> p214, r6 -> p221 [p206] | MOV LOAD 
356, r45 -> p223 [p202] | CMP SAVE_PC 
357, r45 -> p223, r45 -> p222 [p223] | CMP LOAD 
358, r45 -> p222, r44 -> p225 [p219], r49 -> p215 [p213] | CMP SUB_IMM 
359, r49 -> p215 | J JMP_IMM 
360, r6 -> p221, r6 -> p224 [p221], r49 -> p226 [p215] | ADD ADD_IMM 
361, r6 -> p224, r44 -> p218 [p225], r49 -> p230 [p226] | CMP SUB_IMM 
362, r49 -> p230 | J JMP_IMM 
363, r6 -> p224, r44 -> p220 [p218] | JMP LOAD 
364, r44 -> p220 | JMP JMP_REG 
365, r1 -> p214, r6 -> p229 [p224] | LEA LEA 
366, r6 -> p229, r0 -> p232 [p205] | MOVSX SEXT_DWORD_TO_QWORD 
367, r0 -> p232, r45 -> p233 [p222] | CMP LOAD 
368, r45 -> p233, r44 -> p231 [p220], r49 -> p234 [p230] | CMP SUB_IMM 
369, r49 -> p234 | J JMP_IMM 
370, r1 -> p214, r1 -> p235 [p214], r49 -> p238 [p234] | ADD ADD_IMM 
371, r1 -> p235, r0 -> p227 [p232] | MOVSX SEXT_DWORD_TO_QWORD 
372, r0 -> p227, r45 -> p106 [p233] | CMP LOAD 
373, r45 -> p106, r44 -> p242 [p231], r49 -> p243 [p238] | CMP SUB_IMM 
374, r49 -> p243 | J JMP_IMM 
375, r2 -> p216, r2 -> p216, r44 -> p240 [p242], r49 -> p239 [p243] | TEST AND 
376, r49 -> p239 | J JMP_IMM 
377, r44 -> p114 [p240] | MOVSX SAVE_PC 
378, r44 -> p114, r44 -> p247 [p114] | MOVSX LOAD 
379, r44 -> p247, r0 -> p248 [p227] | MOVSX SEXT_DWORD_TO_QWORD 
380, r0 -> p248, r6 -> p249 [p229] | MOV LOAD 
381, r2 -> p216, r45 -> p241 [p106] | CMP LOAD 
382, r45 -> p241, r6 -> p249, r44 -> p246 [p247], r49 -> p245 [p239] | CMP SUB 
383, r49 -> p245 | J JMP_IMM 
384, r0 -> p248, r6 -> p252 [p249] | MOV LOAD 
385, r2 -> p216, r45 -> p253 [p241] | CMP LOAD 
386, r45 -> p253, r6 -> p252, r44 -> p254 [p246], r49 -> p255 [p245] | CMP SUB 
387, r49 -> p255 | J JMP_IMM 
388, r0 -> p248, r6 -> p44 [p252] | MOV LOAD 
389, r2 -> p216, r45 -> p237 [p253] | CMP LOAD 
390, r45 -> p237, r6 -> p44, r44 -> p6 [p254], r49 -> p236 [p255] | CMP SUB 
391, r49 -> p236 | J JMP_IMM 
392, r0 -> p248, r6 -> p2 [p44] | MOV LOAD 
393, r2 -> p216, r45 -> p53 [p237] | CMP LOAD 
394, r45 -> p53, r6 -> p2, r44 -> p49 [p6], r49 -> p251 [p236] | CMP SUB 
395, r49 -> p251 | J JMP_IMM 
396, r0 -> p244 [p248] | XOR ADD 
397, r4 -> p210, r4 -> p59 [p210], r49 -> p60 [p251] | ADD ADD_IMM 
398, r4 -> p59, r44 -> p56 [p49] | RET LOAD 
399, r4 -> p59, r4 -> p55 [p59] | RET ADD_IMM 
400, r44 -> p56 | RET JMP_REG 
401, r5 -> p5, r44 -> p250 [p56] | MOV LEA 
402, r0 -> p244, r44 -> p250 | MOV STORE 
403, r0 -> p244, r0 -> p244, r44 -> p57 [p250], r49 -> p64 [p60] | TEST AND 
404, r49 -> p64 | J JMP_IMM 
405, r44 -> p65 [p57] | MOV SAVE_PC 
406, r44 -> p65, r14 -> p8 [p14] | MOV LOAD 
407, r14 -> p8, r14 -> p58 [p8], r49 -> p51 [p64] | ADD ADD_IMM 
408, r14 -> p58, r44 -> p68 [p65], r49 -> p1 [p51] | CMP SUB_IMM 
409, r49 -> p1 | J JMP_IMM 
410, r4 -> p55, r45 -> p70 [p53] | CMP LOAD 
411, r45 -> p70, r44 -> p0 [p68], r49 -> p69 [p1] | CMP SUB_IMM 
412, r49 -> p69 | J JMP_IMM 
413, r13 -> p13, r1 -> p61 [p235] | MOVSX SEXT_DWORD_TO_QWORD 
414, r1 -> p61, r1 -> p61, r1 -> p66 [p61] | LEA LEA 
415, r1 -> p66, r4 -> p55, r44 -> p74 [p0] | MOVSX LOAD 
416, r44 -> p74, r1 -> p72 [p66] | MOVSX SEXT_DWORD_TO_QWORD 
417, r1 -> p72, r14 -> p78 [p58] | MOV LOAD 
418, r14 -> p78, r44 -> p79 [p74], r49 -> p76 [p69] | CMP SUB_IMM 
419, r49 -> p76 | J JMP_IMM 
420, r14 -> p78, r44 -> p75 [p79], r49 -> p81 [p76] | CMP SUB_IMM 
421, r49 -> p81 | J JMP_IMM 
422, r1 -> p72, r1 -> p63 [p72] | MOV LOAD 
423 | JMP JMP_IMM 
424, r1 -> p63, r44 -> p54 [p75], r49 -> p62 [p81] | CMP SUB_IMM 
425, r49 -> p62 | J JMP_IMM 
426, r14 -> p82 [p78] | XOR ADD 
427 | JMP JMP_IMM 
428, r13 -> p13, r1 -> p87 [p63] | MOVSX SEXT_DWORD_TO_QWORD 
429, r1 -> p87, r1 -> p87, r2 -> p77 [p216] | LEA LEA 
430, r2 -> p77, r4 -> p55, r45 -> p84 [p70] | CMP LOAD 
431, r45 -> p84, r44 -> p83 [p54], r49 -> p90 [p62] | CMP SUB 
432, r49 -> p90 | J JMP_IMM 
433, r0 -> p244, r0 -> p244, r44 -> p52 [p83], r49 -> p92 [p90] | TEST AND 
434, r0 -> p50 [p244] | SET ADD 
435, r49 -> p92, r0 -> p91 [p50] | SET ADD_IMM 
436, r4 -> p55, r45 -> p94 [p84] | CMP LOAD 
437, r45 -> p94, r44 -> p96 [p52], r49 -> p67 [p92] | CMP SUB 
438, r49 -> p67 | J JMP_IMM 
439, r4 -> p55, r2 -> p85 [p77] | MOV LOAD 
440, r14 -> p82, r2 -> p85, r5 -> p100 [p5] | LEA LEA 
441, r4 -> p55, r45 -> p89 [p94] | TEST LOAD 
442, r45 -> p89, r44 -> p95 [p96], r49 -> p73 [p67] | TEST AND_IMM 
443, r49 -> p73 | J JMP_IMM 
444, r14 -> p86 [p82] | XOR ADD 
445, r4 -> p55, r7 -> p102 [p203] | MOV LOAD 
446, r12 -> p12, r6 -> p101 [p2] | MOV ADD 
447, r5 -> p100, r2 -> p107 [p85] | MOV ADD 
448, r1 -> p98 [p87] | XOR ADD 
449, r44 -> p105 [p95] | CALL SAVE_PC 
450, r4 -> p55, r4 -> p104 [p55] | CALL SUB_IMM 
451, r44 -> p105, r4 -> p104 | CALL STORE 
452 | CALL JMP_IMM 
453, r5 -> p100, r4 -> p104 | PUSH STORE 
454, r4 -> p104, r4 -> p111 [p104] | PUSH SUB_IMM 
455, r15 -> p15, r4 -> p111 | PUSH STORE 
456, r4 -> p111, r4 -> p112 [p111] | PUSH SUB_IMM 
457, r14 -> p86, r4 -> p112 | PUSH STORE 
458, r4 -> p112, r4 -> p113 [p112] | PUSH SUB_IMM 
459, r13 -> p13, r4 -> p113 | PUSH STORE 
460, r4 -> p113, r4 -> p103 [p113] | PUSH SUB_IMM 
461, r12 -> p12, r4 -> p103 | PUSH STORE 
462, r4 -> p103, r4 -> p110 [p103] | PUSH SUB_IMM 
463, r3 -> p3, r4 -> p110 | PUSH STORE 
464, r4 -> p110, r4 -> p80 [p110] | PUSH SUB_IMM 
465, r4 -> p80, r4 -> p108 [p80], r49 -> p116 [p73] | SUB SUB_IMM 
466, r44 -> p109 [p105] | MOV SAVE_PC 
467, r44 -> p109, r0 -> p119 [p91] | MOV LOAD 
468, r0 -> p119, r0 -> p120 [p119] | INC ADD_IMM 
469, r44 -> p97 [p109] | MOV SAVE_PC 
470, r0 -> p120, r44 -> p97 | MOV STORE 
471, r0 -> p120, r44 -> p122 [p97], r49 -> p99 [p116] | TEST AND_IMM 
472, r1 -> p98, r4 -> p108 | MOV STORE 
473, r2 -> p107, r4 -> p108 | MOV STORE 
474, r6 -> p101, r4 -> p108 | MOV STORE 
475, r7 -> p102, r4 -> p108 | MOV STORE 
476, r49 -> p99 | J JMP_IMM 
477, r4 -> p108 | MOV STORE 
478, r44 -> p117 [p122] | MOVSX SAVE_PC 
479, r44 -> p117, r44 -> p118 [p117] | MOVSX LOAD 
480, r44 -> p118, r3 -> p124 [p3] | MOVSX SEXT_DWORD_TO_QWORD 
481, r3 -> p124, r44 -> p121 [p118] | MOV LEA 
482, r3 -> p124, r44 -> p121 | MOV STORE 
483, r44 -> p126 [p121] | CALL SAVE_PC 
484, r4 -> p108, r4 -> p127 [p108] | CALL SUB_IMM 
485, r44 -> p126, r4 -> p127 | CALL STORE 
486 | CALL JMP_IMM 
487, r44 -> p115 [p126] | MOV SAVE_PC 
488, r44 -> p115, r0 -> p130 [p120] | MOV LOAD 
489, r0 -> p130, r44 -> p132 [p115], r49 -> p93 [p99] | CMP SUB_IMM 
490, r49 -> p93 | J JMP_IMM 
491, r0 -> p130, r44 -> p134 [p132], r49 -> p71 [p93] | CMP SUB_IMM 
492, r49 -> p71 | J JMP_IMM 
493, r0 -> p131 [p130] | XOR ADD 
494, r4 -> p127, r44 -> p133 [p134] | RET LOAD 
495, r4 -> p127, r4 -> p129 [p127] | RET ADD_IMM 
496, r44 -> p133 | RET JMP_REG 
497, r0 -> p131, r0 -> p131, r44 -> p88 [p133], r49 -> p125 [p71] | TEST AND 
498, r49 -> p125 | J JMP_IMM 
499, r3 -> p124, r0 -> p141 [p131] | MOV LOAD 
500, r0 -> p141, r4 -> p129 | MOV STORE 
501, r3 -> p124, r44 -> p136 [p88] | MOV LEA 
502, r44 -> p136 | MOV STORE 
503, r3 -> p124, r44 -> p128 [p136], r49 -> p139 [p125] | CMP SUB_IMM 
504, r49 -> p139 | J JMP_IMM 
505, r0 -> p141, r0 -> p141, r44 -> p123 [p128], r49 -> p147 [p139] | TEST AND 
506, r49 -> p147 | J JMP_IMM 
507, r4 -> p129 | MOV STORE 
508 | JMP JMP_IMM 
509, r4 -> p129, r45 -> p137 [p89] | CMP LOAD 
510, r45 -> p137, r44 -> p146 [p123], r49 -> p138 [p147] | CMP SUB 
511, r49 -> p138 | J JMP_IMM 
512, r44 -> p144 [p146] | MOV SAVE_PC 
513, r44 -> p144, r0 -> p145 [p141] | MOV LOAD 
514, r0 -> p145, r44 -> p152 [p144], r49 -> p142 [p138] | CMP SUB_IMM 
515, r49 -> p142 | J JMP_IMM 
516, r0 -> p145, r44 -> p151 [p152], r49 -> p154 [p142] | CMP SUB_IMM 
517, r49 -> p154 | J JMP_IMM 
518, r2 -> p149 [p107] | MOV ADD_IMM 
519, r2 -> p149, r3 -> p124, r2 -> p143 [p149], r49 -> p148 [p154] | SUB SUB 
520, r44 -> p158 [p151] | MOV ADD_IMM 
521, r45 -> p156 [p137] | MOV SAVE_PC 
522, r44 -> p158, r45 -> p156 | MOV STORE 
523, r4 -> p129, r7 -> p150 [p102] | MOV LOAD 
524, r4 -> p129, r6 -> p159 [p101] | MOV LOAD 
525, r44 -> p161 [p158] | CALL SAVE_PC 
526, r4 -> p129, r4 -> p153 [p129] | CALL SUB_IMM 
527, r44 -> p161, r4 -> p153 | CALL STORE 
528 | CALL JMP_IMM 
529, r5 -> p100, r4 -> p153 | PUSH STORE 
530, r4 -> p153, r4 -> p165 [p153] | PUSH SUB_IMM 
531, r15 -> p15, r4 -> p165 | PUSH STORE 
532, r4 -> p165, r4 -> p157 [p165] | PUSH SUB_IMM 
533, r14 -> p86, r4 -> p157 | PUSH STORE 
534, r4 -> p157, r4 -> p160 [p157] | PUSH SUB_IMM 
535, r13 -> p13, r4 -> p160 | PUSH STORE 
536, r4 -> p160, r4 -> p164 [p160] | PUSH SUB_IMM 
537, r12 -> p12, r4 -> p164 | PUSH STORE 
538, r4 -> p164, r4 -> p155 [p164] | PUSH SUB_IMM 
539, r3 -> p124, r4 -> p155 | PUSH STORE 
540, r4 -> p155, r4 -> p169 [p155] | PUSH SUB_IMM 
541, r4 -> p169, r4 -> p171 [p169], r49 -> p170 [p148] | SUB SUB_IMM 
542, r44 -> p173 [p161] | MOVSX SAVE_PC 
543, r44 -> p173, r44 -> p163 [p173] | MOVSX LOAD 
544, r44 -> p163, r0 -> p167 [p145] | MOVSX SEXT_DWORD_TO_QWORD 
545, r0 -> p167, r44 -> p162 [p163] | MOV LEA 
546, r0 -> p167, r44 -> p162 | MOV STORE 
547, r44 -> p174 [p162] | MOVZX SAVE_PC 
548, r44 -> p174, r44 -> p172 [p174] | MOVZX LOAD 
549, r44 -> p172, r0 -> p168 [p167] | MOVZX ZEXT_WORD_TO_DWORD 
550, r0 -> p168, r0 -> p168, r44 -> p177 [p172], r49 -> p180 [p170] | TEST AND 
551, r2 -> p143, r4 -> p171 | MOV STORE 
552, r6 -> p159, r4 -> p171 | MOV STORE 
553, r7 -> p150, r4 -> p171 | MOV STORE 
554, r49 -> p180 | J JMP_IMM 
555, r4 -> p171, r45 -> p175 [p156] | CMP LOAD 
556, r45 -> p175, r44 -> p182 [p177], r49 -> p45 [p180] | CMP SUB 
557, r49 -> p45 | J JMP_IMM 
558, r45 -> p183 [p175] | CMP SAVE_PC 
559, r45 -> p183, r45 -> p135 [p183] | CMP LOAD 
560, r45 -> p135, r44 -> p184 [p182], r49 -> p176 [p45] | CMP SUB_IMM 
561, r49 -> p176 | J JMP_IMM 
562, r44 -> p185 [p184] | INC SAVE_PC 
563, r44 -> p185, r44 -> p187 [p185] | INC LOAD 
564, r44 -> p187, r44 -> p4 [p187] | INC ADD_IMM 
565, r45 -> p181 [p135] | INC SAVE_PC 
566, r44 -> p4, r45 -> p181 | INC STORE 
567, r44 -> p179 [p4] | INC SAVE_PC 
568, r44 -> p179, r44 -> p191 [p179] | INC LOAD 
569, r44 -> p191, r44 -> p195 [p191] | INC ADD_IMM 
570, r45 -> p197 [p181] | INC SAVE_PC 
571, r44 -> p195, r45 -> p197 | INC STORE 
572, r44 -> p190 [p195] | INC SAVE_PC 
573, r44 -> p190, r44 -> p188 [p190] | INC LOAD 
574, r44 -> p188, r44 -> p193 [p188] | INC ADD_IMM 
575, r45 -> p199 [p197] | INC SAVE_PC 
576, r44 -> p193, r45 -> p199 | INC STORE 
577, r1 -> p198 [p98] | MOV ADD_IMM 
578, r44 -> p189 [p193] | MOV SAVE_PC 
579, r44 -> p189, r6 -> p196 [p159] | MOV LOAD 
580, r6 -> p196, r0 -> p7 [p168] | MOV ADD 
581, r0 -> p7, r1 -> p198, r44 -> p166 [p189], r49 -> p192 [p176] | MUL MUL 
582, r44 -> p166, r0 -> p200 [p7] | MUL ADD 
583, r44 -> p166, r2 -> p208 [p143] | MUL UPPER_HALF 
584, r2 -> p208, r2 -> p204 [p208], r49 -> p228 [p192] | SHR SHR_IMM 
585, r2 -> p204, r0 -> p212 [p200], r49 -> p201 [p228] | IMUL IMUL_T_IMM 
586, r6 -> p196, r1 -> p209 [p198] | MOV ADD 
587, r1 -> p209, r0 -> p212, r1 -> p194 [p209], r49 -> p186 [p201] | SUB SUB 
588, r1 -> p194, r0 -> p211 [p212] | MOV ADD 
589, r0 -> p211, r0 -> p140 [p211], r49 -> p207 [p186] | SHL SHL_IMM 
590, r44 -> p217 [p166] | MOV SAVE_PC 
591, r44 -> p217, r2 -> p206 [p204] | MOV LOAD 
592, r0 -> p140, r2 -> p206, r45 -> p202 [p199] | CMP LOAD 
593, r45 -> p202, r6 -> p196, r44 -> p223 [p217], r49 -> p219 [p207] | CMP SUB 
594, r49 -> p219 | J JMP_IMM 
595, r44 -> p213 [p223] | MOV ADD_IMM 
596, r44 -> p213, r4 -> p171 | MOV STORE 
597, r4 -> p171, r7 -> p221 [p150] | MOV LOAD 
598, r4 -> p171, r3 -> p215 [p124] | MOV LOAD 
599, r3 -> p215, r6 -> p225 [p196] | MOV ADD 
600, r44 -> p226 [p213] | CALL SAVE_PC 
601, r4 -> p171, r4 -> p218 [p171] | CALL SUB_IMM 
602, r44 -> p226, r4 -> p218 | CALL STORE 
603 | CALL JMP_IMM 
604, r5 -> p100, r4 -> p218 | PUSH STORE 
605, r4 -> p218, r4 -> p224 [p218] | PUSH SUB_IMM 
606, r15 -> p15, r4 -> p224 | PUSH STORE 
607, r4 -> p224, r4 -> p205 [p224] | PUSH SUB_IMM 
608, r14 -> p86, r4 -> p205 | PUSH STORE 
609, r4 -> p205, r4 -> p222 [p205] | PUSH SUB_IMM 
610, r13 -> p13, r4 -> p222 | PUSH STORE 
611, r4 -> p222, r4 -> p220 [p222] | PUSH SUB_IMM 
612, r12 -> p12, r4 -> p220 | PUSH STORE 
613, r4 -> p220, r4 -> p230 [p220] | PUSH SUB_IMM 
614, r3 -> p215, r4 -> p230 | PUSH STORE 
615, r4 -> p230, r4 -> p214 [p230] | PUSH SUB_IMM 
616, r4 -> p214, r4 -> p234 [p214], r49 -> p232 [p219] | SUB SUB_IMM 
617, r44 -> p233 [p226] | MOV SAVE_PC 
618, r44 -> p233, r1 -> p231 [p194] | MOV LOAD 
619, r1 -> p231, r44 -> p238 [p233], r49 -> p242 [p232] | CMP SUB_IMM 
620, r49 -> p242 | J JMP_IMM 
621, r1 -> p231, r44 -> p243 [p238], r49 -> p240 [p242] | CMP SUB_IMM 
622, r49 -> p240 | J JMP_IMM 
623, r1 -> p231, r44 -> p114 [p243], r49 -> p227 [p240] | CMP SUB_IMM 
624, r49 -> p227 | J JMP_IMM 
625, r44 -> p229 [p114] | MOV SAVE_PC 
626, r44 -> p229, r1 -> p106 [p231] | MOV LOAD 
627, r1 -> p106, r2 -> p247 [p206] | MOV ADD 
628, r2 -> p247, r2 -> p239 [p247], r49 -> p249 [p227] | NEG SUB 
629, r44 -> p241 [p229] | MOV SAVE_PC 
630, r44 -> p241, r8 -> p246 [p178] | MOV LOAD 
631, r8 -> p246, r8 -> p246, r44 -> p245 [p241], r49 -> p252 [p249] | TEST AND 
632, r1 -> p106, r49 -> p252, r2 -> p253 [p239] | CMOV ADD 
633, r44 -> p254 [p245] | MOV SAVE_PC 
634, r44 -> p254, r1 -> p255 [p106] | MOV LOAD 
635, r2 -> p253, r0 -> p44 [p140] | MOV ADD 
636, r0 -> p44, r1 -> p255, r0 -> p237 [p44], r49 -> p6 [p252] | SUB SUB 
637, r0 -> p237, r6 -> p225, r44 -> p236 [p254], r49 -> p248 [p6] | CMP SUB 
638, r49 -> p248 | J JMP_IMM 
639, r2 -> p253, r1 -> p255, r2 -> p210 [p253], r49 -> p251 [p248] | ADD ADD 
640, r2 -> p210, r7 -> p221, r44 -> p49 [p236], r49 -> p59 [p251] | CMP SUB 
641, r49 -> p59 | J JMP_IMM 
642, r2 -> p210, r0 -> p56 [p237] | MOV ADD 
643 | JMP JMP_IMM 
644, r4 -> p234, r4 -> p250 [p234], r49 -> p60 [p59] | ADD ADD_IMM 
645, r4 -> p250, r3 -> p57 [p215] | POP LOAD 
646, r4 -> p250, r4 -> p14 [p250] | POP ADD_IMM 
647, r4 -> p14, r12 -> p8 [p12] | POP LOAD 
648, r4 -> p14, r4 -> p64 [p14] | POP ADD_IMM 
649, r4 -> p64, r13 -> p65 [p13] | POP LOAD 
650, r4 -> p64, r4 -> p51 [p64] | POP ADD_IMM 
651, r4 -> p51, r14 -> p53 [p86] | POP LOAD 
652, r4 -> p51, r4 -> p68 [p51] | POP ADD_IMM 
653, r4 -> p68, r15 -> p1 [p15] | POP LOAD 
654, r4 -> p68, r4 -> p235 [p68] | POP ADD_IMM 
655, r4 -> p235, r5 -> p61 [p100] | POP LOAD 
656, r4 -> p235, r4 -> p0 [p235] | POP ADD_IMM 
657, r4 -> p0, r44 -> p66 [p49] | RET LOAD 
658, r4 -> p0, r4 -> p58 [p0] | RET ADD_IMM 
659, r44 -> p66 | RET JMP_REG 
660, r0 -> p56, r3 -> p57, r44 -> p74 [p66], r49 -> p69 [p60] | CMP SUB 
661, r0 -> p56, r3 -> p79 [p57] | MOV ADD 
662, r49 -> p69 | J JMP_IMM 
663, r4 -> p58, r7 -> p76 [p221] | LEA LEA 
664, r44 -> p72 [p74] | CALL SAVE_PC 
665, r4 -> p58, r4 -> p75 [p58] | CALL SUB_IMM 
666, r44 -> p72, r4 -> p75 | CALL STORE 
667 | CALL JMP_IMM 
668, r5 -> p61, r4 -> p75 | PUSH STORE 
669, r4 -> p75, r4 -> p81 [p75] | PUSH SUB_IMM 
670, r15 -> p1, r4 -> p81 | PUSH STORE 
671, r4 -> p81, r4 -> p78 [p81] | PUSH SUB_IMM 
672, r14 -> p53, r4 -> p78 | PUSH STORE 
673, r4 -> p78, r4 -> p63 [p78] | PUSH SUB_IMM 
674, r13 -> p65, r4 -> p63 | PUSH STORE 
675, r4 -> p63, r4 -> p216 [p63] | PUSH SUB_IMM 
676, r12 -> p8, r4 -> p216 | PUSH STORE 
677, r4 -> p216, r4 -> p70 [p216] | PUSH SUB_IMM 
678, r3 -> p79, r4 -> p70 | PUSH STORE 
679, r4 -> p70, r4 -> p54 [p70] | PUSH SUB_IMM 
680, r4 -> p54, r4 -> p62 [p54], r49 -> p83 [p69] | SUB SUB_IMM 
681, r44 -> p90 [p72] | MOV SAVE_PC 
682, r44 -> p90 | MOV STORE 
683, r44 -> p244 [p90] | MOV SAVE_PC 
684, r44 -> p244 | MOV STORE 
685, r44 -> p50 [p244] | MOV SAVE_PC 
686, r7 -> p76, r44 -> p50 | MOV STORE 
687, r45 -> p84 [p202] | CMP SAVE_PC 
688, r45 -> p84, r45 -> p52 [p84] | CMP LOAD 
689, r45 -> p52, r44 -> p92 [p50], r49 -> p77 [p83] | CMP SUB_IMM 
690, r49 -> p77 | J JMP_IMM 
691, r44 -> p5 [p92] | MOV SAVE_PC 
692, r44 -> p5, r0 -> p94 [p56] | MOV LOAD 
693, r0 -> p94, r4 -> p62 | MOV STORE 
694, r44 -> p96 [p5] | MOV SAVE_PC 
695, r44 -> p96, r3 -> p67 [p79] | MOV LOAD 
696, r44 -> p82 [p96] | MOV SAVE_PC 
697, r44 -> p82, r0 -> p203 [p94] | MOV LOAD 
698, r0 -> p203, r4 -> p62 | MOV STORE 
699, r44 -> p2 [p82] | MOV SAVE_PC 
700, r44 -> p2, r0 -> p85 [p203] | MOV LOAD 
701, r0 -> p85, r4 -> p62 | MOV STORE 
702, r14 -> p87 [p53] | MOV ADD_IMM 
703 | JMP JMP_IMM 
704, r4 -> p62, r45 -> p95 [p52] | CMP LOAD 
705, r45 -> p95, r44 -> p55 [p2], r49 -> p104 [p77] | CMP SUB 
706, r49 -> p104 | J JMP_IMM 
707, r15 -> p111 [p1] | MOV ADD_IMM 
708, r12 -> p112 [p8] | MOV ADD_IMM 
709 | JMP JMP_IMM 
710, r4 -> p62, r45 -> p113 [p95] | CMP LOAD 
711, r15 -> p111, r45 -> p113, r44 -> p103 [p55], r49 -> p110 [p104] | CMP SUB 
712, r49 -> p110 | J JMP_IMM 
713, r44 -> p80 [p103] | MOV SAVE_PC 
714, r44 -> p80, r0 -> p73 [p85] | MOV LOAD 
715, r0 -> p73, r44 -> p105 [p80], r49 -> p91 [p110] | CMP SUB_IMM 
716, r49 -> p91 | J JMP_IMM 
717, r44 -> p119 [p105] | MOV SAVE_PC 
718, r44 -> p119, r1 -> p109 [p255] | MOV LOAD 
719, r1 -> p109, r44 -> p97 [p119], r49 -> p116 [p91] | CMP SUB_IMM 
720, r49 -> p116 | J JMP_IMM 
721, r12 -> p112, r44 -> p122 [p97] | MOVSX LOAD 
722, r44 -> p122, r13 -> p117 [p65] | MOVSX SEXT_DWORD_TO_QWORD 
723, r13 -> p117, r13 -> p117, r44 -> p3 [p122], r49 -> p118 [p116] | TEST AND 
724, r49 -> p118 | J JMP_IMM 
725, r13 -> p117, r5 -> p121 [p61] | MOV ADD 
726, r44 -> p108 [p3] | MOV SAVE_PC 
727, r5 -> p121, r44 -> p108 | MOV STORE 
728, r15 -> p111, r15 -> p126 [p111] | INC ADD_IMM 
729, r13 -> p117, r1 -> p120 [p109] | MOV LOAD 
730, r1 -> p120, r1 -> p115 [p120] | DEC SUB_IMM 
731, r1 -> p115, r44 -> p99 [p108], r49 -> p132 [p118] | CMP SUB_IMM 
732, r49 -> p132 | J JMP_IMM 
733, r1 -> p115, r44 -> p93 [p99] | JMP LOAD 
734, r44 -> p93 | JMP JMP_REG 
735, r5 -> p121, r7 -> p130 [p76] | LEA LEA 
736, r7 -> p130, r0 -> p134 [p73] | MOVSX SEXT_DWORD_TO_QWORD 
737, r0 -> p134, r45 -> p127 [p113] | CMP LOAD 
738, r45 -> p127, r44 -> p133 [p93], r49 -> p71 [p132] | CMP SUB 
739, r49 -> p71 | J JMP_IMM 
740, r5 -> p121, r7 -> p131 [p130] | LEA LEA 
741, r7 -> p131, r0 -> p88 [p134] | MOVSX SEXT_DWORD_TO_QWORD 
742, r0 -> p88, r45 -> p136 [p127] | CMP LOAD 
743, r45 -> p136, r44 -> p125 [p133], r49 -> p128 [p71] | CMP SUB 
744, r49 -> p128 | J JMP_IMM 
745, r44 -> p139 [p125] | CALL SAVE_PC 
746, r4 -> p62, r4 -> p89 [p62] | CALL SUB_IMM 
747, r44 -> p139, r4 -> p89 | CALL STORE 
748 | CALL JMP_IMM 
749, r14 -> p87, r4 -> p89 | PUSH STORE 
750, r4 -> p89, r4 -> p123 [p89] | PUSH SUB_IMM 
751, r3 -> p67, r4 -> p123 | PUSH STORE 
752, r4 -> p123, r4 -> p147 [p123] | PUSH SUB_IMM 
753, r7 -> p131, r0 -> p146 [p88] | MOVSX SEXT_DWORD_TO_QWORD 
754, r0 -> p146, r0 -> p146, r1 -> p141 [p115] | LEA LEA 
755, r44 -> p144 [p139] | MOVSX SAVE_PC 
756, r44 -> p144, r44 -> p138 [p144] | MOVSX LOAD 
757, r44 -> p138, r2 -> p152 [p210] | MOVSX SEXT_DWORD_TO_QWORD 
758, r0 -> p146, r6 -> p142 [p225] | MOV ADD 
759, r6 -> p142, r2 -> p152, r6 -> p107 [p142], r49 -> p149 [p128] | SUB SUB 
760, r6 -> p107, r6 -> p154 [p107] | MOVSX SEXT_DWORD_TO_QWORD 
761, r1 -> p141, r2 -> p152, r1 -> p151 [p141], r49 -> p137 [p149] | SUB SUB 
762, r1 -> p151, r1 -> p102 [p151] | MOVSX SEXT_DWORD_TO_QWORD 
763, r1 -> p102, r1 -> p101 [p102] | LEA LEA 
764, r2 -> p152, r7 -> p158 [p131] | MOV LOAD 
765, r0 -> p146, r8 -> p129 [p246] | LEA LEA 
766, r9 -> p153 [p9] | XOR ADD 
767, r44 -> p165 [p138] | MOV SAVE_PC 
768, r44 -> p165, r10 -> p157 [p10] | MOV LOAD 
769, r44 -> p160 [p165] | MOV SAVE_PC 
770, r44 -> p160, r11 -> p164 [p11] | MOV LOAD 
771, r44 -> p155 [p160] | MOV SAVE_PC 
772, r44 -> p155, r3 -> p169 [p67] | MOV LOAD 
773 | JMP JMP_IMM 
774, r9 -> p153, r8 -> p129, r14 -> p148 [p87] | MOV LOAD 
775, r14 -> p148, r44 -> p161 [p155], r49 -> p173 [p137] | CMP SUB_IMM 
776, r49 -> p173 | J JMP_IMM 
777, r3 -> p169, r44 -> p145 [p161], r49 -> p163 [p173] | TEST AND_IMM 
778, r49 -> p163 | J JMP_IMM 
779, r0 -> p146, r6 -> p154, r0 -> p162 [p146], r49 -> p174 [p163] | ADD ADD 
780, r6 -> p154, r9 -> p153, r14 -> p167 [p148] | LEA LEA 
781, r9 -> p153, r1 -> p101, r45 -> p172 [p136] | CMP LOAD 
782, r45 -> p172, r44 -> p170 [p145], r49 -> p156 [p174] | CMP SUB 
783, r49 -> p156 | J JMP_IMM 
784, r14 -> p167, r9 -> p177 [p153] | MOV ADD 
785, r9 -> p177, r8 -> p129, r14 -> p180 [p167] | MOV LOAD 
786, r14 -> p180, r44 -> p175 [p170], r49 -> p183 [p156] | CMP SUB_IMM 
787, r49 -> p183 | J JMP_IMM 
788, r3 -> p169, r44 -> p182 [p175], r49 -> p45 [p183] | TEST AND_IMM 
789, r49 -> p45 | J JMP_IMM 
790, r0 -> p162, r6 -> p154, r0 -> p184 [p162], r49 -> p185 [p45] | ADD ADD 
791, r6 -> p154, r9 -> p177, r14 -> p187 [p180] | LEA LEA 
792, r9 -> p177, r1 -> p101, r45 -> p135 [p172] | CMP LOAD 
793, r45 -> p135, r44 -> p4 [p182], r49 -> p179 [p185] | CMP SUB 
794, r49 -> p179 | J JMP_IMM 
795, r44 -> p191 [p4] | MOV SAVE_PC 
796, r10 -> p157, r44 -> p191 | MOV STORE 
797 | JMP JMP_IMM 
798, r4 -> p147, r3 -> p181 [p169] | POP LOAD 
799, r4 -> p147, r4 -> p195 [p147] | POP ADD_IMM 
800, r4 -> p195, r14 -> p190 [p187] | POP LOAD 
801, r4 -> p195, r4 -> p188 [p195] | POP ADD_IMM 
802, r4 -> p188, r44 -> p197 [p191] | RET LOAD 
803, r4 -> p188, r4 -> p98 [p188] | RET ADD_IMM 
804, r44 -> p197 | RET JMP_REG 
805, r5 -> p121, r7 -> p193 [p158] | LEA LEA 
806, r7 -> p193, r0 -> p159 [p184] | MOVSX SEXT_DWORD_TO_QWORD 
807, r0 -> p159, r45 -> p168 [p135] | CMP LOAD 
808, r45 -> p168, r44 -> p189 [p197], r49 -> p176 [p179] | CMP SUB 
809, r49 -> p176 | J JMP_IMM 
810, r44 -> p7 [p189] | CALL SAVE_PC 
811, r4 -> p98, r4 -> p143 [p98] | CALL SUB_IMM 
812, r44 -> p7, r4 -> p143 | CALL STORE 
813 | CALL JMP_IMM 
814, r14 -> p190, r4 -> p143 | PUSH STORE 
815, r4 -> p143, r4 -> p208 [p143] | PUSH SUB_IMM 
816, r3 -> p181, r4 -> p208 | PUSH STORE 
817, r4 -> p208, r4 -> p192 [p208] | PUSH SUB_IMM 
818, r7 -> p193, r0 -> p200 [p159] | MOVSX SEXT_DWORD_TO_QWORD 
819, r0 -> p200, r0 -> p200, r1 -> p228 [p101] | LEA LEA 
820, r44 -> p198 [p7] | MOVSX SAVE_PC 
821, r44 -> p198, r44 -> p209 [p198] | MOVSX LOAD 
822, r44 -> p209, r2 -> p201 [p152] | MOVSX SEXT_DWORD_TO_QWORD 
823, r0 -> p200, r6 -> p212 [p154] | MOV ADD 
824, r6 -> p212, r2 -> p201, r6 -> p211 [p212], r49 -> p186 [p176] | SUB SUB 
825, r6 -> p211, r6 -> p166 [p211] | MOVSX SEXT_DWORD_TO_QWORD 
826, r1 -> p228, r2 -> p201, r1 -> p204 [p228], r49 -> p199 [p186] | SUB SUB 
827, r1 -> p204, r1 -> p217 [p204] | MOVSX SEXT_DWORD_TO_QWORD 
828, r1 -> p217, r1 -> p207 [p217] | LEA LEA 
829, r2 -> p201, r7 -> p223 [p193] | MOV LOAD 
830, r0 -> p200, r8 -> p150 [p129] | LEA LEA 
831, r9 -> p124 [p177] | XOR ADD 
832, r44 -> p196 [p209] | MOV SAVE_PC 
833, r44 -> p196, r10 -> p213 [p157] | MOV LOAD 
834, r44 -> p171 [p196] | MOV SAVE_PC 
835, r44 -> p171, r11 -> p218 [p164] | MOV LOAD 
836, r44 -> p224 [p171] | MOV SAVE_PC 
837, r44 -> p224, r3 -> p205 [p181] | MOV LOAD 
838 | JMP JMP_IMM 
839, r9 -> p124, r8 -> p150, r14 -> p222 [p190] | MOV LOAD 
840, r14 -> p222, r44 -> p220 [p224], r49 -> p230 [p199] | CMP SUB_IMM 
841, r49 -> p230 | J JMP_IMM 
842, r3 -> p205, r44 -> p214 [p220], r49 -> p219 [p230] | TEST AND_IMM 
843, r49 -> p219 | J JMP_IMM 
844, r0 -> p200, r6 -> p166, r0 -> p226 [p200], r49 -> p194 [p219] | ADD ADD 
845, r6 -> p166, r9 -> p124, r14 -> p233 [p222] | LEA LEA 
846, r9 -> p124, r1 -> p207, r45 -> p232 [p168] | CMP LOAD 
847, r45 -> p232, r44 -> p238 [p214], r49 -> p242 [p194] | CMP SUB 
848, r49 -> p242 | J JMP_IMM 
849, r14 -> p233, r9 -> p243 [p124] | MOV ADD 
850, r9 -> p243, r8 -> p150, r14 -> p240 [p233] | MOV LOAD 
851, r14 -> p240, r44 -> p114 [p238], r49 -> p231 [p242] | CMP SUB_IMM 
852, r49 -> p231 | J JMP_IMM 
853, r44 -> p206 [p114] | MOV SAVE_PC 
854, r10 -> p213, r44 -> p206 | MOV STORE 
855, r7 -> p223, r14 -> p240, r7 -> p247 [p223], r49 -> p227 [p231] | XOR XOR 
856, r7 -> p247, r44 -> p229 [p206], r49 -> p178 [p227] | TEST AND_IMM 
857, r49 -> p178 | J JMP_IMM 
858, r4 -> p192, r3 -> p241 [p205] | POP LOAD 
859, r4 -> p192, r4 -> p249 [p192] | POP ADD_IMM 
860, r4 -> p249, r14 -> p239 [p240] | POP LOAD 
861, r4 -> p249, r4 -> p245 [p249] | POP ADD_IMM 
862, r4 -> p245, r44 -> p106 [p229] | RET LOAD 
863, r4 -> p245, r4 -> p140 [p245] | RET ADD_IMM 
864, r44 -> p106 | RET JMP_REG 
865, r5 -> p121, r7 -> p44 [p247] | LEA LEA 
866, r7 -> p44, r0 -> p252 [p226] | MOVSX SEXT_DWORD_TO_QWORD 
867, r0 -> p252, r45 -> p254 [p232] | CMP LOAD 
868, r45 -> p254, r44 -> p6 [p106], r49 -> p253 [p178] | CMP SUB 
869, r49 -> p253 | J JMP_IMM 
870, r44 -> p248 [p6] | CALL SAVE_PC 
871, r4 -> p140, r4 -> p236 [p140] | CALL SUB_IMM 
872, r44 -> p248, r4 -> p236 | CALL STORE 
873 | CALL JMP_IMM 
874, r14 -> p239, r4 -> p236 | PUSH STORE 
875, r4 -> p236, r4 -> p251 [p236] | PUSH SUB_IMM 
876, r3 -> p241, r4 -> p251 | PUSH STORE 
877, r4 -> p251, r4 -> p237 [p251] | PUSH SUB_IMM 
878, r7 -> p44, r0 -> p234 [p252] | MOVSX SEXT_DWORD_TO_QWORD 
879, r0 -> p234, r0 -> p234, r1 -> p59 [p207] | LEA LEA 
880, r44 -> p215 [p248] | MOVSX SAVE_PC 
881, r44 -> p215, r44 -> p250 [p215] | MOVSX LOAD 
882, r44 -> p250, r2 -> p12 [p201] | MOVSX SEXT_DWORD_TO_QWORD 
883, r0 -> p234, r6 -> p14 [p166] | MOV ADD 
884, r6 -> p14, r2 -> p12, r6 -> p13 [p14], r49 -> p64 [p253] | SUB SUB 
885, r6 -> p13, r6 -> p86 [p13] | MOVSX SEXT_DWORD_TO_QWORD 
886, r1 -> p59, r2 -> p12, r1 -> p51 [p59], r49 -> p15 [p64] | SUB SUB 
887, r1 -> p51, r1 -> p68 [p51] | MOVSX SEXT_DWORD_TO_QWORD 
888, r1 -> p68, r1 -> p100 [p68] | LEA LEA 
889, r2 -> p12, r7 -> p235 [p44] | MOV LOAD 
890, r0 -> p234, r8 -> p49 [p150] | LEA LEA 
891, r9 -> p0 [p243] | XOR ADD 
892, r44 -> p66 [p250] | MOV SAVE_PC 
893, r44 -> p66, r10 -> p60 [p213] | MOV LOAD 
894, r44 -> p57 [p66] | MOV SAVE_PC 
895, r44 -> p57, r11 -> p221 [p218] | MOV LOAD 
896, r44 -> p74 [p57] | MOV SAVE_PC 
897, r44 -> p74, r3 -> p58 [p241] | MOV LOAD 
898 | JMP JMP_IMM 
899, r9 -> p0, r8 -> p49, r14 -> p75 [p239] | MOV LOAD 
900, r14 -> p75, r44 -> p81 [p74], r49 -> p78 [p15] | CMP SUB_IMM 
901, r49 -> p78 | J JMP_IMM 
902, r44 -> p63 [p81] | MOV SAVE_PC 
903, r10 -> p60, r44 -> p63 | MOV STORE 
904, r7 -> p235, r14 -> p75, r7 -> p216 [p235], r49 -> p70 [p78] | XOR XOR 
905, r7 -> p216, r44 -> p54 [p63], r49 -> p69 [p70] | TEST AND_IMM 
906, r49 -> p69 | J JMP_IMM 
907, r45 -> p72 [p254] | CMP SAVE_PC 
908, r45 -> p72, r45 -> p90 [p72] | CMP LOAD 
909, r45 -> p90, r44 -> p244 [p54], r49 -> p202 [p69] | CMP SUB_IMM 
910, r49 -> p202 | J JMP_IMM 
911, r14 -> p75, r44 -> p84 [p244], r49 -> p50 [p202] | CMP SUB_IMM 
912, r49 -> p50 | J JMP_IMM 
913, r14 -> p75, r1 -> p83 [p100] | LEA LEA 
914, r1 -> p83, r44 -> p92 [p84], r49 -> p56 [p50] | CMP SUB_IMM 
915, r49 -> p56 | J JMP_IMM 
916, r44 -> p5 [p92] | MOV ADD_IMM 
917, r45 -> p79 [p90] | MOV SAVE_PC 
918, r44 -> p5, r45 -> p79 | MOV STORE 
919, r10 -> p60, r1 -> p96 [p83] | MOVSX SEXT_DWORD_TO_QWORD 
920, r1 -> p96, r1 -> p96, r1 -> p94 [p96] | LEA LEA 
921, r44 -> p82 [p5] | MOV SAVE_PC 
922, r44 -> p82, r10 -> p203 [p60] | MOV LOAD 
923, r44 -> p53 [p82] | MOV SAVE_PC 
924, r44 -> p53, r2 -> p52 [p12] | MOV LOAD 
925, r1 -> p94, r2 -> p52, r44 -> p2 [p53] | MOV LEA 
926, r10 -> p203, r44 -> p2 | MOV STORE 
927, r44 -> p77 [p2] | MOVSX SAVE_PC 
928, r44 -> p77, r44 -> p1 [p77] | MOVSX LOAD 
929, r44 -> p1, r1 -> p8 [p94] | MOVSX SEXT_DWORD_TO_QWORD 
930, r1 -> p8, r1 -> p8, r1 -> p95 [p8] | LEA LEA 
931, r44 -> p55 [p1] | MOV SAVE_PC 
932, r44 -> p55, r2 -> p104 [p52] | MOV LOAD 
933, r1 -> p95, r2 -> p104, r44 -> p103 [p55] | MOV LEA 
934, r0 -> p234, r44 -> p103 | MOV STORE 
935, r44 -> p85 [p103] | MOVSX SAVE_PC 
936, r44 -> p85, r44 -> p80 [p85] | MOVSX LOAD 
937, r44 -> p80, r0 -> p110 [p234] | MOVSX SEXT_DWORD_TO_QWORD 
938, r0 -> p110, r0 -> p110, r0 -> p105 [p110] | LEA LEA 
939, r44 -> p255 [p80] | MOV SAVE_PC 
940, r44 -> p255, r1 -> p119 [p95] | MOV LOAD 
941, r0 -> p105, r1 -> p119, r44 -> p91 [p255] | MOV LEA 
942, r14 -> p75, r44 -> p91 | MOV STORE 
943, r44 -> p97 [p91] | MOVSX SAVE_PC 
944, r44 -> p97, r44 -> p65 [p97] | MOVSX LOAD 
945, r44 -> p65, r0 -> p122 [p105] | MOVSX SEXT_DWORD_TO_QWORD 
946, r0 -> p122, r0 -> p122, r0 -> p116 [p122] | LEA LEA 
947, r44 -> p61 [p65] | MOV SAVE_PC 
948, r44 -> p61, r1 -> p3 [p119] | MOV LOAD 
949, r0 -> p116, r1 -> p3, r44 -> p111 [p61] | MOV LEA 
950, r44 -> p111 | MOV STORE 
951, r44 -> p109 [p111] | MOVSX SAVE_PC 
952, r44 -> p109, r44 -> p120 [p109] | MOVSX LOAD 
953, r44 -> p120, r0 -> p108 [p116] | MOVSX SEXT_DWORD_TO_QWORD 
954, r0 -> p108, r0 -> p108, r0 -> p118 [p108] | LEA LEA 
955, r44 -> p99 [p120] | MOV SAVE_PC 
956, r44 -> p99, r1 -> p76 [p3] | MOV LOAD 
957, r0 -> p118, r1 -> p76, r44 -> p73 [p99] | MOV LEA 
958, r44 -> p73 | MOV STORE 
959, r44 -> p113 [p73] | MOVSX SAVE_PC 
960, r44 -> p113, r44 -> p93 [p113] | MOVSX LOAD 
961, r44 -> p93, r0 -> p132 [p118] | MOVSX SEXT_DWORD_TO_QWORD 
962, r0 -> p132, r0 -> p132, r0 -> p130 [p132] | LEA LEA 
963, r44 -> p134 [p93] | MOV SAVE_PC 
964, r44 -> p134, r1 -> p127 [p76] | MOV LOAD 
965, r0 -> p130, r1 -> p127, r44 -> p133 [p134] | MOV LEA 
966, r44 -> p133 | MOV STORE 
967, r44 -> p71 [p133] | INC SAVE_PC 
968, r44 -> p71, r44 -> p125 [p71] | INC LOAD 
969, r44 -> p125, r44 -> p62 [p125] | INC ADD_IMM 
970, r45 -> p89 [p79] | INC SAVE_PC 
971, r44 -> p62, r45 -> p89 | INC STORE 
972, r4 -> p237, r3 -> p123 [p58] | POP LOAD 
973, r4 -> p237, r4 -> p88 [p237] | POP ADD_IMM 
974, r4 -> p88, r14 -> p115 [p75] | POP LOAD 
975, r4 -> p88, r4 -> p139 [p88] | POP ADD_IMM 
976, r4 -> p139, r44 -> p144 [p62] | RET LOAD 
977, r4 -> p139, r4 -> p210 [p139] | RET ADD_IMM 
978, r44 -> p144 | RET JMP_REG 
979 | JMP JMP_IMM 
980, r12 -> p112, r12 -> p225 [p112], r49 -> p142 [p56] | ADD ADD_IMM 
981, r4 -> p210, r45 -> p128 [p89] | CMP LOAD 
982, r15 -> p126, r45 -> p128, r44 -> p107 [p144], r49 -> p141 [p142] | CMP SUB 
983, r49 -> p141 | J JMP_IMM 
984, r44 -> p149 [p107] | MOV SAVE_PC 
985, r44 -> p149, r0 -> p151 [p130] | MOV LOAD 
986, r0 -> p151, r44 -> p102 [p149], r49 -> p131 [p141] | CMP SUB_IMM 
987, r49 -> p131 | J JMP_IMM 
988, r44 -> p246 [p102] | MOV SAVE_PC 
989, r44 -> p246, r1 -> p9 [p127] | MOV LOAD 
990, r1 -> p9, r44 -> p138 [p246], r49 -> p10 [p131] | CMP SUB_IMM 
991, r49 -> p10 | J JMP_IMM 
992, r12 -> p225, r44 -> p165 [p138] | MOVSX LOAD 
993, r44 -> p165, r13 -> p11 [p117] | MOVSX SEXT_DWORD_TO_QWORD 
994, r13 -> p11, r13 -> p11, r44 -> p160 [p165], r49 -> p67 [p10] | TEST AND 
995, r49 -> p67 | J JMP_IMM 
996, r13 -> p11, r5 -> p87 [p121] | MOV ADD 
997, r44 -> p155 [p160] | MOV SAVE_PC 
998, r5 -> p87, r44 -> p155 | MOV STORE 
999, r15 -> p126, r15 -> p137 [p126] | INC ADD_IMM 
1000, r13 -> p11, r1 -> p161 [p9] | MOV LOAD 
Processed 1000 trace lines.
Instructions:
  N Fetched =    		1000
  N Committed =  		1000
Stalls:
  Fetch stalled (ROB full) =    0
  Rename stalled (no PRegs) =   0
IPC: 				1.000
