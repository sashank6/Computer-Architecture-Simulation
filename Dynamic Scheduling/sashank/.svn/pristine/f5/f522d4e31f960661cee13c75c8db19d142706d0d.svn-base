debug mode on
Trace name  				sjeng-1K
Instruction Limit			none
Processor Configuration:
  Machine Width 			4
  Number of Logical Registers 		50
  Number of Physical Registers 		128
  ROB Size 				8
  NOT modeling memory dependences
#: F I D C 	 Reg Mappings [freeMe] | Mop Uop
1: 0 1 2 2, r49 -> p49 | J JMP_IMM 
2: 0 1 5 5, r1 -> p1, r44 -> p50 [p44] | MOVSX LOAD 
3: 0 5 6 6, r44 -> p50, r2 -> p51 [p2] | MOVSX SEXT_DWORD_TO_QWORD 
4: 0 6 7 7, r7 -> p7, r2 -> p51, r6 -> p52 [p6] | LEA LEA 
5: 1 7 8 8, r6 -> p52, r6 -> p53 [p52] | MOVSX SEXT_DWORD_TO_QWORD 
6: 1 8 12 12, r6 -> p53, r6 -> p54 [p53] | MOV LOAD 
7: 1 12 13 13, r6 -> p54, r44 -> p55 [p50], r49 -> p56 [p49] | CMP SUB_IMM 
8: 1 13 14 14, r49 -> p56 | J JMP_IMM 
9: 2 12 13 14, r6 -> p54, r44 -> p57 [p55], r49 -> p58 [p56] | CMP SUB_IMM 
10: 5 13 14 14, r49 -> p58 | J JMP_IMM 
11: 6 7 8 14, r2 -> p51, r8 -> p59 [p8] | MOV ADD 
12: 7 8 9 15, r8 -> p59, r7 -> p7, r8 -> p60 [p59] | LEA LEA 
13: 8 9 10 15, r8 -> p60, r8 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD 
14: 12 13 14 15, r8 -> p61, r8 -> p62 [p61] | LEA LEA 
15: 13 14 15 15, r2 -> p51, r2 -> p63 [p51], r49 -> p64 [p58] | SHL SHL_IMM 
16: 14 15 16 16 | JMP JMP_IMM 
17: 14 15 16 16, r6 -> p54, r44 -> p65 [p57], r49 -> p66 [p64] | CMP SUB_IMM 
18: 14 16 17 17, r49 -> p66 | J JMP_IMM 
19: 14 15 16 17, r6 -> p54, r44 -> p67 [p65], r49 -> p68 [p66] | CMP SUB_IMM 
20: 15 16 17 17, r49 -> p68 | J JMP_IMM 
21: 15 16 17 17, r6 -> p54, r44 -> p69 [p67], r49 -> p70 [p68] | CMP SUB_IMM 
22: 15 17 18 18, r49 -> p70 | J JMP_IMM 
23: 15 16 17 18, r1 -> p1, r1 -> p71 [p1], r49 -> p72 [p70] | ADD ADD_IMM 
24: 16 17 18 18, r0 -> p0, r0 -> p73 [p0] | INC ADD_IMM 
25: 16 18 19 19, r0 -> p73, r44 -> p74 [p69], r49 -> p75 [p72] | CMP SUB_IMM 
26: 17 19 20 20, r49 -> p75 | J JMP_IMM 
27: 17 18 22 22, r1 -> p71, r44 -> p76 [p74] | MOVSX LOAD 
28: 17 22 23 23, r44 -> p76, r2 -> p77 [p63] | MOVSX SEXT_DWORD_TO_QWORD 
29: 17 23 24 24, r7 -> p7, r2 -> p77, r6 -> p78 [p54] | LEA LEA 
30: 18 24 25 25, r6 -> p78, r6 -> p79 [p78] | MOVSX SEXT_DWORD_TO_QWORD 
31: 18 25 29 29, r6 -> p79, r6 -> p80 [p79] | MOV LOAD 
32: 18 29 30 30, r6 -> p80, r44 -> p81 [p76], r49 -> p82 [p75] | CMP SUB_IMM 
33: 19 30 31 31, r49 -> p82 | J JMP_IMM 
34: 20 29 30 31, r6 -> p80, r44 -> p83 [p81], r49 -> p84 [p82] | CMP SUB_IMM 
35: 22 30 31 31, r49 -> p84 | J JMP_IMM 
36: 23 24 25 31, r2 -> p77, r8 -> p85 [p62] | MOV ADD 
37: 24 25 26 32, r8 -> p85, r7 -> p7, r8 -> p86 [p85] | LEA LEA 
38: 25 26 27 32, r8 -> p86, r8 -> p87 [p86] | MOVSX SEXT_DWORD_TO_QWORD 
39: 29 30 31 32, r8 -> p87, r8 -> p88 [p87] | LEA LEA 
40: 30 31 32 32, r2 -> p77, r2 -> p89 [p77], r49 -> p90 [p84] | SHL SHL_IMM 
41: 31 32 33 33 | JMP JMP_IMM 
42: 31 32 33 33, r6 -> p80, r44 -> p91 [p83], r49 -> p92 [p90] | CMP SUB_IMM 
43: 31 33 34 34, r49 -> p92 | J JMP_IMM 
44: 31 32 33 34, r6 -> p80, r44 -> p93 [p91], r49 -> p94 [p92] | CMP SUB_IMM 
45: 32 33 34 34, r49 -> p94 | J JMP_IMM 
46: 32 33 34 34, r6 -> p80, r44 -> p95 [p93], r49 -> p96 [p94] | CMP SUB_IMM 
47: 32 34 35 35, r49 -> p96 | J JMP_IMM 
48: 32 33 34 35, r1 -> p71, r1 -> p97 [p71], r49 -> p98 [p96] | ADD ADD_IMM 
49: 33 34 35 35, r0 -> p73, r0 -> p99 [p73] | INC ADD_IMM 
50: 33 35 36 36, r0 -> p99, r44 -> p100 [p95], r49 -> p101 [p98] | CMP SUB_IMM 
51: 34 36 37 37, r49 -> p101 | J JMP_IMM 
52: 34 35 39 39, r1 -> p97, r44 -> p102 [p100] | MOVSX LOAD 
53: 34 39 40 40, r44 -> p102, r2 -> p103 [p89] | MOVSX SEXT_DWORD_TO_QWORD 
54: 34 40 41 41, r7 -> p7, r2 -> p103, r6 -> p104 [p80] | LEA LEA 
55: 35 41 42 42, r6 -> p104, r6 -> p105 [p104] | MOVSX SEXT_DWORD_TO_QWORD 
56: 35 42 46 46, r6 -> p105, r6 -> p106 [p105] | MOV LOAD 
57: 35 46 47 47, r6 -> p106, r44 -> p107 [p102], r49 -> p108 [p101] | CMP SUB_IMM 
58: 36 47 48 48, r49 -> p108 | J JMP_IMM 
59: 37 46 47 48, r6 -> p106, r44 -> p109 [p107], r49 -> p110 [p108] | CMP SUB_IMM 
60: 39 47 48 48, r49 -> p110 | J JMP_IMM 
61: 40 41 42 48, r2 -> p103, r8 -> p111 [p88] | MOV ADD 
62: 41 42 43 49, r8 -> p111, r7 -> p7, r8 -> p112 [p111] | LEA LEA 
63: 42 43 44 49, r8 -> p112, r8 -> p113 [p112] | MOVSX SEXT_DWORD_TO_QWORD 
64: 46 47 48 49, r8 -> p113, r8 -> p114 [p113] | LEA LEA 
65: 47 48 49 49, r2 -> p103, r2 -> p115 [p103], r49 -> p116 [p110] | SHL SHL_IMM 
66: 48 49 50 50 | JMP JMP_IMM 
67: 48 49 50 50, r6 -> p106, r44 -> p117 [p109], r49 -> p118 [p116] | CMP SUB_IMM 
68: 48 50 51 51, r49 -> p118 | J JMP_IMM 
69: 48 49 50 51, r6 -> p106, r44 -> p119 [p117], r49 -> p120 [p118] | CMP SUB_IMM 
70: 49 50 51 51, r49 -> p120 | J JMP_IMM 
71: 49 50 51 51, r6 -> p106, r44 -> p121 [p119], r49 -> p122 [p120] | CMP SUB_IMM 
72: 49 51 52 52, r49 -> p122 | J JMP_IMM 
73: 49 50 51 52, r1 -> p97, r1 -> p123 [p97], r49 -> p124 [p122] | ADD ADD_IMM 
74: 50 51 52 52, r0 -> p99, r0 -> p125 [p99] | INC ADD_IMM 
75: 50 52 53 53, r0 -> p125, r44 -> p126 [p121], r49 -> p127 [p124] | CMP SUB_IMM 
76: 51 53 54 54, r49 -> p127 | J JMP_IMM 
77: 51 52 53 54, r0 -> p44 [p125] | XOR ADD 
78: 51 52 53 54, r1 -> p2 [p123] | MOV ADD_IMM 
79: 51 52 53 54 | JMP JMP_IMM 
80: 52 53 54 55, r0 -> p44, r44 -> p6 [p126], r49 -> p52 [p127] | CMP SUB_IMM 
81: 52 54 55 55, r49 -> p52 | J JMP_IMM 
82: 52 53 54 55, r7 -> p7, r2 -> p53 [p115] | MOV ADD 
83: 53 54 58 58, r1 -> p2, r44 -> p50 [p6] | ADD LOAD 
84: 54 58 59 59, r2 -> p53, r44 -> p50, r2 -> p49 [p53], r49 -> p55 [p52] | ADD ADD 
85: 54 59 60 60, r2 -> p49, r2 -> p56 [p49] | MOVSX SEXT_DWORD_TO_QWORD 
86: 54 60 64 64, r2 -> p56, r45 -> p8 [p45] | CMP LOAD 
87: 54 64 65 65, r45 -> p8, r44 -> p59 [p50], r49 -> p60 [p55] | CMP SUB_IMM 
88: 55 65 66 66, r49 -> p60 | J JMP_IMM 
89: 55 56 57 66, r1 -> p2, r1 -> p61 [p2], r49 -> p51 [p60] | ADD ADD_IMM 
90: 55 56 57 66, r0 -> p44, r0 -> p58 [p44] | INC ADD_IMM 
91: 58 59 60 66, r0 -> p58, r44 -> p57 [p59], r49 -> p64 [p51] | CMP SUB_IMM 
92: 59 60 61 67, r49 -> p64 | J JMP_IMM 
93: 60 61 62 67, r7 -> p7, r2 -> p65 [p56] | MOV ADD 
94: 64 65 69 69, r1 -> p61, r44 -> p66 [p57] | ADD LOAD 
95: 65 69 70 70, r2 -> p65, r44 -> p66, r2 -> p67 [p65], r49 -> p68 [p64] | ADD ADD 
96: 66 70 71 71, r2 -> p67, r2 -> p1 [p67] | MOVSX SEXT_DWORD_TO_QWORD 
97: 66 71 75 75, r2 -> p1, r45 -> p70 [p8] | CMP LOAD 
98: 66 75 76 76, r45 -> p70, r44 -> p0 [p66], r49 -> p69 [p68] | CMP SUB_IMM 
99: 66 76 77 77, r49 -> p69 | J JMP_IMM 
100: 67 68 69 77, r1 -> p61, r1 -> p72 [p61], r49 -> p74 [p69] | ADD ADD_IMM 
101: 67 68 69 77, r0 -> p58, r0 -> p63 [p58] | INC ADD_IMM 
102: 69 70 71 77, r0 -> p63, r44 -> p54 [p0], r49 -> p78 [p74] | CMP SUB_IMM 
103: 70 71 72 78, r49 -> p78 | J JMP_IMM 
104: 71 72 73 78, r7 -> p7, r2 -> p79 [p1] | MOV ADD 
105: 75 76 80 80, r1 -> p72, r44 -> p76 [p54] | ADD LOAD 
106: 76 80 81 81, r2 -> p79, r44 -> p76, r2 -> p75 [p79], r49 -> p81 [p78] | ADD ADD 
107: 77 81 82 82, r2 -> p75, r2 -> p82 [p75] | MOVSX SEXT_DWORD_TO_QWORD 
108: 77 82 86 86, r2 -> p82, r45 -> p62 [p70] | CMP LOAD 
109: 77 86 87 87, r45 -> p62, r44 -> p85 [p76], r49 -> p86 [p81] | CMP SUB_IMM 
110: 77 87 88 88, r49 -> p86 | J JMP_IMM 
111: 78 79 80 88, r1 -> p72, r1 -> p87 [p72], r49 -> p77 [p86] | ADD ADD_IMM 
112: 78 79 80 88, r0 -> p63, r0 -> p84 [p63] | INC ADD_IMM 
113: 80 81 82 88, r0 -> p84, r44 -> p83 [p85], r49 -> p90 [p77] | CMP SUB_IMM 
114: 81 82 83 89, r49 -> p90 | J JMP_IMM 
115: 82 83 84 89, r7 -> p7, r2 -> p91 [p82] | MOV ADD 
116: 86 87 91 91, r1 -> p87, r44 -> p92 [p83] | ADD LOAD 
117: 87 91 92 92, r2 -> p91, r44 -> p92, r2 -> p93 [p91], r49 -> p94 [p90] | ADD ADD 
118: 88 92 93 93, r2 -> p93, r2 -> p71 [p93] | MOVSX SEXT_DWORD_TO_QWORD 
119: 88 93 97 97, r2 -> p71, r45 -> p96 [p62] | CMP LOAD 
120: 88 97 98 98, r45 -> p96, r44 -> p73 [p92], r49 -> p95 [p94] | CMP SUB_IMM 
121: 88 98 99 99, r49 -> p95 | J JMP_IMM 
122: 89 90 91 99, r1 -> p87, r1 -> p98 [p87], r49 -> p100 [p95] | ADD ADD_IMM 
123: 89 90 91 99, r0 -> p84, r0 -> p89 [p84] | INC ADD_IMM 
124: 91 92 93 99, r0 -> p89, r44 -> p80 [p73], r49 -> p104 [p100] | CMP SUB_IMM 
125: 92 93 94 100, r49 -> p104 | J JMP_IMM 
126: 93 94 95 100, r7 -> p7, r2 -> p105 [p71] | MOV ADD 
127: 97 98 102 102, r1 -> p98, r44 -> p102 [p80] | ADD LOAD 
128: 98 102 103 103, r2 -> p105, r44 -> p102, r2 -> p101 [p105], r49 -> p107 [p104] | ADD ADD 
129: 99 103 104 104, r2 -> p101, r2 -> p108 [p101] | MOVSX SEXT_DWORD_TO_QWORD 
130: 99 104 108 108, r2 -> p108, r45 -> p88 [p96] | CMP LOAD 
131: 99 108 109 109, r45 -> p88, r44 -> p111 [p102], r49 -> p112 [p107] | CMP SUB_IMM 
132: 99 109 110 110, r49 -> p112 | J JMP_IMM 
133: 100 101 102 110, r1 -> p98, r1 -> p113 [p98], r49 -> p103 [p112] | ADD ADD_IMM 
134: 100 101 102 110, r0 -> p89, r0 -> p110 [p89] | INC ADD_IMM 
135: 102 103 104 110, r0 -> p110, r44 -> p109 [p111], r49 -> p116 [p103] | CMP SUB_IMM 
136: 103 104 105 111, r49 -> p116 | J JMP_IMM 
137: 104 105 106 111, r7 -> p7, r2 -> p117 [p108] | MOV ADD 
138: 108 109 113 113, r1 -> p113, r44 -> p118 [p109] | ADD LOAD 
139: 109 113 114 114, r2 -> p117, r44 -> p118, r2 -> p119 [p117], r49 -> p120 [p116] | ADD ADD 
140: 110 114 115 115, r2 -> p119, r2 -> p97 [p119] | MOVSX SEXT_DWORD_TO_QWORD 
141: 110 115 119 119, r2 -> p97, r45 -> p122 [p88] | CMP LOAD 
142: 110 119 120 120, r45 -> p122, r44 -> p99 [p118], r49 -> p121 [p120] | CMP SUB_IMM 
143: 110 120 121 121, r49 -> p121 | J JMP_IMM 
144: 111 112 113 121, r1 -> p113, r1 -> p124 [p113], r49 -> p125 [p121] | ADD ADD_IMM 
145: 111 112 113 121, r0 -> p110, r0 -> p123 [p110] | INC ADD_IMM 
146: 113 114 115 121, r0 -> p123, r44 -> p126 [p99], r49 -> p127 [p125] | CMP SUB_IMM 
147: 114 115 116 122, r49 -> p127 | J JMP_IMM 
148: 115 116 117 122, r7 -> p7, r2 -> p115 [p97] | MOV ADD 
149: 119 120 124 124, r1 -> p124, r44 -> p6 [p126] | ADD LOAD 
150: 120 124 125 125, r2 -> p115, r44 -> p6, r2 -> p53 [p115], r49 -> p52 [p127] | ADD ADD 
151: 121 125 126 126, r2 -> p53, r2 -> p49 [p53] | MOVSX SEXT_DWORD_TO_QWORD 
152: 121 126 130 130, r2 -> p49, r45 -> p45 [p122] | CMP LOAD 
153: 121 130 131 131, r45 -> p45, r44 -> p50 [p6], r49 -> p55 [p52] | CMP SUB_IMM 
154: 121 131 132 132, r49 -> p55 | J JMP_IMM 
155: 122 123 124 132, r1 -> p124, r1 -> p2 [p124], r49 -> p60 [p55] | ADD ADD_IMM 
156: 122 123 124 132, r0 -> p123, r0 -> p44 [p123] | INC ADD_IMM 
157: 124 125 126 132, r0 -> p44, r44 -> p59 [p50], r49 -> p51 [p60] | CMP SUB_IMM 
158: 125 126 127 133, r49 -> p51 | J JMP_IMM 
159: 126 127 128 133, r7 -> p7, r2 -> p56 [p49] | MOV ADD 
160: 130 131 135 135, r1 -> p2, r44 -> p57 [p59] | ADD LOAD 
161: 131 135 136 136, r2 -> p56, r44 -> p57, r2 -> p65 [p56], r49 -> p64 [p51] | ADD ADD 
162: 132 136 137 137, r2 -> p65, r2 -> p67 [p65] | MOVSX SEXT_DWORD_TO_QWORD 
163: 132 137 141 141, r2 -> p67, r45 -> p8 [p45] | CMP LOAD 
164: 132 141 142 142, r45 -> p8, r44 -> p66 [p57], r49 -> p68 [p64] | CMP SUB_IMM 
165: 132 142 143 143, r49 -> p68 | J JMP_IMM 
166: 133 134 135 143, r1 -> p2, r1 -> p61 [p2], r49 -> p69 [p68] | ADD ADD_IMM 
167: 133 134 135 143, r0 -> p44, r0 -> p58 [p44] | INC ADD_IMM 
168: 135 136 137 143, r0 -> p58, r44 -> p0 [p66], r49 -> p74 [p69] | CMP SUB_IMM 
169: 136 137 138 144, r49 -> p74 | J JMP_IMM 
170: 137 138 139 144, r0 -> p1 [p58] | XOR ADD 
171: 141 142 143 144, r1 -> p54 [p61] | MOV ADD_IMM 
172: 142 143 144 144 | JMP JMP_IMM 
173: 143 144 145 145, r0 -> p1, r44 -> p79 [p0], r49 -> p78 [p74] | CMP SUB_IMM 
174: 143 145 146 146, r49 -> p78 | J JMP_IMM 
175: 143 144 148 148, r1 -> p54, r44 -> p75 [p79] | MOVSX LOAD 
176: 143 148 149 149, r44 -> p75, r2 -> p70 [p67] | MOVSX SEXT_DWORD_TO_QWORD 
177: 144 149 150 150, r7 -> p7, r2 -> p70, r6 -> p76 [p106] | LEA LEA 
178: 144 150 151 151, r6 -> p76, r6 -> p81 [p76] | MOVSX SEXT_DWORD_TO_QWORD 
179: 144 151 155 155, r6 -> p81, r6 -> p72 [p81] | MOV LOAD 
180: 144 155 156 156, r6 -> p72, r44 -> p86 [p75], r49 -> p63 [p78] | CMP SUB_IMM 
181: 145 156 157 157, r49 -> p63 | J JMP_IMM 
182: 146 149 150 157, r2 -> p70, r8 -> p85 [p114] | MOV ADD 
183: 148 150 151 157, r8 -> p85, r7 -> p7, r8 -> p77 [p85] | LEA LEA 
184: 149 151 152 157, r8 -> p77, r8 -> p82 [p77] | MOVSX SEXT_DWORD_TO_QWORD 
185: 150 152 153 158, r8 -> p82, r8 -> p83 [p82] | LEA LEA 
186: 151 152 153 158, r2 -> p70, r2 -> p91 [p70], r49 -> p90 [p63] | SHL SHL_IMM 
187: 155 156 157 158 | JMP JMP_IMM 
188: 156 157 158 158, r6 -> p72, r44 -> p93 [p86], r49 -> p62 [p90] | CMP SUB_IMM 
189: 157 158 159 159, r49 -> p62 | J JMP_IMM 
190: 157 158 159 159, r6 -> p72, r44 -> p92 [p93], r49 -> p94 [p62] | CMP SUB_IMM 
191: 157 159 160 160, r49 -> p94 | J JMP_IMM 
192: 157 158 159 160, r6 -> p72, r44 -> p87 [p92], r49 -> p95 [p94] | CMP SUB_IMM 
193: 158 159 160 160, r49 -> p95 | J JMP_IMM 
194: 158 159 160 160, r1 -> p54, r1 -> p84 [p54], r49 -> p73 [p95] | ADD ADD_IMM 
195: 158 159 160 161, r0 -> p1, r0 -> p100 [p1] | INC ADD_IMM 
196: 158 160 161 161, r0 -> p100, r44 -> p71 [p87], r49 -> p80 [p73] | CMP SUB_IMM 
197: 159 161 162 162, r49 -> p80 | J JMP_IMM 
198: 159 160 164 164, r1 -> p84, r44 -> p105 [p71] | MOVSX LOAD 
199: 160 164 165 165, r44 -> p105, r2 -> p104 [p91] | MOVSX SEXT_DWORD_TO_QWORD 
200: 160 165 166 166, r7 -> p7, r2 -> p104, r6 -> p101 [p72] | LEA LEA 
201: 160 166 167 167, r6 -> p101, r6 -> p96 [p101] | MOVSX SEXT_DWORD_TO_QWORD 
202: 160 167 171 171, r6 -> p96, r6 -> p102 [p96] | MOV LOAD 
203: 161 171 172 172, r6 -> p102, r44 -> p107 [p105], r49 -> p98 [p80] | CMP SUB_IMM 
204: 161 172 173 173, r49 -> p98 | J JMP_IMM 
205: 162 165 166 173, r2 -> p104, r8 -> p112 [p83] | MOV ADD 
206: 164 166 167 173, r8 -> p112, r7 -> p7, r8 -> p89 [p112] | LEA LEA 
207: 165 167 168 173, r8 -> p89, r8 -> p111 [p89] | MOVSX SEXT_DWORD_TO_QWORD 
208: 166 168 169 174, r8 -> p111, r8 -> p103 [p111] | LEA LEA 
209: 167 168 169 174, r2 -> p104, r2 -> p108 [p104], r49 -> p109 [p98] | SHL SHL_IMM 
210: 171 172 173 174 | JMP JMP_IMM 
211: 172 173 174 174, r6 -> p102, r44 -> p117 [p107], r49 -> p116 [p109] | CMP SUB_IMM 
212: 173 174 175 175, r49 -> p116 | J JMP_IMM 
213: 173 174 175 175, r6 -> p102, r44 -> p119 [p117], r49 -> p88 [p116] | CMP SUB_IMM 
214: 173 175 176 176, r49 -> p88 | J JMP_IMM 
215: 173 174 175 176, r6 -> p102, r44 -> p118 [p119], r49 -> p120 [p88] | CMP SUB_IMM 
216: 174 175 176 176, r49 -> p120 | J JMP_IMM 
217: 174 175 179 179, r8 -> p103, r6 -> p113 [p102] | MOV LOAD 
218: 174 175 176 179, r8 -> p103, r2 -> p108, r8 -> p121 [p103], r49 -> p110 [p120] | ADD ADD 
219: 174 179 180 180, r6 -> p113, r44 -> p99 [p118], r49 -> p125 [p110] | CMP SUB_IMM 
220: 175 180 181 181, r49 -> p125 | J JMP_IMM 
221: 175 179 180 181, r6 -> p113, r44 -> p97 [p99], r49 -> p126 [p125] | CMP SUB_IMM 
222: 176 180 181 181, r49 -> p126 | J JMP_IMM 
223: 176 179 180 181, r6 -> p113, r44 -> p115 [p97], r49 -> p127 [p126] | CMP SUB_IMM 
224: 176 180 181 182, r49 -> p127 | J JMP_IMM 
225: 179 180 184 184, r8 -> p121, r6 -> p53 [p113] | MOV LOAD 
226: 179 181 182 184, r8 -> p121, r2 -> p108, r8 -> p122 [p121], r49 -> p6 [p127] | ADD ADD 
227: 180 184 185 185, r6 -> p53, r44 -> p52 [p115], r49 -> p124 [p6] | CMP SUB_IMM 
228: 181 185 186 186, r49 -> p124 | J JMP_IMM 
229: 181 184 185 186, r6 -> p53, r44 -> p55 [p52], r49 -> p123 [p124] | CMP SUB_IMM 
230: 181 185 186 186, r49 -> p123 | J JMP_IMM 
231: 181 184 185 186, r6 -> p53, r44 -> p50 [p55], r49 -> p60 [p123] | CMP SUB_IMM 
232: 182 185 186 187, r49 -> p60 | J JMP_IMM 
233: 184 185 186 187, r1 -> p84, r1 -> p49 [p84], r49 -> p59 [p60] | ADD ADD_IMM 
234: 184 186 187 187, r0 -> p100, r0 -> p56 [p100] | INC ADD_IMM 
235: 185 187 188 188, r0 -> p56, r44 -> p51 [p50], r49 -> p65 [p59] | CMP SUB_IMM 
236: 186 188 189 189, r49 -> p65 | J JMP_IMM 
237: 186 187 191 191, r1 -> p49, r44 -> p45 [p51] | MOVSX LOAD 
238: 186 191 192 192, r44 -> p45, r2 -> p57 [p108] | MOVSX SEXT_DWORD_TO_QWORD 
239: 186 192 193 193, r7 -> p7, r2 -> p57, r6 -> p64 [p53] | LEA LEA 
240: 187 193 194 194, r6 -> p64, r6 -> p2 [p64] | MOVSX SEXT_DWORD_TO_QWORD 
241: 187 194 198 198, r6 -> p2, r6 -> p68 [p2] | MOV LOAD 
242: 187 198 199 199, r6 -> p68, r44 -> p44 [p45], r49 -> p66 [p65] | CMP SUB_IMM 
243: 188 199 200 200, r49 -> p66 | J JMP_IMM 
244: 189 192 193 200, r2 -> p57, r8 -> p69 [p122] | MOV ADD 
245: 191 193 194 200, r8 -> p69, r7 -> p7, r8 -> p58 [p69] | LEA LEA 
246: 192 194 195 200, r8 -> p58, r8 -> p61 [p58] | MOVSX SEXT_DWORD_TO_QWORD 
247: 193 195 196 201, r8 -> p61, r8 -> p0 [p61] | LEA LEA 
248: 194 195 196 201, r2 -> p57, r2 -> p74 [p57], r49 -> p79 [p66] | SHL SHL_IMM 
249: 198 199 200 201 | JMP JMP_IMM 
250: 199 200 201 201, r6 -> p68, r44 -> p67 [p44], r49 -> p106 [p79] | CMP SUB_IMM 
251: 200 201 202 202, r49 -> p106 | J JMP_IMM 
252: 200 201 202 202, r6 -> p68, r44 -> p76 [p67], r49 -> p81 [p106] | CMP SUB_IMM 
253: 200 202 203 203, r49 -> p81 | J JMP_IMM 
254: 200 201 202 203, r6 -> p68, r44 -> p75 [p76], r49 -> p78 [p81] | CMP SUB_IMM 
255: 201 202 203 203, r49 -> p78 | J JMP_IMM 
256: 201 202 206 206, r8 -> p0, r6 -> p114 [p68] | MOV LOAD 
257: 201 202 203 206, r8 -> p0, r2 -> p74, r8 -> p85 [p0], r49 -> p77 [p78] | ADD ADD 
258: 201 206 207 207, r6 -> p114, r44 -> p82 [p75], r49 -> p70 [p77] | CMP SUB_IMM 
259: 202 207 208 208, r49 -> p70 | J JMP_IMM 
260: 202 206 207 208, r6 -> p114, r44 -> p63 [p82], r49 -> p86 [p70] | CMP SUB_IMM 
261: 203 207 208 208, r49 -> p86 | J JMP_IMM 
262: 203 206 207 208, r6 -> p114, r44 -> p90 [p63], r49 -> p93 [p86] | CMP SUB_IMM 
263: 203 207 208 209, r49 -> p93 | J JMP_IMM 
264: 206 207 211 211, r8 -> p85, r6 -> p62 [p114] | MOV LOAD 
265: 206 208 209 211, r8 -> p85, r2 -> p74, r8 -> p92 [p85], r49 -> p94 [p93] | ADD ADD 
266: 207 211 212 212, r6 -> p62, r44 -> p54 [p90], r49 -> p95 [p94] | CMP SUB_IMM 
267: 208 212 213 213, r49 -> p95 | J JMP_IMM 
268: 208 211 212 213, r6 -> p62, r44 -> p1 [p54], r49 -> p87 [p95] | CMP SUB_IMM 
269: 208 212 213 213, r49 -> p87 | J JMP_IMM 
270: 208 211 212 213, r6 -> p62, r44 -> p73 [p1], r49 -> p71 [p87] | CMP SUB_IMM 
271: 209 212 213 214, r49 -> p71 | J JMP_IMM 
272: 211 212 213 214, r1 -> p49, r1 -> p91 [p49], r49 -> p72 [p71] | ADD ADD_IMM 
273: 211 213 214 214, r0 -> p56, r0 -> p101 [p56] | INC ADD_IMM 
274: 212 214 215 215, r0 -> p101, r44 -> p96 [p73], r49 -> p105 [p72] | CMP SUB_IMM 
275: 213 215 216 216, r49 -> p105 | J JMP_IMM 
276: 213 214 218 218, r1 -> p91, r44 -> p80 [p96] | MOVSX LOAD 
277: 213 218 219 219, r44 -> p80, r2 -> p83 [p74] | MOVSX SEXT_DWORD_TO_QWORD 
278: 213 219 220 220, r7 -> p7, r2 -> p83, r6 -> p112 [p62] | LEA LEA 
279: 214 220 221 221, r6 -> p112, r6 -> p89 [p112] | MOVSX SEXT_DWORD_TO_QWORD 
280: 214 221 225 225, r6 -> p89, r6 -> p111 [p89] | MOV LOAD 
281: 214 225 226 226, r6 -> p111, r44 -> p104 [p80], r49 -> p98 [p105] | CMP SUB_IMM 
282: 215 226 227 227, r49 -> p98 | J JMP_IMM 
283: 216 219 220 227, r2 -> p83, r8 -> p107 [p92] | MOV ADD 
284: 218 220 221 227, r8 -> p107, r7 -> p7, r8 -> p109 [p107] | LEA LEA 
285: 219 221 222 227, r8 -> p109, r8 -> p117 [p109] | MOVSX SEXT_DWORD_TO_QWORD 
286: 220 222 223 228, r8 -> p117, r8 -> p116 [p117] | LEA LEA 
287: 221 222 223 228, r2 -> p83, r2 -> p119 [p83], r49 -> p88 [p98] | SHL SHL_IMM 
288: 225 226 227 228 | JMP JMP_IMM 
289: 226 227 228 228, r6 -> p111, r44 -> p102 [p104], r49 -> p103 [p88] | CMP SUB_IMM 
290: 227 228 229 229, r49 -> p103 | J JMP_IMM 
291: 227 228 229 229, r6 -> p111, r44 -> p120 [p102], r49 -> p118 [p103] | CMP SUB_IMM 
292: 227 229 230 230, r49 -> p118 | J JMP_IMM 
293: 227 228 229 230, r6 -> p111, r44 -> p110 [p120], r49 -> p99 [p118] | CMP SUB_IMM 
294: 228 229 230 230, r49 -> p99 | J JMP_IMM 
295: 228 229 233 233, r8 -> p116, r6 -> p125 [p111] | MOV LOAD 
296: 228 229 230 233, r8 -> p116, r2 -> p119, r8 -> p97 [p116], r49 -> p126 [p99] | ADD ADD 
297: 228 233 234 234, r6 -> p125, r44 -> p113 [p110], r49 -> p121 [p126] | CMP SUB_IMM 
298: 229 234 235 235, r49 -> p121 | J JMP_IMM 
299: 229 233 234 235, r6 -> p125, r44 -> p127 [p113], r49 -> p115 [p121] | CMP SUB_IMM 
300: 230 234 235 235, r49 -> p115 | J JMP_IMM 
301: 230 233 234 235, r6 -> p125, r44 -> p6 [p127], r49 -> p52 [p115] | CMP SUB_IMM 
302: 230 234 235 236, r49 -> p52 | J JMP_IMM 
303: 233 234 238 238, r8 -> p97, r6 -> p124 [p125] | MOV LOAD 
304: 233 235 236 238, r8 -> p97, r2 -> p119, r8 -> p55 [p97], r49 -> p123 [p52] | ADD ADD 
305: 234 238 239 239, r6 -> p124, r44 -> p84 [p6], r49 -> p60 [p123] | CMP SUB_IMM 
306: 235 239 240 240, r49 -> p60 | J JMP_IMM 
307: 235 238 239 240, r6 -> p124, r44 -> p100 [p84], r49 -> p50 [p60] | CMP SUB_IMM 
308: 235 239 240 240, r49 -> p50 | J JMP_IMM 
309: 235 238 239 240, r6 -> p124, r44 -> p59 [p100], r49 -> p51 [p50] | CMP SUB_IMM 
310: 236 239 240 241, r49 -> p51 | J JMP_IMM 
311: 238 239 243 243, r8 -> p55, r6 -> p108 [p124] | MOV LOAD 
312: 238 240 241 243, r8 -> p55, r2 -> p119, r8 -> p53 [p55], r49 -> p64 [p51] | ADD ADD 
313: 239 243 244 244, r6 -> p108, r44 -> p2 [p59], r49 -> p45 [p64] | CMP SUB_IMM 
314: 240 244 245 245, r49 -> p45 | J JMP_IMM 
315: 240 243 244 245, r6 -> p108, r44 -> p65 [p2], r49 -> p122 [p45] | CMP SUB_IMM 
316: 240 244 245 245, r49 -> p122 | J JMP_IMM 
317: 240 243 244 245, r6 -> p108, r44 -> p69 [p65], r49 -> p58 [p122] | CMP SUB_IMM 
318: 241 244 245 246, r49 -> p58 | J JMP_IMM 
319: 243 244 245 246, r1 -> p91, r1 -> p61 [p91], r49 -> p57 [p58] | ADD ADD_IMM 
320: 243 245 246 246, r0 -> p101, r0 -> p66 [p101] | INC ADD_IMM 
321: 244 246 247 247, r0 -> p66, r44 -> p44 [p69], r49 -> p79 [p57] | CMP SUB_IMM 
322: 245 247 248 248, r49 -> p79 | J JMP_IMM 
323: 245 246 247 248, r0 -> p67 [p66] | XOR ADD 
324: 245 246 250 250, r4 -> p4, r44 -> p106 [p44] | RET LOAD 
325: 245 246 247 250, r4 -> p4, r4 -> p76 [p4] | RET ADD_IMM 
326: 246 250 251 251, r44 -> p106 | RET JMP_REG 
327: 246 247 248 251, r0 -> p67, r0 -> p67, r44 -> p81 [p106], r49 -> p68 [p79] | TEST AND 
328: 246 247 248 251, r0 -> p0 [p67] | SET ADD 
329: 247 248 249 251, r49 -> p68, r0 -> p78 [p0] | SET ADD_IMM 
330: 248 249 250 252, r0 -> p78, r0 -> p75 [p78] | MOVZX ZEXT_BYTE_TO_DWORD 
331: 248 249 250 252, r4 -> p76, r4 -> p77 [p76], r49 -> p82 [p68] | ADD ADD_IMM 
332: 250 251 255 255, r4 -> p77, r44 -> p70 [p81] | RET LOAD 
333: 250 251 252 255, r4 -> p77, r4 -> p63 [p77] | RET ADD_IMM 
334: 251 255 256 256, r44 -> p70 | RET JMP_REG 
335: 251 252 253 256, r0 -> p75, r0 -> p75, r44 -> p86 [p70], r49 -> p114 [p82] | TEST AND 
336: 251 253 254 256, r49 -> p114 | J JMP_IMM 
337: 251 252 253 256, r4 -> p63, r0 -> p85 [p75] | LEA LEA 
338: 252 253 254 257, r0 -> p85, r7 -> p93 [p7] | MOV ADD 
339: 252 253 254 257, r13 -> p13, r6 -> p90 [p108] | MOV ADD 
340: 255 256 257 257, r44 -> p94 [p86] | CALL SAVE_PC 
341: 255 256 257 257, r4 -> p63, r4 -> p54 [p63] | CALL SUB_IMM 
342: 256 257 258 258, r44 -> p94, r4 -> p54 | CALL STORE 
343: 256 257 258 258 | CALL JMP_IMM 
344: 256 257 258 258, r4 -> p54, r4 -> p95 [p54], r49 -> p1 [p114] | SUB SUB_IMM 
345: 256 257 258 258, r45 -> p87 [p8] | CMP SAVE_PC 
346: 257 258 262 262, r45 -> p87, r45 -> p49 [p87] | CMP LOAD 
347: 257 262 263 263, r45 -> p49, r44 -> p71 [p94], r49 -> p56 [p1] | CMP SUB_IMM 
348: 257 263 264 264, r49 -> p56 | J JMP_IMM 
349: 257 258 259 264, r6 -> p90, r0 -> p73 [p85] | MOVSX SEXT_DWORD_TO_QWORD 
350: 258 259 260 264, r0 -> p73, r0 -> p73, r1 -> p72 [p61] | LEA LEA 
351: 258 260 264 264, r1 -> p72, r7 -> p93, r44 -> p96 [p71] | MOVSX LOAD 
352: 258 264 265 265, r44 -> p96, r2 -> p74 [p119] | MOVSX SEXT_DWORD_TO_QWORD 
353: 258 260 264 265, r1 -> p72, r7 -> p93, r44 -> p62 [p96] | MOVSX LOAD 
354: 262 264 265 265, r44 -> p62, r1 -> p112 [p72] | MOVSX SEXT_DWORD_TO_QWORD 
355: 263 265 269 269, r1 -> p112, r6 -> p89 [p90] | MOV LOAD 
356: 264 265 266 269, r45 -> p80 [p49] | CMP SAVE_PC 
357: 264 266 270 270, r45 -> p80, r45 -> p105 [p80] | CMP LOAD 
358: 264 270 271 271, r45 -> p105, r44 -> p92 [p62], r49 -> p107 [p56] | CMP SUB_IMM 
359: 264 271 272 272, r49 -> p107 | J JMP_IMM 
360: 265 269 270 272, r6 -> p89, r6 -> p109 [p89], r49 -> p117 [p107] | ADD ADD_IMM 
361: 265 270 271 272, r6 -> p109, r44 -> p83 [p92], r49 -> p98 [p117] | CMP SUB_IMM 
362: 265 271 272 272, r49 -> p98 | J JMP_IMM 
363: 269 270 274 274, r6 -> p109, r44 -> p104 [p83] | JMP LOAD 
364: 269 274 275 275, r44 -> p104 | JMP JMP_REG 
365: 270 271 272 275, r1 -> p112, r6 -> p88 [p109] | LEA LEA 
366: 271 272 273 275, r6 -> p88, r0 -> p102 [p73] | MOVSX SEXT_DWORD_TO_QWORD 
367: 272 273 277 277, r0 -> p102, r45 -> p103 [p105] | CMP LOAD 
368: 272 277 278 278, r45 -> p103, r44 -> p120 [p104], r49 -> p118 [p98] | CMP SUB_IMM 
369: 272 278 279 279, r49 -> p118 | J JMP_IMM 
370: 272 273 274 279, r1 -> p112, r1 -> p111 [p112], r49 -> p116 [p118] | ADD ADD_IMM 
371: 274 275 276 279, r1 -> p111, r0 -> p99 [p102] | MOVSX SEXT_DWORD_TO_QWORD 
372: 275 276 280 280, r0 -> p99, r45 -> p110 [p103] | CMP LOAD 
373: 275 280 281 281, r45 -> p110, r44 -> p126 [p120], r49 -> p113 [p116] | CMP SUB_IMM 
374: 275 281 282 282, r49 -> p113 | J JMP_IMM 
375: 277 278 279 282, r2 -> p74, r2 -> p74, r44 -> p121 [p126], r49 -> p127 [p113] | TEST AND 
376: 278 279 280 282, r49 -> p127 | J JMP_IMM 
377: 279 280 281 282, r44 -> p115 [p121] | MOVSX SAVE_PC 
378: 279 281 285 285, r44 -> p115, r44 -> p125 [p115] | MOVSX LOAD 
379: 279 285 286 286, r44 -> p125, r0 -> p97 [p99] | MOVSX SEXT_DWORD_TO_QWORD 
380: 280 286 290 290, r0 -> p97, r6 -> p52 [p88] | MOV LOAD 
381: 281 282 286 290, r2 -> p74, r45 -> p6 [p110] | CMP LOAD 
382: 282 290 291 291, r45 -> p6, r6 -> p52, r44 -> p123 [p125], r49 -> p84 [p127] | CMP SUB 
383: 282 291 292 292, r49 -> p84 | J JMP_IMM 
384: 282 286 290 292, r0 -> p97, r6 -> p60 [p52] | MOV LOAD 
385: 282 283 287 292, r2 -> p74, r45 -> p100 [p6] | CMP LOAD 
386: 285 290 291 292, r45 -> p100, r6 -> p60, r44 -> p50 [p123], r49 -> p124 [p84] | CMP SUB 
387: 286 291 292 293, r49 -> p124 | J JMP_IMM 
388: 290 291 295 295, r0 -> p97, r6 -> p55 [p60] | MOV LOAD 
389: 290 291 295 295, r2 -> p74, r45 -> p51 [p100] | CMP LOAD 
390: 291 295 296 296, r45 -> p51, r6 -> p55, r44 -> p59 [p50], r49 -> p64 [p124] | CMP SUB 
391: 292 296 297 297, r49 -> p64 | J JMP_IMM 
392: 292 293 297 297, r0 -> p97, r6 -> p2 [p55] | MOV LOAD 
393: 292 293 297 297, r2 -> p74, r45 -> p45 [p51] | CMP LOAD 
394: 292 297 298 298, r45 -> p45, r6 -> p2, r44 -> p65 [p59], r49 -> p122 [p64] | CMP SUB 
395: 293 298 299 299, r49 -> p122 | J JMP_IMM 
396: 295 296 297 299, r0 -> p91 [p97] | XOR ADD 
397: 295 296 297 299, r4 -> p95, r4 -> p58 [p95], r49 -> p101 [p122] | ADD ADD_IMM 
398: 296 297 301 301, r4 -> p58, r44 -> p69 [p65] | RET LOAD 
399: 297 298 299 301, r4 -> p58, r4 -> p57 [p58] | RET ADD_IMM 
400: 297 301 302 302, r44 -> p69 | RET JMP_REG 
401: 297 298 299 302, r5 -> p5, r44 -> p66 [p69] | MOV LEA 
402: 298 299 300 302, r0 -> p91, r44 -> p66 | MOV STORE 
403: 299 300 301 302, r0 -> p91, r0 -> p91, r44 -> p44 [p66], r49 -> p4 [p101] | TEST AND 
404: 299 301 302 303, r49 -> p4 | J JMP_IMM 
405: 299 300 301 303, r44 -> p106 [p44] | MOV SAVE_PC 
406: 301 302 306 306, r44 -> p106, r14 -> p79 [p14] | MOV LOAD 
407: 301 306 307 307, r14 -> p79, r14 -> p67 [p79], r49 -> p0 [p4] | ADD ADD_IMM 
408: 302 307 308 308, r14 -> p67, r44 -> p78 [p106], r49 -> p76 [p0] | CMP SUB_IMM 
409: 302 308 309 309, r49 -> p76 | J JMP_IMM 
410: 302 303 307 309, r4 -> p57, r45 -> p68 [p45] | CMP LOAD 
411: 302 307 308 309, r45 -> p68, r44 -> p81 [p78], r49 -> p77 [p76] | CMP SUB_IMM 
412: 303 308 309 309, r49 -> p77 | J JMP_IMM 
413: 303 304 305 310, r13 -> p13, r1 -> p70 [p111] | MOVSX SEXT_DWORD_TO_QWORD 
414: 306 307 308 310, r1 -> p70, r1 -> p70, r1 -> p82 [p70] | LEA LEA 
415: 307 308 312 312, r1 -> p82, r4 -> p57, r44 -> p75 [p81] | MOVSX LOAD 
416: 308 312 313 313, r44 -> p75, r1 -> p7 [p82] | MOVSX SEXT_DWORD_TO_QWORD 
417: 309 313 317 317, r1 -> p7, r14 -> p108 [p67] | MOV LOAD 
418: 309 317 318 318, r14 -> p108, r44 -> p86 [p75], r49 -> p63 [p77] | CMP SUB_IMM 
419: 309 318 319 319, r49 -> p63 | J JMP_IMM 
420: 309 317 318 319, r14 -> p108, r44 -> p54 [p86], r49 -> p114 [p63] | CMP SUB_IMM 
421: 310 318 319 319, r49 -> p114 | J JMP_IMM 
422: 310 313 317 319, r1 -> p7, r1 -> p8 [p7] | MOV LOAD 
423: 312 313 314 320 | JMP JMP_IMM 
424: 313 317 318 320, r1 -> p8, r44 -> p87 [p54], r49 -> p94 [p114] | CMP SUB_IMM 
425: 317 318 319 320, r49 -> p94 | J JMP_IMM 
426: 318 319 320 320, r14 -> p1 [p108] | XOR ADD 
427: 319 320 321 321 | JMP JMP_IMM 
428: 319 320 321 321, r13 -> p13, r1 -> p85 [p8] | MOVSX SEXT_DWORD_TO_QWORD 
429: 319 321 322 322, r1 -> p85, r1 -> p85, r2 -> p61 [p74] | LEA LEA 
430: 319 322 326 326, r2 -> p61, r4 -> p57, r45 -> p71 [p68] | CMP LOAD 
431: 320 326 327 327, r45 -> p71, r44 -> p119 [p87], r49 -> p96 [p94] | CMP SUB 
432: 320 327 328 328, r49 -> p96 | J JMP_IMM 
433: 320 321 322 328, r0 -> p91, r0 -> p91, r44 -> p72 [p119], r49 -> p90 [p96] | TEST AND 
434: 320 321 322 328, r0 -> p49 [p91] | SET ADD 
435: 321 322 323 328, r49 -> p90, r0 -> p80 [p49] | SET ADD_IMM 
436: 321 322 326 329, r4 -> p57, r45 -> p62 [p71] | CMP LOAD 
437: 322 326 327 329, r45 -> p62, r44 -> p56 [p72], r49 -> p89 [p90] | CMP SUB 
438: 326 327 328 329, r49 -> p89 | J JMP_IMM 
439: 327 328 332 332, r4 -> p57, r2 -> p107 [p61] | MOV LOAD 
440: 328 332 333 333, r14 -> p1, r2 -> p107, r5 -> p92 [p5] | LEA LEA 
441: 328 329 333 333, r4 -> p57, r45 -> p117 [p62] | TEST LOAD 
442: 328 333 334 334, r45 -> p117, r44 -> p83 [p56], r49 -> p109 [p89] | TEST AND_IMM 
443: 328 334 335 335, r49 -> p109 | J JMP_IMM 
444: 329 330 331 335, r14 -> p73 [p1] | XOR ADD 
445: 329 330 334 335, r4 -> p57, r7 -> p105 [p93] | MOV LOAD 
446: 329 330 331 335, r12 -> p12, r6 -> p104 [p2] | MOV ADD 
447: 332 333 334 336, r5 -> p92, r2 -> p98 [p107] | MOV ADD 
448: 333 334 335 336, r1 -> p112 [p85] | XOR ADD 
449: 333 334 335 336, r44 -> p118 [p83] | CALL SAVE_PC 
450: 334 335 336 336, r4 -> p57, r4 -> p102 [p57] | CALL SUB_IMM 
451: 335 336 337 337, r44 -> p118, r4 -> p102 | CALL STORE 
452: 335 336 337 337 | CALL JMP_IMM 
453: 335 336 337 337, r5 -> p92, r4 -> p102 | PUSH STORE 
454: 335 336 337 337, r4 -> p102, r4 -> p103 [p102] | PUSH SUB_IMM 
455: 336 337 338 338, r15 -> p15, r4 -> p103 | PUSH STORE 
456: 336 337 338 338, r4 -> p103, r4 -> p120 [p103] | PUSH SUB_IMM 
457: 336 338 339 339, r14 -> p73, r4 -> p120 | PUSH STORE 
458: 336 338 339 339, r4 -> p120, r4 -> p116 [p120] | PUSH SUB_IMM 
459: 337 339 340 340, r13 -> p13, r4 -> p116 | PUSH STORE 
460: 337 339 340 340, r4 -> p116, r4 -> p126 [p116] | PUSH SUB_IMM 
461: 337 340 341 341, r12 -> p12, r4 -> p126 | PUSH STORE 
462: 337 340 341 341, r4 -> p126, r4 -> p113 [p126] | PUSH SUB_IMM 
463: 338 341 342 342, r3 -> p3, r4 -> p113 | PUSH STORE 
464: 338 341 342 342, r4 -> p113, r4 -> p121 [p113] | PUSH SUB_IMM 
465: 339 342 343 343, r4 -> p121, r4 -> p115 [p121], r49 -> p99 [p109] | SUB SUB_IMM 
466: 339 340 341 343, r44 -> p88 [p118] | MOV SAVE_PC 
467: 340 341 345 345, r44 -> p88, r0 -> p110 [p80] | MOV LOAD 
468: 340 345 346 346, r0 -> p110, r0 -> p125 [p110] | INC ADD_IMM 
469: 341 342 343 346, r44 -> p127 [p88] | MOV SAVE_PC 
470: 341 346 347 347, r0 -> p125, r44 -> p127 | MOV STORE 
471: 342 346 347 347, r0 -> p125, r44 -> p52 [p127], r49 -> p6 [p99] | TEST AND_IMM 
472: 342 343 344 347, r1 -> p112, r4 -> p115 | MOV STORE 
473: 343 344 345 347, r2 -> p98, r4 -> p115 | MOV STORE 
474: 343 344 345 348, r6 -> p104, r4 -> p115 | MOV STORE 
475: 345 346 347 348, r7 -> p105, r4 -> p115 | MOV STORE 
476: 346 347 348 348, r49 -> p6 | J JMP_IMM 
477: 346 347 348 348, r4 -> p115 | MOV STORE 
478: 347 348 349 349, r44 -> p123 [p52] | MOVSX SAVE_PC 
479: 347 349 353 353, r44 -> p123, r44 -> p84 [p123] | MOVSX LOAD 
480: 347 353 354 354, r44 -> p84, r3 -> p60 [p3] | MOVSX SEXT_DWORD_TO_QWORD 
481: 347 354 355 355, r3 -> p60, r44 -> p100 [p84] | MOV LEA 
482: 348 355 356 356, r3 -> p60, r44 -> p100 | MOV STORE 
483: 348 349 350 356, r44 -> p50 [p100] | CALL SAVE_PC 
484: 348 349 350 356, r4 -> p115, r4 -> p124 [p115] | CALL SUB_IMM 
485: 348 350 351 356, r44 -> p50, r4 -> p124 | CALL STORE 
486: 349 350 351 357 | CALL JMP_IMM 
487: 353 354 355 357, r44 -> p55 [p50] | MOV SAVE_PC 
488: 354 355 359 359, r44 -> p55, r0 -> p51 [p125] | MOV LOAD 
489: 355 359 360 360, r0 -> p51, r44 -> p59 [p55], r49 -> p64 [p6] | CMP SUB_IMM 
490: 356 360 361 361, r49 -> p64 | J JMP_IMM 
491: 356 359 360 361, r0 -> p51, r44 -> p97 [p59], r49 -> p95 [p64] | CMP SUB_IMM 
492: 356 360 361 361, r49 -> p95 | J JMP_IMM 
493: 356 357 358 361, r0 -> p122 [p51] | XOR ADD 
494: 357 358 362 362, r4 -> p124, r44 -> p65 [p97] | RET LOAD 
495: 357 358 359 362, r4 -> p124, r4 -> p58 [p124] | RET ADD_IMM 
496: 359 362 363 363, r44 -> p65 | RET JMP_REG 
497: 360 361 362 363, r0 -> p122, r0 -> p122, r44 -> p69 [p65], r49 -> p66 [p95] | TEST AND 
498: 361 362 363 363, r49 -> p66 | J JMP_IMM 
499: 361 362 366 366, r3 -> p60, r0 -> p101 [p122] | MOV LOAD 
500: 361 366 367 367, r0 -> p101, r4 -> p58 | MOV STORE 
501: 361 362 363 367, r3 -> p60, r44 -> p44 [p69] | MOV LEA 
502: 362 363 364 367, r44 -> p44 | MOV STORE 
503: 362 363 364 367, r3 -> p60, r44 -> p14 [p44], r49 -> p79 [p66] | CMP SUB_IMM 
504: 363 364 365 368, r49 -> p79 | J JMP_IMM 
505: 363 366 367 368, r0 -> p101, r0 -> p101, r44 -> p4 [p14], r49 -> p106 [p79] | TEST AND 
506: 363 367 368 368, r49 -> p106 | J JMP_IMM 
507: 366 367 368 368, r4 -> p58 | MOV STORE 
508: 367 368 369 369 | JMP JMP_IMM 
509: 367 368 372 372, r4 -> p58, r45 -> p0 [p117] | CMP LOAD 
510: 367 372 373 373, r45 -> p0, r44 -> p45 [p4], r49 -> p78 [p106] | CMP SUB 
511: 367 373 374 374, r49 -> p78 | J JMP_IMM 
512: 368 369 370 374, r44 -> p76 [p45] | MOV SAVE_PC 
513: 368 370 374 374, r44 -> p76, r0 -> p111 [p101] | MOV LOAD 
514: 368 374 375 375, r0 -> p111, r44 -> p70 [p76], r49 -> p81 [p78] | CMP SUB_IMM 
515: 368 375 376 376, r49 -> p81 | J JMP_IMM 
516: 369 374 375 376, r0 -> p111, r44 -> p82 [p70], r49 -> p67 [p81] | CMP SUB_IMM 
517: 372 375 376 376, r49 -> p67 | J JMP_IMM 
518: 373 374 375 376, r2 -> p75 [p98] | MOV ADD_IMM 
519: 374 375 376 377, r2 -> p75, r3 -> p60, r2 -> p77 [p75], r49 -> p86 [p67] | SUB SUB 
520: 374 375 376 377, r44 -> p63 [p82] | MOV ADD_IMM 
521: 374 376 377 377, r45 -> p7 [p0] | MOV SAVE_PC 
522: 375 377 378 378, r44 -> p63, r45 -> p7 | MOV STORE 
523: 376 377 381 381, r4 -> p58, r7 -> p54 [p105] | MOV LOAD 
524: 376 377 381 381, r4 -> p58, r6 -> p114 [p104] | MOV LOAD 
525: 376 377 378 381, r44 -> p108 [p63] | CALL SAVE_PC 
526: 376 378 379 381, r4 -> p58, r4 -> p8 [p58] | CALL SUB_IMM 
527: 377 379 380 382, r44 -> p108, r4 -> p8 | CALL STORE 
528: 377 378 379 382 | CALL JMP_IMM 
529: 377 379 380 382, r5 -> p92, r4 -> p8 | PUSH STORE 
530: 378 379 380 382, r4 -> p8, r4 -> p74 [p8] | PUSH SUB_IMM 
531: 381 382 383 383, r15 -> p15, r4 -> p74 | PUSH STORE 
532: 381 382 383 383, r4 -> p74, r4 -> p68 [p74] | PUSH SUB_IMM 
533: 381 383 384 384, r14 -> p73, r4 -> p68 | PUSH STORE 
534: 381 383 384 384, r4 -> p68, r4 -> p87 [p68] | PUSH SUB_IMM 
535: 382 384 385 385, r13 -> p13, r4 -> p87 | PUSH STORE 
536: 382 384 385 385, r4 -> p87, r4 -> p94 [p87] | PUSH SUB_IMM 
537: 382 385 386 386, r12 -> p12, r4 -> p94 | PUSH STORE 
538: 382 385 386 386, r4 -> p94, r4 -> p119 [p94] | PUSH SUB_IMM 
539: 383 386 387 387, r3 -> p60, r4 -> p119 | PUSH STORE 
540: 383 386 387 387, r4 -> p119, r4 -> p96 [p119] | PUSH SUB_IMM 
541: 384 387 388 388, r4 -> p96, r4 -> p91 [p96], r49 -> p49 [p86] | SUB SUB_IMM 
542: 384 385 386 388, r44 -> p71 [p108] | MOVSX SAVE_PC 
543: 385 386 390 390, r44 -> p71, r44 -> p72 [p71] | MOVSX LOAD 
544: 385 390 391 391, r44 -> p72, r0 -> p90 [p111] | MOVSX SEXT_DWORD_TO_QWORD 
545: 386 391 392 392, r0 -> p90, r44 -> p61 [p72] | MOV LEA 
546: 386 392 393 393, r0 -> p90, r44 -> p61 | MOV STORE 
547: 387 388 389 393, r44 -> p5 [p61] | MOVZX SAVE_PC 
548: 387 389 393 393, r44 -> p5, r44 -> p62 [p5] | MOVZX LOAD 
549: 388 393 394 394, r44 -> p62, r0 -> p56 [p90] | MOVZX ZEXT_WORD_TO_DWORD 
550: 388 394 395 395, r0 -> p56, r0 -> p56, r44 -> p89 [p62], r49 -> p1 [p49] | TEST AND 
551: 390 391 392 395, r2 -> p77, r4 -> p91 | MOV STORE 
552: 391 392 393 395, r6 -> p114, r4 -> p91 | MOV STORE 
553: 392 393 394 395, r7 -> p54, r4 -> p91 | MOV STORE 
554: 393 395 396 396, r49 -> p1 | J JMP_IMM 
555: 393 394 398 398, r4 -> p91, r45 -> p93 [p7] | CMP LOAD 
556: 393 398 399 399, r45 -> p93, r44 -> p2 [p89], r49 -> p107 [p1] | CMP SUB 
557: 394 399 400 400, r49 -> p107 | J JMP_IMM 
558: 395 396 397 400, r45 -> p85 [p93] | CMP SAVE_PC 
559: 395 397 401 401, r45 -> p85, r45 -> p83 [p85] | CMP LOAD 
560: 395 401 402 402, r45 -> p83, r44 -> p57 [p2], r49 -> p102 [p107] | CMP SUB_IMM 
561: 395 402 403 403, r49 -> p102 | J JMP_IMM 
562: 396 397 398 403, r44 -> p103 [p57] | INC SAVE_PC 
563: 398 399 403 403, r44 -> p103, r44 -> p120 [p103] | INC LOAD 
564: 399 403 404 404, r44 -> p120, r44 -> p116 [p120] | INC ADD_IMM 
565: 400 401 402 404, r45 -> p126 [p83] | INC SAVE_PC 
566: 400 404 405 405, r44 -> p116, r45 -> p126 | INC STORE 
567: 401 402 403 405, r44 -> p113 [p116] | INC SAVE_PC 
568: 402 403 407 407, r44 -> p113, r44 -> p121 [p113] | INC LOAD 
569: 403 407 408 408, r44 -> p121, r44 -> p109 [p121] | INC ADD_IMM 
570: 403 404 405 408, r45 -> p118 [p126] | INC SAVE_PC 
571: 403 408 409 409, r44 -> p109, r45 -> p118 | INC STORE 
572: 404 405 406 409, r44 -> p80 [p109] | INC SAVE_PC 
573: 404 406 410 410, r44 -> p80, r44 -> p110 [p80] | INC LOAD 
574: 405 410 411 411, r44 -> p110, r44 -> p88 [p110] | INC ADD_IMM 
575: 405 406 407 411, r45 -> p127 [p118] | INC SAVE_PC 
576: 407 411 412 412, r44 -> p88, r45 -> p127 | INC STORE 
577: 408 409 410 412, r1 -> p99 [p112] | MOV ADD_IMM 
578: 408 409 410 412, r44 -> p52 [p88] | MOV SAVE_PC 
579: 409 410 414 414, r44 -> p52, r6 -> p123 [p114] | MOV LOAD 
580: 409 414 415 415, r6 -> p123, r0 -> p3 [p56] | MOV ADD 
581: 410 415 416 416, r0 -> p3, r1 -> p99, r44 -> p84 [p52], r49 -> p100 [p102] | MUL MUL 
582: 411 416 417 417, r44 -> p84, r0 -> p115 [p3] | MUL ADD 
583: 411 416 417 417, r44 -> p84, r2 -> p50 [p77] | MUL UPPER_HALF 
584: 412 417 418 418, r2 -> p50, r2 -> p125 [p50], r49 -> p55 [p100] | SHR SHR_IMM 
585: 412 418 419 419, r2 -> p125, r0 -> p6 [p115], r49 -> p59 [p55] | IMUL IMUL_T_IMM 
586: 412 414 415 419, r6 -> p123, r1 -> p64 [p99] | MOV ADD 
587: 414 419 420 420, r1 -> p64, r0 -> p6, r1 -> p51 [p64], r49 -> p97 [p59] | SUB SUB 
588: 415 420 421 421, r1 -> p51, r0 -> p124 [p6] | MOV ADD 
589: 416 421 422 422, r0 -> p124, r0 -> p65 [p124], r49 -> p95 [p97] | SHL SHL_IMM 
590: 417 418 419 422, r44 -> p122 [p84] | MOV SAVE_PC 
591: 417 419 423 423, r44 -> p122, r2 -> p69 [p125] | MOV LOAD 
592: 418 423 427 427, r0 -> p65, r2 -> p69, r45 -> p44 [p127] | CMP LOAD 
593: 419 427 428 428, r45 -> p44, r6 -> p123, r44 -> p66 [p122], r49 -> p14 [p95] | CMP SUB 
594: 419 428 429 429, r49 -> p14 | J JMP_IMM 
595: 420 421 422 429, r44 -> p79 [p66] | MOV ADD_IMM 
596: 421 422 423 429, r44 -> p79, r4 -> p91 | MOV STORE 
597: 422 423 427 429, r4 -> p91, r7 -> p117 [p54] | MOV LOAD 
598: 422 423 427 430, r4 -> p91, r3 -> p4 [p60] | MOV LOAD 
599: 423 427 428 430, r3 -> p4, r6 -> p106 [p123] | MOV ADD 
600: 427 428 429 430, r44 -> p45 [p79] | CALL SAVE_PC 
601: 428 429 430 430, r4 -> p91, r4 -> p101 [p91] | CALL SUB_IMM 
602: 429 430 431 431, r44 -> p45, r4 -> p101 | CALL STORE 
603: 429 430 431 431 | CALL JMP_IMM 
604: 429 430 431 431, r5 -> p92, r4 -> p101 | PUSH STORE 
605: 429 430 431 431, r4 -> p101, r4 -> p76 [p101] | PUSH SUB_IMM 
606: 430 431 432 432, r15 -> p15, r4 -> p76 | PUSH STORE 
607: 430 431 432 432, r4 -> p76, r4 -> p78 [p76] | PUSH SUB_IMM 
608: 430 432 433 433, r14 -> p73, r4 -> p78 | PUSH STORE 
609: 430 432 433 433, r4 -> p78, r4 -> p70 [p78] | PUSH SUB_IMM 
610: 431 433 434 434, r13 -> p13, r4 -> p70 | PUSH STORE 
611: 431 433 434 434, r4 -> p70, r4 -> p81 [p70] | PUSH SUB_IMM 
612: 431 434 435 435, r12 -> p12, r4 -> p81 | PUSH STORE 
613: 431 434 435 435, r4 -> p81, r4 -> p98 [p81] | PUSH SUB_IMM 
614: 432 435 436 436, r3 -> p4, r4 -> p98 | PUSH STORE 
615: 432 435 436 436, r4 -> p98, r4 -> p75 [p98] | PUSH SUB_IMM 
616: 433 436 437 437, r4 -> p75, r4 -> p67 [p75], r49 -> p82 [p14] | SUB SUB_IMM 
617: 433 434 435 437, r44 -> p0 [p45] | MOV SAVE_PC 
618: 434 435 439 439, r44 -> p0, r1 -> p105 [p51] | MOV LOAD 
619: 434 439 440 440, r1 -> p105, r44 -> p104 [p0], r49 -> p63 [p82] | CMP SUB_IMM 
620: 435 440 441 441, r49 -> p63 | J JMP_IMM 
621: 435 439 440 441, r1 -> p105, r44 -> p58 [p104], r49 -> p8 [p63] | CMP SUB_IMM 
622: 436 440 441 441, r49 -> p8 | J JMP_IMM 
623: 436 439 440 441, r1 -> p105, r44 -> p74 [p58], r49 -> p68 [p8] | CMP SUB_IMM 
624: 437 440 441 442, r49 -> p68 | J JMP_IMM 
625: 437 438 439 442, r44 -> p87 [p74] | MOV SAVE_PC 
626: 439 440 444 444, r44 -> p87, r1 -> p94 [p105] | MOV LOAD 
627: 440 444 445 445, r1 -> p94, r2 -> p119 [p69] | MOV ADD 
628: 441 445 446 446, r2 -> p119, r2 -> p96 [p119], r49 -> p86 [p68] | NEG SUB 
629: 441 442 443 446, r44 -> p108 [p87] | MOV SAVE_PC 
630: 441 443 447 447, r44 -> p108, r8 -> p71 [p53] | MOV LOAD 
631: 441 447 448 448, r8 -> p71, r8 -> p71, r44 -> p111 [p108], r49 -> p72 [p86] | TEST AND 
632: 442 448 449 449, r1 -> p94, r49 -> p72, r2 -> p61 [p96] | CMOV ADD 
633: 442 443 444 449, r44 -> p5 [p111] | MOV SAVE_PC 
634: 444 445 449 449, r44 -> p5, r1 -> p90 [p94] | MOV LOAD 
635: 445 449 450 450, r2 -> p61, r0 -> p62 [p65] | MOV ADD 
636: 446 450 451 451, r0 -> p62, r1 -> p90, r0 -> p49 [p62], r49 -> p7 [p72] | SUB SUB 
637: 446 451 452 452, r0 -> p49, r6 -> p106, r44 -> p89 [p5], r49 -> p1 [p7] | CMP SUB 
638: 447 452 453 453, r49 -> p1 | J JMP_IMM 
639: 448 449 450 453, r2 -> p61, r1 -> p90, r2 -> p93 [p61], r49 -> p85 [p1] | ADD ADD 
640: 449 450 451 453, r2 -> p93, r7 -> p117, r44 -> p2 [p89], r49 -> p107 [p85] | CMP SUB 
641: 449 451 452 453, r49 -> p107 | J JMP_IMM 
642: 449 450 451 454, r2 -> p93, r0 -> p57 [p49] | MOV ADD 
643: 450 451 452 454 | JMP JMP_IMM 
644: 451 452 453 454, r4 -> p67, r4 -> p103 [p67], r49 -> p120 [p107] | ADD ADD_IMM 
645: 452 453 457 457, r4 -> p103, r3 -> p83 [p4] | POP LOAD 
646: 453 454 455 457, r4 -> p103, r4 -> p116 [p103] | POP ADD_IMM 
647: 453 455 459 459, r4 -> p116, r12 -> p113 [p12] | POP LOAD 
648: 453 455 456 459, r4 -> p116, r4 -> p121 [p116] | POP ADD_IMM 
649: 453 456 460 460, r4 -> p121, r13 -> p126 [p13] | POP LOAD 
650: 454 456 457 460, r4 -> p121, r4 -> p109 [p121] | POP ADD_IMM 
651: 454 457 461 461, r4 -> p109, r14 -> p80 [p73] | POP LOAD 
652: 454 457 458 461, r4 -> p109, r4 -> p110 [p109] | POP ADD_IMM 
653: 457 458 462 462, r4 -> p110, r15 -> p118 [p15] | POP LOAD 
654: 457 458 459 462, r4 -> p110, r4 -> p112 [p110] | POP ADD_IMM 
655: 459 460 464 464, r4 -> p112, r5 -> p88 [p92] | POP LOAD 
656: 459 460 461 464, r4 -> p112, r4 -> p114 [p112] | POP ADD_IMM 
657: 460 461 465 465, r4 -> p114, r44 -> p56 [p2] | RET LOAD 
658: 460 461 462 465, r4 -> p114, r4 -> p52 [p114] | RET ADD_IMM 
659: 461 465 466 466, r44 -> p56 | RET JMP_REG 
660: 461 462 463 466, r0 -> p57, r3 -> p83, r44 -> p102 [p56], r49 -> p3 [p120] | CMP SUB 
661: 462 463 464 466, r0 -> p57, r3 -> p77 [p83] | MOV ADD 
662: 462 463 464 466, r49 -> p3 | J JMP_IMM 
663: 464 465 466 467, r4 -> p52, r7 -> p50 [p117] | LEA LEA 
664: 464 465 466 467, r44 -> p100 [p102] | CALL SAVE_PC 
665: 465 466 467 467, r4 -> p52, r4 -> p115 [p52] | CALL SUB_IMM 
666: 465 467 468 468, r44 -> p100, r4 -> p115 | CALL STORE 
667: 466 467 468 468 | CALL JMP_IMM 
668: 466 467 468 468, r5 -> p88, r4 -> p115 | PUSH STORE 
669: 466 467 468 468, r4 -> p115, r4 -> p55 [p115] | PUSH SUB_IMM 
670: 466 468 469 469, r15 -> p118, r4 -> p55 | PUSH STORE 
671: 467 468 469 469, r4 -> p55, r4 -> p99 [p55] | PUSH SUB_IMM 
672: 467 469 470 470, r14 -> p80, r4 -> p99 | PUSH STORE 
673: 467 469 470 470, r4 -> p99, r4 -> p64 [p99] | PUSH SUB_IMM 
674: 468 470 471 471, r13 -> p126, r4 -> p64 | PUSH STORE 
675: 468 470 471 471, r4 -> p64, r4 -> p59 [p64] | PUSH SUB_IMM 
676: 468 471 472 472, r12 -> p113, r4 -> p59 | PUSH STORE 
677: 468 471 472 472, r4 -> p59, r4 -> p6 [p59] | PUSH SUB_IMM 
678: 469 472 473 473, r3 -> p77, r4 -> p6 | PUSH STORE 
679: 469 472 473 473, r4 -> p6, r4 -> p124 [p6] | PUSH SUB_IMM 
680: 470 473 474 474, r4 -> p124, r4 -> p97 [p124], r49 -> p84 [p3] | SUB SUB_IMM 
681: 470 471 472 474, r44 -> p125 [p100] | MOV SAVE_PC 
682: 471 472 473 474, r44 -> p125 | MOV STORE 
683: 471 472 473 474, r44 -> p127 [p125] | MOV SAVE_PC 
684: 472 473 474 475, r44 -> p127 | MOV STORE 
685: 472 473 474 475, r44 -> p122 [p127] | MOV SAVE_PC 
686: 473 474 475 475, r7 -> p50, r44 -> p122 | MOV STORE 
687: 473 474 475 475, r45 -> p95 [p44] | CMP SAVE_PC 
688: 474 475 479 479, r45 -> p95, r45 -> p66 [p95] | CMP LOAD 
689: 474 479 480 480, r45 -> p66, r44 -> p54 [p122], r49 -> p60 [p84] | CMP SUB_IMM 
690: 474 480 481 481, r49 -> p60 | J JMP_IMM 
691: 474 475 476 481, r44 -> p123 [p54] | MOV SAVE_PC 
692: 475 476 480 481, r44 -> p123, r0 -> p79 [p57] | MOV LOAD 
693: 475 480 481 481, r0 -> p79, r4 -> p97 | MOV STORE 
694: 475 476 477 482, r44 -> p91 [p123] | MOV SAVE_PC 
695: 475 477 481 482, r44 -> p91, r3 -> p101 [p77] | MOV LOAD 
696: 479 480 481 482, r44 -> p76 [p91] | MOV SAVE_PC 
697: 480 481 485 485, r44 -> p76, r0 -> p78 [p79] | MOV LOAD 
698: 481 485 486 486, r0 -> p78, r4 -> p97 | MOV STORE 
699: 481 482 483 486, r44 -> p70 [p76] | MOV SAVE_PC 
700: 481 483 487 487, r44 -> p70, r0 -> p81 [p78] | MOV LOAD 
701: 481 487 488 488, r0 -> p81, r4 -> p97 | MOV STORE 
702: 482 483 484 488, r14 -> p98 [p80] | MOV ADD_IMM 
703: 482 483 484 488 | JMP JMP_IMM 
704: 482 483 487 488, r4 -> p97, r45 -> p75 [p66] | CMP LOAD 
705: 485 487 488 489, r45 -> p75, r44 -> p14 [p70], r49 -> p45 [p60] | CMP SUB 
706: 486 488 489 489, r49 -> p45 | J JMP_IMM 
707: 486 487 488 489, r15 -> p51 [p118] | MOV ADD_IMM 
708: 487 488 489 489, r12 -> p0 [p113] | MOV ADD_IMM 
709: 488 489 490 490 | JMP JMP_IMM 
710: 488 489 493 493, r4 -> p97, r45 -> p82 [p75] | CMP LOAD 
711: 488 493 494 494, r15 -> p51, r45 -> p82, r44 -> p104 [p14], r49 -> p63 [p45] | CMP SUB 
712: 488 494 495 495, r49 -> p63 | J JMP_IMM 
713: 489 490 491 495, r44 -> p58 [p104] | MOV SAVE_PC 
714: 489 491 495 495, r44 -> p58, r0 -> p8 [p81] | MOV LOAD 
715: 489 495 496 496, r0 -> p8, r44 -> p74 [p58], r49 -> p105 [p63] | CMP SUB_IMM 
716: 489 496 497 497, r49 -> p105 | J JMP_IMM 
717: 490 491 492 497, r44 -> p69 [p74] | MOV SAVE_PC 
718: 493 494 498 498, r44 -> p69, r1 -> p119 [p90] | MOV LOAD 
719: 494 498 499 499, r1 -> p119, r44 -> p68 [p69], r49 -> p87 [p105] | CMP SUB_IMM 
720: 495 499 500 500, r49 -> p87 | J JMP_IMM 
721: 495 496 500 500, r12 -> p0, r44 -> p53 [p68] | MOVSX LOAD 
722: 495 500 501 501, r44 -> p53, r13 -> p108 [p126] | MOVSX SEXT_DWORD_TO_QWORD 
723: 496 501 502 502, r13 -> p108, r13 -> p108, r44 -> p86 [p53], r49 -> p96 [p87] | TEST AND 
724: 497 502 503 503, r49 -> p96 | J JMP_IMM 
725: 497 501 502 503, r13 -> p108, r5 -> p111 [p88] | MOV ADD 
726: 498 499 500 503, r44 -> p94 [p86] | MOV SAVE_PC 
727: 499 502 503 503, r5 -> p111, r44 -> p94 | MOV STORE 
728: 500 501 502 504, r15 -> p51, r15 -> p65 [p51] | INC ADD_IMM 
729: 500 501 505 505, r13 -> p108, r1 -> p62 [p119] | MOV LOAD 
730: 501 505 506 506, r1 -> p62, r1 -> p72 [p62] | DEC SUB_IMM 
731: 502 506 507 507, r1 -> p72, r44 -> p5 [p94], r49 -> p7 [p96] | CMP SUB_IMM 
732: 503 507 508 508, r49 -> p7 | J JMP_IMM 
733: 503 506 510 510, r1 -> p72, r44 -> p61 [p5] | JMP LOAD 
734: 503 510 511 511, r44 -> p61 | JMP JMP_REG 
735: 503 504 505 511, r5 -> p111, r7 -> p1 [p50] | LEA LEA 
736: 504 505 506 511, r7 -> p1, r0 -> p89 [p8] | MOVSX SEXT_DWORD_TO_QWORD 
737: 505 506 510 511, r0 -> p89, r45 -> p85 [p82] | CMP LOAD 
738: 506 510 511 512, r45 -> p85, r44 -> p49 [p61], r49 -> p67 [p7] | CMP SUB 
739: 507 511 512 512, r49 -> p67 | J JMP_IMM 
740: 508 509 510 512, r5 -> p111, r7 -> p107 [p1] | LEA LEA 
741: 510 511 512 512, r7 -> p107, r0 -> p4 [p89] | MOVSX SEXT_DWORD_TO_QWORD 
742: 511 512 516 516, r0 -> p4, r45 -> p103 [p85] | CMP LOAD 
743: 511 516 517 517, r45 -> p103, r44 -> p12 [p49], r49 -> p116 [p67] | CMP SUB 
744: 511 517 518 518, r49 -> p116 | J JMP_IMM 
745: 511 512 513 518, r44 -> p13 [p12] | CALL SAVE_PC 
746: 512 513 514 518, r4 -> p97, r4 -> p121 [p97] | CALL SUB_IMM 
747: 512 514 515 518, r44 -> p13, r4 -> p121 | CALL STORE 
748: 512 513 514 519 | CALL JMP_IMM 
749: 512 514 515 519, r14 -> p98, r4 -> p121 | PUSH STORE 
750: 516 517 518 519, r4 -> p121, r4 -> p73 [p121] | PUSH SUB_IMM 
751: 517 518 519 519, r3 -> p101, r4 -> p73 | PUSH STORE 
752: 518 519 520 520, r4 -> p73, r4 -> p109 [p73] | PUSH SUB_IMM 
753: 518 519 520 520, r7 -> p107, r0 -> p15 [p4] | MOVSX SEXT_DWORD_TO_QWORD 
754: 518 520 521 521, r0 -> p15, r0 -> p15, r1 -> p110 [p72] | LEA LEA 
755: 518 519 520 521, r44 -> p92 [p13] | MOVSX SAVE_PC 
756: 519 520 524 524, r44 -> p92, r44 -> p112 [p92] | MOVSX LOAD 
757: 519 524 525 525, r44 -> p112, r2 -> p2 [p93] | MOVSX SEXT_DWORD_TO_QWORD 
758: 519 520 521 525, r0 -> p15, r6 -> p114 [p106] | MOV ADD 
759: 519 525 526 526, r6 -> p114, r2 -> p2, r6 -> p56 [p114], r49 -> p120 [p116] | SUB SUB 
760: 520 526 527 527, r6 -> p56, r6 -> p83 [p56] | MOVSX SEXT_DWORD_TO_QWORD 
761: 520 525 526 527, r1 -> p110, r2 -> p2, r1 -> p117 [p110], r49 -> p102 [p120] | SUB SUB 
762: 521 526 527 527, r1 -> p117, r1 -> p52 [p117] | MOVSX SEXT_DWORD_TO_QWORD 
763: 521 527 528 528, r1 -> p52, r1 -> p115 [p52] | LEA LEA 
764: 524 525 529 529, r2 -> p2, r7 -> p55 [p107] | MOV LOAD 
765: 525 526 527 529, r0 -> p15, r8 -> p99 [p71] | LEA LEA 
766: 525 526 527 529, r9 -> p64 [p9] | XOR ADD 
767: 526 527 528 529, r44 -> p59 [p112] | MOV SAVE_PC 
768: 527 528 532 532, r44 -> p59, r10 -> p6 [p10] | MOV LOAD 
769: 527 528 529 532, r44 -> p124 [p59] | MOV SAVE_PC 
770: 527 529 533 533, r44 -> p124, r11 -> p3 [p11] | MOV LOAD 
771: 528 529 530 533, r44 -> p100 [p124] | MOV SAVE_PC 
772: 529 530 534 534, r44 -> p100, r3 -> p125 [p101] | MOV LOAD 
773: 529 530 531 534 | JMP JMP_IMM 
774: 529 530 534 534, r9 -> p64, r8 -> p99, r14 -> p127 [p98] | MOV LOAD 
775: 529 534 535 535, r14 -> p127, r44 -> p44 [p100], r49 -> p95 [p102] | CMP SUB_IMM 
776: 532 535 536 536, r49 -> p95 | J JMP_IMM 
777: 532 534 535 536, r3 -> p125, r44 -> p122 [p44], r49 -> p84 [p95] | TEST AND_IMM 
778: 533 535 536 536, r49 -> p84 | J JMP_IMM 
779: 533 534 535 536, r0 -> p15, r6 -> p83, r0 -> p54 [p15], r49 -> p57 [p84] | ADD ADD 
780: 534 535 536 537, r6 -> p83, r9 -> p64, r14 -> p123 [p127] | LEA LEA 
781: 534 535 539 539, r9 -> p64, r1 -> p115, r45 -> p77 [p103] | CMP LOAD 
782: 534 539 540 540, r45 -> p77, r44 -> p91 [p122], r49 -> p79 [p57] | CMP SUB 
783: 535 540 541 541, r49 -> p79 | J JMP_IMM 
784: 536 537 538 541, r14 -> p123, r9 -> p76 [p64] | MOV ADD 
785: 536 538 542 542, r9 -> p76, r8 -> p99, r14 -> p78 [p123] | MOV LOAD 
786: 536 542 543 543, r14 -> p78, r44 -> p80 [p91], r49 -> p66 [p79] | CMP SUB_IMM 
787: 536 543 544 544, r49 -> p66 | J JMP_IMM 
788: 537 538 539 544, r3 -> p125, r44 -> p70 [p80], r49 -> p60 [p66] | TEST AND_IMM 
789: 539 540 541 544, r49 -> p60 | J JMP_IMM 
790: 540 541 542 544, r0 -> p54, r6 -> p83, r0 -> p118 [p54], r49 -> p113 [p60] | ADD ADD 
791: 541 542 543 545, r6 -> p83, r9 -> p76, r14 -> p75 [p78] | LEA LEA 
792: 541 542 546 546, r9 -> p76, r1 -> p115, r45 -> p14 [p77] | CMP LOAD 
793: 542 546 547 547, r45 -> p14, r44 -> p45 [p70], r49 -> p104 [p113] | CMP SUB 
794: 543 547 548 548, r49 -> p104 | J JMP_IMM 
795: 544 545 546 548, r44 -> p81 [p45] | MOV SAVE_PC 
796: 544 546 547 548, r10 -> p6, r44 -> p81 | MOV STORE 
797: 544 545 546 548 | JMP JMP_IMM 
798: 544 545 549 549, r4 -> p109, r3 -> p58 [p125] | POP LOAD 
799: 545 546 547 549, r4 -> p109, r4 -> p63 [p109] | POP ADD_IMM 
800: 546 547 551 551, r4 -> p63, r14 -> p74 [p75] | POP LOAD 
801: 547 548 549 551, r4 -> p63, r4 -> p90 [p63] | POP ADD_IMM 
802: 548 549 553 553, r4 -> p90, r44 -> p69 [p81] | RET LOAD 
803: 548 549 550 553, r4 -> p90, r4 -> p105 [p90] | RET ADD_IMM 
804: 548 553 554 554, r44 -> p69 | RET JMP_REG 
805: 548 549 550 554, r5 -> p111, r7 -> p68 [p55] | LEA LEA 
806: 549 550 551 554, r7 -> p68, r0 -> p126 [p118] | MOVSX SEXT_DWORD_TO_QWORD 
807: 549 551 555 555, r0 -> p126, r45 -> p53 [p14] | CMP LOAD 
808: 551 555 556 556, r45 -> p53, r44 -> p87 [p69], r49 -> p88 [p104] | CMP SUB 
809: 551 556 557 557, r49 -> p88 | J JMP_IMM 
810: 553 554 555 557, r44 -> p86 [p87] | CALL SAVE_PC 
811: 553 554 555 557, r4 -> p105, r4 -> p51 [p105] | CALL SUB_IMM 
812: 554 555 556 557, r44 -> p86, r4 -> p51 | CALL STORE 
813: 554 555 556 558 | CALL JMP_IMM 
814: 554 555 556 558, r14 -> p74, r4 -> p51 | PUSH STORE 
815: 555 556 557 558, r4 -> p51, r4 -> p119 [p51] | PUSH SUB_IMM 
816: 556 557 558 558, r3 -> p58, r4 -> p119 | PUSH STORE 
817: 557 558 559 559, r4 -> p119, r4 -> p62 [p119] | PUSH SUB_IMM 
818: 557 558 559 559, r7 -> p68, r0 -> p94 [p126] | MOVSX SEXT_DWORD_TO_QWORD 
819: 557 559 560 560, r0 -> p94, r0 -> p94, r1 -> p96 [p115] | LEA LEA 
820: 557 558 559 560, r44 -> p5 [p86] | MOVSX SAVE_PC 
821: 558 559 563 563, r44 -> p5, r44 -> p50 [p5] | MOVSX LOAD 
822: 558 563 564 564, r44 -> p50, r2 -> p8 [p2] | MOVSX SEXT_DWORD_TO_QWORD 
823: 558 559 560 564, r0 -> p94, r6 -> p82 [p83] | MOV ADD 
824: 558 564 565 565, r6 -> p82, r2 -> p8, r6 -> p61 [p82], r49 -> p7 [p88] | SUB SUB 
825: 559 565 566 566, r6 -> p61, r6 -> p1 [p61] | MOVSX SEXT_DWORD_TO_QWORD 
826: 559 564 565 566, r1 -> p96, r2 -> p8, r1 -> p89 [p96], r49 -> p85 [p7] | SUB SUB 
827: 560 565 566 566, r1 -> p89, r1 -> p49 [p89] | MOVSX SEXT_DWORD_TO_QWORD 
828: 560 566 567 567, r1 -> p49, r1 -> p67 [p49] | LEA LEA 
829: 563 564 568 568, r2 -> p8, r7 -> p12 [p68] | MOV LOAD 
830: 564 565 566 568, r0 -> p94, r8 -> p97 [p99] | LEA LEA 
831: 564 565 566 568, r9 -> p121 [p76] | XOR ADD 
832: 565 566 567 568, r44 -> p73 [p50] | MOV SAVE_PC 
833: 566 567 571 571, r44 -> p73, r10 -> p4 [p6] | MOV LOAD 
834: 566 567 568 571, r44 -> p72 [p73] | MOV SAVE_PC 
835: 566 568 572 572, r44 -> p72, r11 -> p13 [p3] | MOV LOAD 
836: 567 568 569 572, r44 -> p92 [p72] | MOV SAVE_PC 
837: 568 569 573 573, r44 -> p92, r3 -> p93 [p58] | MOV LOAD 
838: 568 569 570 573 | JMP JMP_IMM 
839: 568 569 573 573, r9 -> p121, r8 -> p97, r14 -> p106 [p74] | MOV LOAD 
840: 568 573 574 574, r14 -> p106, r44 -> p114 [p92], r49 -> p116 [p85] | CMP SUB_IMM 
841: 571 574 575 575, r49 -> p116 | J JMP_IMM 
842: 571 573 574 575, r3 -> p93, r44 -> p56 [p114], r49 -> p110 [p116] | TEST AND_IMM 
843: 572 574 575 575, r49 -> p110 | J JMP_IMM 
844: 572 573 574 575, r0 -> p94, r6 -> p1, r0 -> p120 [p94], r49 -> p117 [p110] | ADD ADD 
845: 573 574 575 576, r6 -> p1, r9 -> p121, r14 -> p52 [p106] | LEA LEA 
846: 573 574 578 578, r9 -> p121, r1 -> p67, r45 -> p107 [p53] | CMP LOAD 
847: 573 578 579 579, r45 -> p107, r44 -> p71 [p56], r49 -> p9 [p117] | CMP SUB 
848: 574 579 580 580, r49 -> p9 | J JMP_IMM 
849: 575 576 577 580, r14 -> p52, r9 -> p112 [p121] | MOV ADD 
850: 575 577 581 581, r9 -> p112, r8 -> p97, r14 -> p10 [p52] | MOV LOAD 
851: 575 581 582 582, r14 -> p10, r44 -> p59 [p71], r49 -> p11 [p9] | CMP SUB_IMM 
852: 575 582 583 583, r49 -> p11 | J JMP_IMM 
853: 576 577 578 583, r44 -> p124 [p59] | MOV SAVE_PC 
854: 578 579 580 583, r10 -> p4, r44 -> p124 | MOV STORE 
855: 579 581 582 583, r7 -> p12, r14 -> p10, r7 -> p101 [p12], r49 -> p98 [p11] | XOR XOR 
856: 580 582 583 584, r7 -> p101, r44 -> p100 [p124], r49 -> p102 [p98] | TEST AND_IMM 
857: 580 583 584 584, r49 -> p102 | J JMP_IMM 
858: 581 582 586 586, r4 -> p62, r3 -> p44 [p93] | POP LOAD 
859: 582 583 584 586, r4 -> p62, r4 -> p95 [p62] | POP ADD_IMM 
860: 583 584 588 588, r4 -> p95, r14 -> p15 [p10] | POP LOAD 
861: 583 584 585 588, r4 -> p95, r4 -> p84 [p95] | POP ADD_IMM 
862: 583 585 589 589, r4 -> p84, r44 -> p127 [p100] | RET LOAD 
863: 583 585 586 589, r4 -> p84, r4 -> p103 [p84] | RET ADD_IMM 
864: 584 589 590 590, r44 -> p127 | RET JMP_REG 
865: 584 585 586 590, r5 -> p111, r7 -> p122 [p101] | LEA LEA 
866: 586 587 588 590, r7 -> p122, r0 -> p57 [p120] | MOVSX SEXT_DWORD_TO_QWORD 
867: 586 588 592 592, r0 -> p57, r45 -> p64 [p107] | CMP LOAD 
868: 588 592 593 593, r45 -> p64, r44 -> p123 [p127], r49 -> p91 [p102] | CMP SUB 
869: 588 593 594 594, r49 -> p91 | J JMP_IMM 
870: 589 590 591 594, r44 -> p79 [p123] | CALL SAVE_PC 
871: 589 590 591 594, r4 -> p103, r4 -> p80 [p103] | CALL SUB_IMM 
872: 590 591 592 594, r44 -> p79, r4 -> p80 | CALL STORE 
873: 590 591 592 595 | CALL JMP_IMM 
874: 590 591 592 595, r14 -> p15, r4 -> p80 | PUSH STORE 
875: 592 593 594 595, r4 -> p80, r4 -> p66 [p80] | PUSH SUB_IMM 
876: 593 594 595 595, r3 -> p44, r4 -> p66 | PUSH STORE 
877: 594 595 596 596, r4 -> p66, r4 -> p54 [p66] | PUSH SUB_IMM 
878: 594 595 596 596, r7 -> p122, r0 -> p60 [p57] | MOVSX SEXT_DWORD_TO_QWORD 
879: 594 596 597 597, r0 -> p60, r0 -> p60, r1 -> p78 [p67] | LEA LEA 
880: 594 595 596 597, r44 -> p77 [p79] | MOVSX SAVE_PC 
881: 595 596 600 600, r44 -> p77, r44 -> p70 [p77] | MOVSX LOAD 
882: 595 600 601 601, r44 -> p70, r2 -> p113 [p8] | MOVSX SEXT_DWORD_TO_QWORD 
883: 595 596 597 601, r0 -> p60, r6 -> p45 [p1] | MOV ADD 
884: 595 601 602 602, r6 -> p45, r2 -> p113, r6 -> p125 [p45], r49 -> p109 [p91] | SUB SUB 
885: 596 602 603 603, r6 -> p125, r6 -> p75 [p125] | MOVSX SEXT_DWORD_TO_QWORD 
886: 596 601 602 603, r1 -> p78, r2 -> p113, r1 -> p63 [p78], r49 -> p81 [p109] | SUB SUB 
887: 597 602 603 603, r1 -> p63, r1 -> p90 [p63] | MOVSX SEXT_DWORD_TO_QWORD 
888: 597 603 604 604, r1 -> p90, r1 -> p55 [p90] | LEA LEA 
889: 600 601 605 605, r2 -> p113, r7 -> p118 [p122] | MOV LOAD 
890: 601 602 603 605, r0 -> p60, r8 -> p14 [p97] | LEA LEA 
891: 601 602 603 605, r9 -> p69 [p112] | XOR ADD 
892: 602 603 604 605, r44 -> p104 [p70] | MOV SAVE_PC 
893: 603 604 608 608, r44 -> p104, r10 -> p87 [p4] | MOV LOAD 
894: 603 604 605 608, r44 -> p105 [p104] | MOV SAVE_PC 
895: 603 605 609 609, r44 -> p105, r11 -> p51 [p13] | MOV LOAD 
896: 604 605 606 609, r44 -> p119 [p105] | MOV SAVE_PC 
897: 605 606 610 610, r44 -> p119, r3 -> p126 [p44] | MOV LOAD 
898: 605 606 607 610 | JMP JMP_IMM 
899: 605 606 610 610, r9 -> p69, r8 -> p14, r14 -> p115 [p15] | MOV LOAD 
900: 605 610 611 611, r14 -> p115, r44 -> p86 [p119], r49 -> p5 [p81] | CMP SUB_IMM 
901: 608 611 612 612, r49 -> p5 | J JMP_IMM 
902: 608 609 610 612, r44 -> p2 [p86] | MOV SAVE_PC 
903: 609 610 611 612, r10 -> p87, r44 -> p2 | MOV STORE 
904: 609 610 611 612, r7 -> p118, r14 -> p115, r7 -> p83 [p118], r49 -> p82 [p5] | XOR XOR 
905: 610 611 612 613, r7 -> p83, r44 -> p88 [p2], r49 -> p61 [p82] | TEST AND_IMM 
906: 610 612 613 613, r49 -> p61 | J JMP_IMM 
907: 610 611 612 613, r45 -> p96 [p64] | CMP SAVE_PC 
908: 611 612 616 616, r45 -> p96, r45 -> p7 [p96] | CMP LOAD 
909: 612 616 617 617, r45 -> p7, r44 -> p89 [p88], r49 -> p49 [p61] | CMP SUB_IMM 
910: 612 617 618 618, r49 -> p49 | J JMP_IMM 
911: 612 613 614 618, r14 -> p115, r44 -> p68 [p89], r49 -> p99 [p49] | CMP SUB_IMM 
912: 612 614 615 618, r49 -> p99 | J JMP_IMM 
913: 613 614 615 618, r14 -> p115, r1 -> p76 [p55] | LEA LEA 
914: 613 615 616 619, r1 -> p76, r44 -> p50 [p68], r49 -> p6 [p99] | CMP SUB_IMM 
915: 613 616 617 619, r49 -> p6 | J JMP_IMM 
916: 616 617 618 619, r44 -> p73 [p50] | MOV ADD_IMM 
917: 617 618 619 619, r45 -> p3 [p7] | MOV SAVE_PC 
918: 618 619 620 620, r44 -> p73, r45 -> p3 | MOV STORE 
919: 618 619 620 620, r10 -> p87, r1 -> p72 [p76] | MOVSX SEXT_DWORD_TO_QWORD 
920: 618 620 621 621, r1 -> p72, r1 -> p72, r1 -> p58 [p72] | LEA LEA 
921: 618 619 620 621, r44 -> p74 [p73] | MOV SAVE_PC 
922: 619 620 624 624, r44 -> p74, r10 -> p92 [p87] | MOV LOAD 
923: 619 620 621 624, r44 -> p85 [p74] | MOV SAVE_PC 
924: 619 621 625 625, r44 -> p85, r2 -> p114 [p113] | MOV LOAD 
925: 619 625 626 626, r1 -> p58, r2 -> p114, r44 -> p116 [p85] | MOV LEA 
926: 620 626 627 627, r10 -> p92, r44 -> p116 | MOV STORE 
927: 620 621 622 627, r44 -> p94 [p116] | MOVSX SAVE_PC 
928: 621 622 626 627, r44 -> p94, r44 -> p110 [p94] | MOVSX LOAD 
929: 621 626 627 627, r44 -> p110, r1 -> p106 [p58] | MOVSX SEXT_DWORD_TO_QWORD 
930: 624 627 628 628, r1 -> p106, r1 -> p106, r1 -> p53 [p106] | LEA LEA 
931: 624 625 626 628, r44 -> p56 [p110] | MOV SAVE_PC 
932: 625 626 630 630, r44 -> p56, r2 -> p117 [p114] | MOV LOAD 
933: 626 630 631 631, r1 -> p53, r2 -> p117, r44 -> p121 [p56] | MOV LEA 
934: 627 631 632 632, r0 -> p60, r44 -> p121 | MOV STORE 
935: 627 628 629 632, r44 -> p52 [p121] | MOVSX SAVE_PC 
936: 627 629 633 633, r44 -> p52, r44 -> p71 [p52] | MOVSX LOAD 
937: 627 633 634 634, r44 -> p71, r0 -> p9 [p60] | MOVSX SEXT_DWORD_TO_QWORD 
938: 628 634 635 635, r0 -> p9, r0 -> p9, r0 -> p59 [p9] | LEA LEA 
939: 628 629 630 635, r44 -> p12 [p71] | MOV SAVE_PC 
940: 630 631 635 635, r44 -> p12, r1 -> p11 [p53] | MOV LOAD 
941: 631 635 636 636, r0 -> p59, r1 -> p11, r44 -> p124 [p12] | MOV LEA 
942: 632 636 637 637, r14 -> p115, r44 -> p124 | MOV STORE 
943: 632 633 634 637, r44 -> p98 [p124] | MOVSX SAVE_PC 
944: 633 634 638 638, r44 -> p98, r44 -> p93 [p98] | MOVSX LOAD 
945: 634 638 639 639, r44 -> p93, r0 -> p62 [p59] | MOVSX SEXT_DWORD_TO_QWORD 
946: 635 639 640 640, r0 -> p62, r0 -> p62, r0 -> p10 [p62] | LEA LEA 
947: 635 636 637 640, r44 -> p95 [p93] | MOV SAVE_PC 
948: 635 637 641 641, r44 -> p95, r1 -> p100 [p11] | MOV LOAD 
949: 636 641 642 642, r0 -> p10, r1 -> p100, r44 -> p84 [p95] | MOV LEA 
950: 637 642 643 643, r44 -> p84 | MOV STORE 
951: 637 638 639 643, r44 -> p101 [p84] | MOVSX SAVE_PC 
952: 638 639 643 643, r44 -> p101, r44 -> p120 [p101] | MOVSX LOAD 
953: 639 643 644 644, r44 -> p120, r0 -> p107 [p10] | MOVSX SEXT_DWORD_TO_QWORD 
954: 640 644 645 645, r0 -> p107, r0 -> p107, r0 -> p127 [p107] | LEA LEA 
955: 640 641 642 645, r44 -> p102 [p120] | MOV SAVE_PC 
956: 641 642 646 646, r44 -> p102, r1 -> p123 [p100] | MOV LOAD 
957: 642 646 647 647, r0 -> p127, r1 -> p123, r44 -> p103 [p102] | MOV LEA 
958: 643 647 648 648, r44 -> p103 | MOV STORE 
959: 643 644 645 648, r44 -> p80 [p103] | MOVSX SAVE_PC 
960: 643 645 649 649, r44 -> p80, r44 -> p66 [p80] | MOVSX LOAD 
961: 644 649 650 650, r44 -> p66, r0 -> p57 [p127] | MOVSX SEXT_DWORD_TO_QWORD 
962: 645 650 651 651, r0 -> p57, r0 -> p57, r0 -> p67 [p57] | LEA LEA 
963: 645 646 647 651, r44 -> p79 [p66] | MOV SAVE_PC 
964: 646 647 651 651, r44 -> p79, r1 -> p77 [p123] | MOV LOAD 
965: 647 651 652 652, r0 -> p67, r1 -> p77, r44 -> p8 [p79] | MOV LEA 
966: 648 652 653 653, r44 -> p8 | MOV STORE 
967: 648 649 650 653, r44 -> p1 [p8] | INC SAVE_PC 
968: 649 650 654 654, r44 -> p1, r44 -> p45 [p1] | INC LOAD 
969: 650 654 655 655, r44 -> p45, r44 -> p91 [p45] | INC ADD_IMM 
970: 651 652 653 655, r45 -> p125 [p3] | INC SAVE_PC 
971: 651 655 656 656, r44 -> p91, r45 -> p125 | INC STORE 
972: 651 652 656 656, r4 -> p54, r3 -> p78 [p126] | POP LOAD 
973: 652 653 654 656, r4 -> p54, r4 -> p109 [p54] | POP ADD_IMM 
974: 653 654 658 658, r4 -> p109, r14 -> p63 [p115] | POP LOAD 
975: 653 654 655 658, r4 -> p109, r4 -> p90 [p109] | POP ADD_IMM 
976: 654 655 659 659, r4 -> p90, r44 -> p122 [p91] | RET LOAD 
977: 655 656 657 659, r4 -> p90, r4 -> p97 [p90] | RET ADD_IMM 
978: 655 659 660 660, r44 -> p122 | RET JMP_REG 
979: 656 657 658 660 | JMP JMP_IMM 
980: 656 657 658 660, r12 -> p0, r12 -> p112 [p0], r49 -> p70 [p6] | ADD ADD_IMM 
981: 656 657 661 661, r4 -> p97, r45 -> p4 [p125] | CMP LOAD 
982: 658 661 662 662, r15 -> p65, r45 -> p4, r44 -> p104 [p122], r49 -> p13 [p70] | CMP SUB 
983: 658 662 663 663, r49 -> p13 | J JMP_IMM 
984: 659 660 661 663, r44 -> p105 [p104] | MOV SAVE_PC 
985: 659 661 665 665, r44 -> p105, r0 -> p44 [p67] | MOV LOAD 
986: 660 665 666 666, r0 -> p44, r44 -> p15 [p105], r49 -> p119 [p13] | CMP SUB_IMM 
987: 660 666 667 667, r49 -> p119 | J JMP_IMM 
988: 660 661 662 667, r44 -> p81 [p15] | MOV SAVE_PC 
989: 661 662 666 667, r44 -> p81, r1 -> p86 [p77] | MOV LOAD 
990: 662 666 667 667, r1 -> p86, r44 -> p118 [p81], r49 -> p5 [p119] | CMP SUB_IMM 
991: 663 667 668 668, r49 -> p5 | J JMP_IMM 
992: 663 664 668 668, r12 -> p112, r44 -> p2 [p118] | MOVSX LOAD 
993: 665 668 669 669, r44 -> p2, r13 -> p82 [p108] | MOVSX SEXT_DWORD_TO_QWORD 
994: 666 669 670 670, r13 -> p82, r13 -> p82, r44 -> p64 [p2], r49 -> p96 [p5] | TEST AND 
995: 667 670 671 671, r49 -> p96 | J JMP_IMM 
996: 667 669 670 671, r13 -> p82, r5 -> p88 [p111] | MOV ADD 
997: 667 668 669 671, r44 -> p61 [p64] | MOV SAVE_PC 
998: 667 670 671 671, r5 -> p88, r44 -> p61 | MOV STORE 
999: 668 669 670 672, r15 -> p65, r15 -> p89 [p65] | INC ADD_IMM 
1000: 668 669 673 673, r13 -> p82, r1 -> p49 [p86] | MOV LOAD 
Completed Trace @ cycle 674. Ending Simulation...
Processed 1000 trace lines.
Instructions:
  N Fetched =    		1000
  N Committed =  		1000
Stalls:
  Fetch stalled (ROB full) =    572
IPC: 				1.484
